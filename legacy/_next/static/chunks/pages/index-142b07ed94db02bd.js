(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{939:function(e){function i(e){var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}i.keys=function(){return[]},i.resolve=i,i.id=939,e.exports=i},2766:function(e,i,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(7405)}])},7405:function(e,i,t){"use strict";t.r(i),t.d(i,{default:function(){return te}});var n=t(4246),s=t(7378),o=t(3615),r=t.n(o),a=t(6407),l=t.n(a),c=t(694),d=t(7554),u=t(8755);class f extends s.Component{render(){let e=this.props.error,i="";return e.line&&(i+="Line: "+e.line+" "),e.character&&(i+="Character: "+e.character),""===i&&e.evidence&&(i="Evidence: "),(0,n.jsxs)("div",{className:"em-body issue",children:[(0,n.jsxs)("h4",{className:"em-header clearfix mt-4",children:[(0,n.jsx)("strong",{className:"em-header pull-left",children:e.file.name}),(0,n.jsxs)("strong",{className:"em-header pull-right",children:[e.file.size/1e3," KB | ",e.file.type]})]}),(0,n.jsxs)("span",{className:"e-meta",children:[(0,n.jsx)("label",{children:"Location: "}),(0,n.jsx)("p",{children:e.file.webkitRelativePath}),(0,n.jsx)("label",{children:"Reason: "}),(0,n.jsx)("p",{children:e.reason})]}),(0,n.jsxs)("span",{className:"e-meta",children:[(0,n.jsx)("label",{children:i}),(0,n.jsx)("p",{children:e.evidence})]})]})}}f.propTypes={file:r().object,error:r().object,type:r().string.isRequired};class h extends s.Component{render(){let e=this,i=this.props.issues.map((i,t)=>{let s=i.files;-1===this.state.showMore.indexOf(t)&&(s=i.files.slice(0,10));let o=!1,r=s.map(function(i,t){if(i&&i.file)return o=!0,(0,n.jsx)(f,{type:e.props.issueType,error:i,index:t},t)});return o?(0,n.jsxs)(c.Z,{className:"validation-error fadeIn",children:[(0,n.jsx)(c.Z.Header,{className:"error-header","aria-expanded":this.state.errorOpen,"aria-controls":"error_"+t,onClick:()=>this.setState({errorOpen:!this.state.errorOpen}),children:this._header(i,t,this.props.issueType,o)}),(0,n.jsx)(u.Z,{in:this.state.errorOpen,children:(0,n.jsxs)(c.Z.Body,{id:"error_"+t,children:[r,this._viewMore(i.files,t)]})})]},t):(0,n.jsx)("div",{className:"panel panel-default",children:(0,n.jsx)("div",{className:"panel-heading",children:this._header(i,t,this.props.issueType,o)})},t)});return(0,n.jsx)("div",{children:i})}_header(e,i,t,s){let o,r=l()("files",e.files.length);return s&&(o=(0,n.jsxs)("span",{className:"pull-right",children:[e.files.length," ",r]})),(0,n.jsxs)("span",{className:"panel-title file-header",children:[(0,n.jsx)("h4",{className:"em-header clearfix",children:(0,n.jsxs)("strong",{className:"em-header pull-left",children:[t," ",i+1,": [Code ",e.code,"] ",e.key]})}),this._issueLink(e),e.reason,o]})}_issueLink(e){return e&&e.helpUrl?(0,n.jsx)("p",{children:(0,n.jsx)("a",{target:"_blank",href:e.helpUrl,children:"Click here for more information about this issue"})}):null}_viewMore(e,i){if(-1===this.state.showMore.indexOf(i)&&e.length>10)return(0,n.jsx)("div",{className:"issues-view-more",onClick:this._showMore.bind(this,i),children:(0,n.jsxs)("button",{children:["View ",e.length-10," more files"]})})}_showMore(e){let i=this.state.showMore;i.push(e),this.setState({showMore:i})}constructor(){super(),this.state={showMore:[],errorOpen:!1}}}h.propTypes={issues:r().array.isRequired,issueType:r().string.isRequired};class p extends s.Component{render(){let e,i,t=this.props.errors,s=this.props.warnings;if(t.length>0){let i=this._countFiles(t),s=(0,n.jsxs)("span",{children:["view ",t.length," ",l()("error",t.length)," ",this._countText(i)]});e=(0,n.jsxs)(c.Z,{className:"fadeIn upload-panel error-wrap my-3",children:[(0,n.jsx)(d.Z,{onClick:()=>this.setState({errorsOpen:!this.state.errorsOpen}),"aria-controls":"errors-issues","aria-expanded":this.state.errorsOpen,variant:"danger",className:"mb-0",children:s}),(0,n.jsx)(u.Z,{in:this.state.errorsOpen,children:(0,n.jsx)(c.Z.Body,{id:"errors-issues",children:(0,n.jsx)(h,{issues:t,issueType:"Error"})})})]},"1")}if(s.length>0){let e=this._countFiles(s),t=(0,n.jsxs)("span",{children:["view ",s.length," ",l()("warning",s.length)," ",this._countText(e)]});i=(0,n.jsxs)(c.Z,{className:"fadeIn upload-panel warning-wrap my-3",children:[(0,n.jsx)(d.Z,{onClick:()=>this.setState({warningsOpen:!this.state.warningsOpen}),"aria-controls":"warning-issues","aria-expanded":this.state.warningsOpen,variant:"warning",className:"mb-0",children:t}),(0,n.jsx)(u.Z,{in:this.state.warningsOpen,children:(0,n.jsx)(c.Z.Body,{id:"warning-issues",children:(0,n.jsx)(h,{issues:s,issueType:"Warning"})})})]},"2")}return(0,n.jsxs)("div",{children:[e,i]})}_countFiles(e){let i=0;for(let t of e)(t.files.length>1||t.files[0].file)&&(i+=t.files.length);return i}_countText(e){if(e>0)return(0,n.jsxs)("span",{children:["in ",e," ",l()("files",e)]})}constructor(){super(),this.state={warningsOpen:!1,errorsOpen:!1}}}p.propTypes={errors:r().array,warnings:r().array},p.Props={errors:[],warnings:[]};class m extends s.Component{render(){let e=(0,n.jsxs)("div",{className:"loading-wrap fadeIn",children:[(0,n.jsx)("div",{className:"spinner",children:(0,n.jsx)("div",{className:"spinnerinner"})}),(0,n.jsx)("span",{children:this.props.text})]});return this.props.active?e:null}}m.propTypes={text:r().string,active:r().bool},m.defaultProps={text:"Loading",active:!1};class _ extends s.Component{render(){let e=this._generateErrorLog(this.props.errors,this.props.warnings);return(0,n.jsxs)("a",{download:this.props.dirName+"_errors.txt",className:"error-log",target:"_blank",href:e,children:["Download error log for ",this.props.dirName]})}_generateErrorLog(e,i){let t=this._generateIssueLog(e,"Error");return"data:application/octet-stream;charset=utf-8,"+encodeURIComponent(t+=this._generateIssueLog(i,"Warning"))}_generateIssueLog(e,i){let t="";for(var n=0;n<e.length;n++){t+="File Path: "+e[n].reason+"\n\n";for(var s=0;s<e[n].files.length;s++){var o=e[n].files[s];t+="	Type:		"+i+"\n",o&&o.file&&(o.file.name&&(t+="	File:		"+o.file.name+"\n"),o.file.webkitRelativePath&&(t+="	Location:		"+o.file.webkitRelativePath+"\n"),o.reason&&(t+="	Reason:		"+o.reason+"\n"),o.line&&(t+="	Line:		"+o.line+"\n"),o.character&&(t+="	Character:	"+o.character+"\n"),o.evidence&&(t+="	Evidence:	"+o.evidence+"\n\n"))}t+="\n======================================================\n\n\n"}return t}}var y=t(5807),g=t.n(y);class v extends s.Component{render(){if(this.props.items)return this.props.items.map((e,i)=>(0,n.jsx)("li",{children:e},i))}}v.propTypes={items:r().array},v.defaultProps={items:[]};class b extends s.Component{render(){let e=this.props.summary;if(!e)return null;var i=e.sessions.length>0?e.sessions.length:1;return(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{children:this.props.dirName}),(0,n.jsx)("div",{className:"card container my-3",children:(0,n.jsxs)("div",{className:"card-header row summary p-4",children:[(0,n.jsxs)("div",{className:"col-sm",children:[(0,n.jsx)("h5",{children:"Summary"}),(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:[e.totalFiles," ",l()("File",e.totalFiles),", ",g()(e.size)]}),(0,n.jsxs)("li",{children:[e.subjects.length," -"," ",l()("Subject",e.subjects.length)]}),(0,n.jsxs)("li",{children:[i," - ",l()("Session",i)]})]})]}),(0,n.jsxs)("div",{className:"col-sm",children:[(0,n.jsx)("h5",{children:"Available Tasks"}),(0,n.jsx)("ul",{children:(0,n.jsx)(v,{items:e.tasks})})]}),(0,n.jsxs)("div",{className:"col-sm",children:[(0,n.jsx)("h5",{children:"Available Modalities"}),(0,n.jsx)("ul",{children:(0,n.jsx)(v,{items:e.modalities})})]})]})})]})}}class S extends s.Component{render(){let e,i=this.props.errors,t=this.props.warnings,s=this.props.dirName,o=0,r=0;"Invalid"!==i&&(r=(o=t.length)+" "+l()("Warning",o));let a=(0,n.jsxs)("h5",{children:["Click to view details on"," ",(0,n.jsx)("a",{href:"https://bids-specification.readthedocs.io/en/stable/",target:"_blank",children:"BIDS specification"})]}),c=(0,n.jsxs)("h4",{children:["This directory failed an initial Quick Test. This means the basic names and structure of the files and directories do not comply with BIDS specification. ",(0,n.jsx)("span",{onClick:this._reset,children:"Select a new folder"})," ","and try again."]}),d=(0,n.jsxs)("h4",{children:["We found ",r," in your dataset."]}),u=(0,n.jsx)("h4",{children:"Your dataset is not a valid BIDS dataset."}),f=(0,n.jsx)("h4",{children:"This is a valid BIDS dataset!"}),h=(0,n.jsxs)("h5",{children:["If you have any questions please post on"," ",(0,n.jsx)("a",{href:"https://neurostars.org/tags/bids",target:"_blank",children:"Neurostars"})]}),y=(0,n.jsxs)("h5",{children:["The source code for the validator can be found"," ",(0,n.jsx)("a",{href:"https://github.com/bids-standard/bids-validator",target:"_blank",children:"here"})]});e="Invalid"===i?c:i.length>0?u:t.length>0?d:f;let g=(0,n.jsx)(m,{text:"validating",active:"validating"===this.props.status}),v=(0,n.jsxs)("div",{className:"card card-header container issues my-3",children:[(0,n.jsx)("button",{type:"button",className:"close","aria-label":"Close",onClick:this._reset,children:(0,n.jsx)("span",{"aria-hidden":"true",children:"\xd7"})}),(0,n.jsx)(b,{summary:this.props.summary,dirName:this.props.dirName}),e,"Invalid"!==i?(0,n.jsx)(p,{errors:i,warnings:t}):null,i.length>0&&"Invalid"!==i||t.length>0?(0,n.jsx)(_,{dirName:s,errors:i,warnings:t}):null,a,h,y]});return(0,n.jsx)("div",{children:"validating"===this.props.status?g:v})}constructor(e){super(e),this._reset=this.props.reset.bind(this)}}S.propTypes={reset:r().func,errors:r().array,warnings:r().array,dirName:r().string,status:r().string},S.defaultProps={reset:()=>{},errors:[],warnings:[],dirName:"",status:""};class T extends s.Component{render(){return(0,n.jsx)("input",{type:"file",className:"dirUpload-btn",onClick:this.props.onClick,onChange:this._onFileSelect.bind(this),ref:this.fileSelectRef,directory:"",webkitdirectory:""})}_onFileSelect(e){if(e.target&&e.target.files.length>0){let i=e.target.files;this.props.onChange({list:i})}}}var I=e=>{let{setOption:i,options:t}=e;return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("form",{className:"options",onClick:i,children:[(0,n.jsx)("label",{children:(0,n.jsx)("strong",{children:"Options:"})}),(0,n.jsx)("input",{name:"ignoreWarnings",type:"checkbox",checked:t.ignoreWarnings,readOnly:!0}),(0,n.jsx)("label",{htmlFor:"ignoreWarnings",children:"Ignore Warnings"}),(0,n.jsx)("input",{name:"ignoreNiftiHeaders",type:"checkbox",checked:t.ignoreNiftiHeaders,readOnly:!0}),(0,n.jsx)("label",{htmlFor:"ignoreNiftiHeaders",children:"Ignore NIfTI Headers"}),(0,n.jsx)("input",{name:"ignoreSubjectConsistency",type:"checkbox",checked:t.ignoreSubjectConsistency,readOnly:!0}),(0,n.jsx)("label",{htmlFor:"ignoreSubjectConsistency",children:"Skip Subject Filename Consistency Check"})]}),(0,n.jsx)("hr",{})]})};class A extends s.Component{render(){let{options:e,handleOptionToggle:i}=this.props,t=(0,n.jsx)(m,{text:"validating",active:!0}),s=(0,n.jsxs)("div",{className:"card-header",children:[(0,n.jsxs)("h3",{children:["Select a"," ",(0,n.jsx)("a",{href:"https://bids.neuroimaging.io",target:"_blank",children:"BIDS dataset"})," ","to validate"]}),(0,n.jsx)(T,{onClick:this._clearInput,onChange:this._onChange,setRefs:this._setRefs}),(0,n.jsx)("hr",{}),(0,n.jsx)(I,{setOption:i,options:e}),(0,n.jsx)("small",{children:"Note: Selecting a dataset only performs validation. Files are never uploaded."})]});return(0,n.jsx)("div",{className:"card",children:this.props.loading?t:s})}constructor(e){super(e),this.state={loading:!1},this._clearInput=this.props.reset,this._onChange=this.props.onChange,this._setRefs=this.props.setRefs}}t(8423);var E=t(2657),C=t(76),P=t(4074);let N=t(8085).U3.Issue;var O=function(e,i,t){let n=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(.\d+)?Z?$/,s=e[0].indexOf("acq_time");e.slice(1).map((e,o)=>{let r=e[s],a=(0,C.J)((0,P.D)(r))&&n.test(r);"n/a"===r&&(a=!0),r&&!a&&t.push(new N({file:i,evidence:r,line:o+2,reason:"acq_time is not in the format yyyy-MM-ddTHH:mm:ss[.000000]",code:84}))})};let w=t(8085).U3.Issue;var j=function(e,i,t){let n=e[0].indexOf("age");for(let s=0;s<e.length;s++){let o=e[s];o[n]>=89&&t.push(new w({file:i,evidence:o.join(","),line:s+1,reason:"age of participant is above 89 ",code:56}))}},L=(e,i,t)=>{e.map((n,s)=>{s!==e.findIndex(e=>e===n)&&t.push(new E.Z({file:i,evidence:V(e),line:1,reason:"Duplicate value at column #"+(s+1),code:231})),/^\s*$/.test(n)&&t.push(new E.Z({file:i,evidence:V(e),line:1,reason:"Missing value at column # "+(s+1),code:23})),"n/a"===n&&t.push(new E.Z({file:i,evidence:V(e),line:1,reason:"n/a value in header at column #"+(s+1),code:232}))})};let M=t(8085).U3.Issue;var D=function(e,i,t){let n=e[0].indexOf("status");if(-1!==n)for(let s=1;s<e.length;s++){let o=e[s],r=o[n];"good"!==r&&"bad"!==r&&"n/a"!=r&&t.push(new M({file:i,evidence:o.toString(),line:s+1,reason:"the status column values should either be good, bad, or n/a",code:125}))}};let x=t(8085).U3.Issue,k=["EEG","ECOG","SEEG","DBS","PD","OTHER","EOG","ECG","EMG","EYEGAZE","GSR","HEOG","MISC","PUPIL","RESP","TEMP","VEOG","PPG","AUDIO","REF","SYSCLOCK","TRIG","ADC","DAC","MEGMAG","MEGGRADAXIAL","MEGGRADPLANAR","MEGREFMAG","MEGREFGRADAXIAL","MEGREFGRADPLANAR","MEGOTHER","HLU","FITERR","POS","ORNT","VEL","GYRO","ACCEL","ANGACCEL","JNTANG","MAGN","LATENCY","MISC","NIRSCWAMPLITUDE","NIRSCWFLUORESCENSEAMPLITUDE","NIRSCWOPTICALDENSITY","NIRSCWHBO","NIRSCWHBR","NIRSCWMUA"];var R=function(e,i,t){let n=e[0].indexOf("type");if(-1!==n)for(let s=1;s<e.length;s++){let o=e[s],r=o[n];if("n/a"===r)continue;let a=!0;r!=r.toUpperCase()&&(a=!1),r=r.toUpperCase(),k.includes(r)?a||t.push(new x({file:i,evidence:o.join(", "),line:s+1,reason:"the type column values upper-cased",code:130})):t.push(new x({file:i,evidence:o.join(", "),line:s+1,reason:"the type column values should only consist of values specified for *_channels.tsv file",code:131}))}};let z=e=>e.replace(/^\uFEFF/,""),Z=e=>e.replace(/\r\n/g,"\n").replace(/\r/g,"\n"),F=e=>e&&!/^\s*$/.test(e);var q=function(e){let i={headers:[],rows:[]};return e=z(e),i.rows=Z(e).split("\n").filter(F).map(e=>e.split("	")),i.headers=i.rows.length?i.rows[0]:[],i};let G=t(8085).U3.Issue,U=["x","y","z","quat_x","quat_y","quat_z","quat_w","n/a"];var $=function(e,i,t){let n=e[0],s=n.indexOf("component");1!=s&&t.push(new G({file:i,evidence:n.join(","),line:0,reason:"Component found on column ".concat(s+1,"."),code:235}));for(let n=1;n<e.length;n++){let o=e[n],r=o[s];U.includes(r)||t.push(new G({file:i,evidence:o.join(","),line:n+1,reason:"Found value ".concat(r),code:236}))}},B=t(3214);let V=e=>"Column headers: ".concat(e.join(", ")),H=e=>"Filename: ".concat(e);var W=(e,i,t,n)=>{let s=[],o=[];if(i.includes("\r")&&!i.includes("\n")){s.push(new E.Z({file:e,evidence:i,code:70})),n(s,null);return}let{headers:r,rows:a}=q(i),l=!1,c=!1,d=!1;e.name.endsWith("_motion.tsv")||L(r,e,s);for(let i=1;i<a.length;i++){let t=a[i],n="row ".concat(i,": ").concat(t.join("	"));if(!(1===t.length&&/^\s*$/.test(t[0]))){if(l&&c&&d)break;t.length===r.length||l||(l=!0,s.push(new E.Z({file:e,evidence:n,line:i+1,code:22})));for(let o=0;o<t.length;o++){let r=t[o];if(l&&c&&d)break;""!==r||c?"NA"!==r&&"na"!==r&&"nan"!==r&&"NaN"!==r||d||(d=!0,s.push(new E.Z({file:e,evidence:n,line:i+1,reason:"Missing value at column # "+(o+1),code:24}))):(c=!0,s.push(new E.Z({file:e,evidence:n,line:i+1,reason:"Missing value at column # "+(o+1),code:23})))}}}let u=function(e,i,t,n){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,l=n;r.includes(e)&&o&&(l=o),r[i]!==e&&s.push(new E.Z({file:t,evidence:V(r),line:1,character:a[0].indexOf(r[i]),code:l}))};if(e.name.endsWith("_events.tsv")){(0==r.length||"onset"!==r[0])&&s.push(new E.Z({file:e,evidence:V(r),line:1,code:20})),(r.length<2||"duration"!==r[1].trim())&&s.push(new E.Z({file:e,evidence:V(r),line:1,code:21}));let i=[];for(let e in t)t.hasOwnProperty(e)&&i.push(t[e].relativePath);let n=[];if(r.indexOf("stim_file")>-1)for(let t=0;t<a.length;t++){let l=a[t][r.indexOf("stim_file")],c="/stimuli/"+l;l&&"n/a"!==l&&"stim_file"!==l&&-1==n.indexOf(l)&&(n.push(l),o.push(c),-1==i.indexOf(c)&&s.push(new E.Z({file:e,evidence:l,reason:"A stimulus file ("+l+") was declared but not found in /stimuli.",line:t+1,character:a[t].indexOf(l),code:52})))}}let f=null;if("participants.tsv"===e.name||e.relativePath.includes("phenotype/")){let i=r.indexOf("participant_id");if(-1===i)s.push(new E.Z({file:e,evidence:V(r),line:1,code:48}));else{f=[];for(let t=1;t<a.length;t++){let n=a[t];if(!n||/^\s*$/.test(n))continue;n[i].startsWith("sub-")||s.push(new E.Z({file:e,evidence:V(r),reason:"Participant_id column should be named as sub-<subject_id>.",line:t,code:212}));let o=n[i].replace("sub-","");"emptyroom"!=o&&f.push(o)}}}let h=null;if("samples.tsv"===e.name){let i=[],t=[],n=[],o=r.indexOf("sample_id"),l=r.indexOf("participant_id"),c=r.indexOf("sample_type");if(-1===o&&i.push(new E.Z({file:e,evidence:V(r),line:1,code:216})),-1===l&&i.push(new E.Z({file:e,evidence:V(r),line:1,code:217})),-1===c&&i.push(new E.Z({file:e,evidence:V(r),line:1,code:218})),s.push(...i),0===i.length){h=[];for(let i=1;i<a.length;i++){let n=a[i];!(!n||/^\s*$/.test(n))&&(t.push(n[o]),n[o].startsWith("sample-")||s.push(new E.Z({file:e,evidence:n[o],reason:"sample_id column should be named as sample-<sample_id>.",line:i,code:215})))}f=[];for(let i=1;i<a.length;i++){let t=a[i];if(!t||/^\s*$/.test(t))continue;n.push(t[l]),t[l].startsWith("sub-")||s.push(new E.Z({file:e,evidence:t[l],reason:"Participant_id column should be named as sub-<subject_id>.",line:i,code:212}));let r=t[o].replace("sample-","");"emptyroom"!=r&&h.push(r)}let i=new Set;for(let o=0;o<a.length-1;o++){let r=t[o].concat(n[o]);if(i.has(r)){s.push(new E.Z({file:e,evidence:t,reason:"Each sample from a same subject MUST be described by one and only one row.",line:1,code:220}));break}i.add(r)}}if(-1!==c){let i=["cell line","in vitro differentiated cells","primary cell","cell-free sample","cloning host","tissue","whole organisms","organoid","technical sample"];for(let t=1;t<a.length;t++){let n=a[t];i.includes(n[c])||s.push(new E.Z({file:e,evidence:n[c],reason:"sample_type can't be any value.",line:t+1,code:219}))}}}if(e.relativePath.includes("/meg/")&&e.name.endsWith("_channels.tsv")&&(u("name",0,e,71,230),u("type",1,e,71,230),u("units",2,e,71,230),D(a,e,s),R(a,e,s)),e.relativePath.includes("/eeg/")&&e.name.endsWith("_channels.tsv")&&(u("name",0,e,71,230),u("type",1,e,71,230),u("units",2,e,71,230),D(a,e,s),R(a,e,s)),e.relativePath.includes("/ieeg/")&&e.name.endsWith("_channels.tsv")&&(u("name",0,e,72,229),u("type",1,e,72,229),u("units",2,e,72,229),u("low_cutoff",3,e,72,229),u("high_cutoff",4,e,72,229),D(a,e,s),R(a,e,s)),e.relativePath.includes("/motion/")&&e.name.endsWith("_channels.tsv")){let i=["component","name","tracked_point","type","units"].filter(e=>!r.includes(e));i.length&&s.push(new E.Z({line:1,file:e,code:129,evidence:"Missing Columns: ".concat(i.join(", "))})),D(a,e,s),R(a,e,s),$(a,e,s)}if(e.relativePath.includes("/nirs/")&&e.name.endsWith("_channels.tsv")&&(u("name",0,e,234),u("type",1,e,234),u("source",2,e,234),u("detector",3,e,234),u("wavelength_nominal",4,e,234),u("units",5,e,234),D(a,e,s),R(a,e,s)),e.relativePath.includes("/eeg/")&&e.name.endsWith("_electrodes.tsv")&&(u("name",0,e,96),u("x",1,e,96),u("y",2,e,96),u("z",3,e,96)),e.relativePath.includes("/ieeg/")&&e.name.endsWith("_electrodes.tsv")&&(u("name",0,e,73),u("x",1,e,73),u("y",2,e,73),u("z",3,e,73),u("size",4,e,73)),e.relativePath.includes("/nirs/")&&e.name.endsWith("_optodes.tsv")&&(u("name",0,e,233),u("type",1,e,233),u("x",2,e,233),u("y",3,e,233),u("z",4,e,233)),e.relativePath.includes("/pet/")&&e.name.endsWith("_blood.tsv")&&u("time",0,e,126),"participants.tsv"===e.name&&j(a,e,s),e.name.endsWith("_scans.tsv")){let i=B.dirname(e.relativePath),n="/"+e.name.split("_").slice(0,1),o=[];for(let e of Object.values(t)){let i=e.relativePath;if(i.startsWith(n)){if(i.includes(".ds/")||i.includes("_meg/")){let e=B.dirname(i);o.push(e)}else if(i.includes("_ieeg.mefd/")){let e=i.substring(0,i.indexOf("_ieeg.mefd/")+10);o.includes(e)||o.push(e)}else o.push(i)}}if(r.indexOf("filename")>-1){let t=r.indexOf("filename");for(let n=1;n<a.length;n++){let r=i+"/"+a[n][t];o.includes(r)||s.push(new E.Z({line:n,file:e,code:129,evidence:H(r)}))}}else s.push(new E.Z({line:1,file:e,evidence:V(r),code:68}));r.indexOf("acq_time")>-1&&O(a,e,s)}n(s,f,o)},Y=t(8085);let J=Y.ZP.issues.Issue,X=(e,i)=>{let t=i.slice(),n=Y.ZP.array.diff(e,t),s=n[0],o=n[1];return(o.length?"Subjects "+o.join(", ")+" were found in the folder structure but are missing in phenotype/ .tsv. ":"")+(s.length?"Subjects "+s.join(", ")+" were found in phenotype/ .tsv file but are not present in the folder structure. ":"")};var K=JSON.parse('{"channels":["description","high_cutoff","low_cutoff","name","notch","source","detector","wavelength_actual","wavelength_nominal","wavelength_emission_actual","component","short_channel","sampling_frequency","software_filters","status","status_description","type","units","reference","group","tracking_system","tracked_point","component","placement","HED"],"electrodes":["name","x","y","z","size","material","manufacturer","group","hemisphere","type","impedance","dimension","HED"],"optodes":["name","type","x","y","z","template_x","template_y","template_z","source_type","detector_type","HED"],"events":["duration","HED","onset","trial_type","response_time","stim_file","HED"],"misc":[],"participants":["participant_id","HED"],"phenotype":["participant_id","HED"],"scans":["acq_time","filename","HED"],"samples":["sample_id","participant_id","sample_type","pathology","derived_from","HED"],"sessions":["acq_time","session_id","HED"],"aslcontext":["volume_type","HED"],"blood":["time","plasma_radioactivity","whole_blood_radioactivity","metabolite_parent_fraction","hplc_recovery_fractions","HED"],"nirs":["name","type","source","detector","wavelength_nominal","units","sampling_frequency","component","wavelength_actual","description","wavelength_emission_actual","short_channel","status","status_description","HED"]}');let Q=Y.ZP.issues.Issue,ee=function(e){let i="misc";if(e.relativePath.includes("phenotype/"))i="phenotype";else if("participants.tsv"===e.name)i="participants";else if(e.name.endsWith("_channels.tsv")||e.name.endsWith("_electrodes.tsv")||e.name.endsWith("_events.tsv")||e.name.endsWith("_scans.tsv")||e.name.endsWith("_sessions.tsv")||e.name.endsWith("_aslcontext.tsv")||e.name.endsWith("_blood.tsv")||e.name.endsWith("_optodes.tsv")){let t=e.name.split("_");i=t[t.length-1].replace(".tsv","")}return i},ei=e=>e.replace(/^\uefff/,"").split("\n")[0].trim().split("	"),et=function(e,i){let t=[];for(let n of e)K[i].includes(n)||t.push(n);return t},en=e=>e.map(e=>'"'.concat(e,'"')).join(", "),es=e=>{let i={},n={blood:()=>t(524)};return new Set(e.map(e=>ee(e.file))).forEach(e=>{n.hasOwnProperty(e)&&(i[e]=n[e]())}),i},eo=(e,i,t)=>{let n=[],s=ei(e.contents),o={};return Object.entries(t.properties).forEach(e=>{let[t,n]=e;n.hasOwnProperty("requires_tsv_non_custom_columns")&&!0===i[t]&&n.requires_tsv_non_custom_columns.forEach(e=>{e in o?o[e].push(t):o[e]=[t]})}),Object.entries(o).forEach(i=>{let[t,o]=i;s.includes(t)||n.push(new Q({code:211,file:e.file,evidence:"".concat(e.file.name," has headers: ").concat(en(s),'; missing header "').concat(t,'", which is required when any of the properties (').concat(en(o),") are true in the associated JSON sidecar.")}))}),n},er=(e,i,t)=>{let n=[];return e.map(e=>{t.filter(e=>e[0].relativePath.includes("_asl")).forEach(t=>{let s=t[0],o=t[1].dim[4];if(Y.ZP.files.potentialLocations(s.relativePath.replace(".gz","").replace("asl.nii","aslcontext.tsv")).indexOf(e.file.relativePath)>-1){let t=e.contents.replace(/[\r]+/g,"").split("\n").filter(e=>!(!e||/^\s*$/.test(e))),a=["m0scan"],l=t.filter(e=>a.includes(e)),c=["cbf","m0scan","label","control","deltam","volume_type"],d=t.filter(e=>c.includes(e));t.length!=d.length&&n.push(new Q({code:176,file:s})),t.length-1!=o&&n.push(new Q({code:165,file:s}));var r=Y.ZP.files.potentialLocations(e.file.relativePath.replace("aslcontext.tsv","asl.json"));let u=Y.ZP.files.generateMergedSidecarDict(r,i);u.hasOwnProperty("M0Type")&&"Included"===u.M0Type&&l.length<1&&n.push(new Q({file:s,code:154,reason:"''M0Type' is set to 'Included' however the tsv file does not contain any m0scan volume."})),u.hasOwnProperty("M0Type")&&"Absent"===u.M0Type&&l.length>=1&&n.push(new Q({file:s,code:199,reason:"''M0Type' is set to 'Absent' however the tsv file contains an m0scan volume. This should be avoided."})),u.hasOwnProperty("FlipAngle")&&u.FlipAngle.constructor===Array&&u.FlipAngle.length!==t.length-1&&n.push(new Q({file:s,code:172,reason:"''FlipAngle' for this file does not match the TSV length. Please make sure that the size of the FlipAngle array in the json corresponds to the number of volume listed in the tsv file."})),u.hasOwnProperty("LabelingDuration")&&u.LabelingDuration.constructor===Array&&u.hasOwnProperty("ArterialSpinLabelingType")&&("CASL"==u.ArterialSpinLabelingType||"PCASL"==u.ArterialSpinLabelingType)&&u.LabelingDuration.length!==t.length-1&&n.push(new Q({file:s,code:175,reason:"''LabelingDuration' for this file does not match the TSV length. Please be sure that the size of the LabelingDuration array in the json corresponds to the number of volume listed in the tsv file."})),u.hasOwnProperty("RepetitionTimePreparation")&&u.RepetitionTimePreparation.constructor===Array&&u.RepetitionTimePreparation.length!==t.length-1&&n.push(new Q({file:s,code:177,reason:"''RepetitionTimePreparation' for this file do not match the TSV length. Please be sure that the size of the RepetitionTimePreparation array in the json corresponds to the number of volume listed in the tsv file."})),u.hasOwnProperty("PostLabelingDelay")&&u.PostLabelingDelay.constructor===Array&&u.PostLabelingDelay.length!==t.length-1&&n.push(new Q({file:s,code:174,reason:"''PostLabelingDelay' for this file do not match the TSV length. Please be sure that the size of the PostLabelingDelay array in the json corresponds to the number of volume listed in the tsv file."})),u.hasOwnProperty("TotalAcquiredVolumes")&&u.TotalAcquiredVolumes.length!==t.length-1&&n.push(new Q({file:s,code:181,reason:"''TotalAcquiredVolumes' for this file do not match the TSV length. Please be sure that the size of the TotalAcquiredVolumes array in the json corresponds to the number of volume listed in the tsv file."})),u.hasOwnProperty("EchoTime")&&u.EchoTime.constructor===Array&&u.EchoTime.length!==t.length-1&&n.push(new Q({file:s,code:196,reason:"''EchoTime' for this file do not match the TSV length. Please be sure that the size of the EchoTime array in the json corresponds to the number of volume listed in the tsv file."}))}})}),n},ea=Y.ZP.issues.Issue;var el={TSV:W,checkPhenotype:(e,i)=>{let t=[];for(let n=0;n<e.length;n++){let s=e[n],o=s.list.sort(),r=i.subjects.sort();if(!Y.ZP.array.equals(o,r)){let e=X(o,r);t.push(new J({code:51,evidence:e,file:s.file}))}}return t},validateTsvColumns:function(e,i,t){let n=[],s=es(e);e.map(e=>{let t=ee(e.file),o=et(ei(e.contents),t),r="blood"===t;if(o.length>0||r){var a;let t=Y.ZP.files.potentialLocations(e.file.relativePath.replace(".tsv",".json")),l=Y.ZP.files.generateMergedSidecarDict(t,i),c=Object.keys(l),d=o.filter(e=>!c.includes(e));if(d.length&&n.push((a=e.file,new Q({code:82,file:a,evidence:"Columns: "+d.join(", ")+" not defined, please define in: "+t.toString().replace(",",", ")}))),r){let i=eo(e,l,s.blood);n.push(...i)}}});let o=er(e,i,t);return n.push(...o),n},validate:(e,i,t,n,s,o,r,a,l)=>{let c=[],d="";return Promise.all(e.map(function(e){return Y.ZP.limit(()=>Y.ZP.files.readFile(e,a,l).then(s=>{t.push({file:e,contents:s}),e.name.endsWith("_events.tsv")&&n.push({file:e,path:e.relativePath,contents:s}),W(e,s,i,function(i,t,n){t&&(e.name.endsWith("participants.tsv")?d=s:e.relativePath.includes("phenotype/")&&o.push({list:t,file:e})),n&&n.length&&(r.events=[...new Set([...r.events,...n])]),c=c.concat(i)})}))})).then(()=>({tsvIssues:c,participantsTsvContent:d}))},checkAge89:j,checkAcqTimeFormat:O,validateContRec:function(e,i){let t=[];return e.map(e=>{let n=Y.ZP.files.potentialLocations(e.relativePath.replace(".tsv.gz",".json"));0===Object.values(Y.ZP.files.generateMergedSidecarDict(n,i)).length&&t.push(new ea({file:e,code:170}))}),t}},ec=t(4174);let ed=new(t.n(ec)())({allErrors:!0});ed.addMetaSchema(t(6237)),ed.addSchema(t(8205));let eu=Y.ZP.issues.Issue;function ef(e,i,t){let n=[],s=Y.ZP.files.potentialLocations(e.relativePath),o=Y.ZP.files.generateMergedSidecarDict(s,i);o&&(n=(n=n.concat(function(e,i){let t=[],n=ep(e);return(t=(t=(t=(t=(t=t.concat(em(e,i,n))).concat(e_(e,i,{field:"RepetitionTime",min:100},2))).concat(e_(e,i,{field:"EchoTime",min:1},3))).concat(e_(e,i,{field:"EchoTime1",min:1},4))).concat(e_(e,i,{field:"EchoTime2",min:1},4))).concat(e_(e,i,{field:"TotalReadoutTime",min:10},5))}(e,o))).concat(eh(e,o))),t(n,o)}let eh=(e,i)=>{let t=[];return i.hasOwnProperty("TotalReadoutTime")&&i.hasOwnProperty("EffectiveEchoSpacing")&&i.TotalReadoutTime<i.EffectiveEchoSpacing&&t.push(new eu({file:e,code:93})),t},ep=e=>{let i=null;return e.name&&(e.name.endsWith("participants.json")?i=t(5340):e.name.endsWith("bold.json")||e.name.endsWith("sbref.json")?i=t(139):e.name.endsWith("asl.json")?i=t(1555):e.name.endsWith("pet.json")?i=t(9885):e.name.endsWith("nirs.json")?i=t(7618):"/dataset_description.json"===e.relativePath?i=t(1045):e.name.endsWith("meg.json")?i=t(7325):e.name.endsWith("ieeg.json")?i=t(1983):e.name.endsWith("eeg.json")?i=t(8876):e.name.endsWith("TEM.json")||e.name.endsWith("SEM.json")||e.name.endsWith("uCT.json")||e.name.endsWith("BF.json")||e.name.endsWith("DF.json")||e.name.endsWith("PC.json")||e.name.endsWith("DIC.json")||e.name.endsWith("FLUO.json")||e.name.endsWith("CONF.json")||e.name.endsWith("PLI.json")||e.name.endsWith("CARS.json")||e.name.endsWith("2PE.json")||e.name.endsWith("MPE.json")||e.name.endsWith("SR.json")||e.name.endsWith("NLO.json")||e.name.endsWith("OCT.json")||e.name.endsWith("SPIM.json")?i=t(9430):e.relativePath.includes("/micr")&&e.name.endsWith("photo.json")?i=t(7100):e.relativePath.includes("/meg/")&&e.name.endsWith("coordsystem.json")?i=t(6829):e.relativePath.includes("/ieeg/")&&e.name.endsWith("coordsystem.json")?i=t(920):e.relativePath.includes("/eeg/")&&e.name.endsWith("coordsystem.json")?i=t(7735):e.relativePath.includes("/nirs/")&&e.name.endsWith("coordsystem.json")?i=t(9890):e.name.endsWith("genetic_info.json")?i=t(7140):e.relativePath.includes("/pet/")&&e.name.endsWith("blood.json")?i=t(524):e.name.endsWith("physio.json")||e.name.endsWith("stim.json")?i=t(3737):e.name.endsWith("events.json")?i=t(7298):e.name.endsWith("beh.json")?i=t(3791):e.name.endsWith("_motion.json")?i=t(9435):e.name.endsWith("_channels.json")&&(i=t(7364))),i},em=(e,i,t)=>{let n=[];if(t){let s=ed.compile(t);s(i)||s.errors.map(i=>n.push(new eu({file:e,code:55,evidence:i.dataPath+" "+i.message})))}return n},e_=(e,i,t,n)=>{let s=[],o=t.field,r=t.min;return i.hasOwnProperty(o)&&i[o]>r&&s.push(new eu({code:n,file:e})),s},ey=Y.ZP.issues.Issue,eg=(e,i,t)=>{e.name.indexOf("task")>-1&&i&&i.TaskName&&-1===t.tasks.indexOf(i.TaskName)&&t.tasks.push(i.TaskName)},ev=(e,i,t)=>{let n=e.relativePath.split("/");n[1].includes("sub-")&&n.length>3&&!Y.ZP.bids_files.checkSidecarForDatafiles(e,i)&&t.push(new ey({code:90,file:e}))};class eb extends Error{constructor(e){super(e),this.name="JSONParseError"}}var eS=(e,i,t,n)=>{let s=[],o=e.map(function(e){return Y.ZP.limit(()=>new Promise(o=>{ev(e,i,s),ef(e,t,(i,t)=>(s=s.concat(i),eg(e,t,n),o()))}))});return new Promise(e=>Promise.all(o).then(()=>e(s)))},eT=(e,i,t,n,s)=>{let o=[],r=(e,n,s)=>Y.ZP.files.readFile(e,n,s).then(i=>Y.ZP.json.parse(e,i)).then(n=>{let{issues:s,parsed:r}=n;if(Array.prototype.push.apply(o,s),s&&s.some(e=>"error"===e.severity))throw new eb("Aborted due to parse error");t[e.relativePath]=r,i.push(e)});return Promise.all(e.map(e=>Y.ZP.limit(()=>r(e,n,s)))).then(()=>o).catch(e=>{if(e instanceof eb)return o;throw e})};let eI=Y.ZP.issues.Issue;function eA(e,i,t,n,s,o,r){let a,l;let c=i.relativePath,d=[],u=Y.ZP.files.potentialLocations(c.replace(".gz","").replace(".nii",".json")),f=Y.ZP.files.potentialLocations(c.replace(".gz","").replace("bold.nii","events.tsv")),h=c.replace("_asl.nii","_m0scan.nii"),p=Y.ZP.files.generateMergedSidecarDict(u,t),m="It can be included one of the following locations: "+u.join(", "),_="It can be included one of the following locations: "+f.join(", ");if(c.includes("_asl.nii")){if(p.hasOwnProperty("MagneticFieldStrength")||d.push(new eI({file:i,code:182,reason:"You must define 'MagneticFieldStrength' for this file. It is required for perfusion quantification, to infer default relaxation values for blood/tissue."+m})),p.hasOwnProperty("Manufacturer")||d.push(new eI({file:i,code:164,reason:"You should define 'Manufacturer' for this file. This may reflect site differences in multi-site study (especially readout differences, but perhaps also labeling differences). "+m})),p.hasOwnProperty("ArterialSpinLabelingType")||d.push(new eI({file:i,code:133,reason:"You should define 'ArterialSpinLabelingType' for this file. If you don't provide this information CBF quantification will not be possible. "+m})),p.hasOwnProperty("MRAcquisitionType")||d.push(new eI({file:i,code:155,reason:"You should define 'MRAcquisitionType' for this file. If you don't provide this information CBF quantification will not be possible. "+m})),p.hasOwnProperty("ArterialSpinLabelingType")&&p.ArterialSpinLabelingType.constructor===String){let t=p.ArterialSpinLabelingType;if("PASL"==t){if(p.hasOwnProperty("LabelingSlabThickness")||d.push(new eI({file:i,code:142,reason:"You should define 'LabelingSlabThickness' for this file. "+m})),p.hasOwnProperty("BolusCutOffFlag")||d.push(new eI({file:i,code:147,reason:"You should define 'BolusCutOffFlag' for this file. "+m})),p.hasOwnProperty("BolusCutOffFlag")&&p.BolusCutOffFlag.constructor===Boolean){let e=p.BolusCutOffFlag;!0!==e||p.hasOwnProperty("BolusCutOffDelayTime")?!0===e&&p.hasOwnProperty("BolusCutOffDelayTime")&&p.BolusCutOffDelayTime.constructor===Number&&p.BolusCutOffDelayTime>10?d.push(new eI({file:i,code:186,reason:"'BolusCutOffDelayTime' is greater than 10, are you sure it's expressed in seconds? "})):!0===e&&p.hasOwnProperty("BolusCutOffDelayTime")&&p.BolusCutOffDelayTime.constructor===Array&&p.BolusCutOffDelayTime.filter(e=>e>10).length>0&&d.push(new eI({file:i,code:186,reason:"Some values of the 'BolusCutOffDelayTime' array you defined are greater than 10, are you sure they are expressed in seconds? "})):d.push(new eI({file:i,code:149,reason:"You should define 'BolusCutOffDelayTime' for this file."+m})),p.hasOwnProperty("BolusCutOffDelayTime")&&p.BolusCutOffDelayTime.constructor===Array&&!eP(p.BolusCutOffDelayTime)&&d.push(new eI({file:i,code:192,reason:"'BolusCutOffDelayTime' should be monotonically increasing."})),!0!==e||p.hasOwnProperty("BolusCutOffTechnique")||d.push(new eI({file:i,code:150,reason:"You should define 'BolusCutOffTechnique' for this file."+m}))}if(p.hasOwnProperty("CASLType")||p.hasOwnProperty("PCASLType")||p.hasOwnProperty("LabelingPulseAverageGradient")||p.hasOwnProperty("LabelingPulseMaximumGradient")||p.hasOwnProperty("LabelingPulseAverageB1")||p.hasOwnProperty("LabelingPulseDuration")||p.hasOwnProperty("LabelingPulseFlipAngle")||p.hasOwnProperty("LabelingPulseInterval")||p.hasOwnProperty("LabelingDuration")){var y="",g="",v="",b="",S="",T="",I="",A="",E="";p.hasOwnProperty("CASLType")&&(y="'CASLType', "),p.hasOwnProperty("PCASLType")&&(g="'PCASLType', "),p.hasOwnProperty("LabelingPulseAverageGradient")&&(v="'LabelingPulseAverageGradient', "),p.hasOwnProperty("LabelingPulseMaximumGradient")&&(b="'LabelingPulseMaximumGradient', "),p.hasOwnProperty("LabelingPulseAverageB1")&&(S="'LabelingPulseAverageB1', "),p.hasOwnProperty("LabelingPulseDuration")&&(T="'LabelingPulseDuration', "),p.hasOwnProperty("LabelingPulseFlipAngle")&&(I="'LabelingPulseFlipAngle', "),p.hasOwnProperty("LabelingPulseInterval")&&(A="'LabelingPulseInterval', "),p.hasOwnProperty("LabelingDuration")&&(E="'LabelingDuration', "),d.push(new eI({file:i,code:190,reason:"You defined one of the not allowed fields in case PASL 'ArterialSpinLabelingType'. Please verify "+y+g+v+b+S+T+I+A+E+" and change accordingly."}))}}if("CASL"==t||"PCASL"==t){if("CASL"==t&&p.hasOwnProperty("PCASLType")&&d.push(new eI({file:i,code:191,reason:"You defined the 'PCASLType' with a CASL 'LabellingType'. This is not allowed."})),"PCASL"==t&&p.hasOwnProperty("CASLType")&&d.push(new eI({file:i,code:191,reason:"You defined the 'CASLType' with a PCASL 'LabellingType'. This is not allowed."})),p.hasOwnProperty("PASLType")||p.hasOwnProperty("LabelingSlabThickness")||p.hasOwnProperty("BolusCutOffFlag")||p.hasOwnProperty("BolusCutOffTimingSequence")||p.hasOwnProperty("BolusCutOffDelayTime")||p.hasOwnProperty("BolusCutOffTechnique")){var C="",P="",N="",O="",w="",j="";p.hasOwnProperty("PASLType")&&(C=" 'PASLType', "),p.hasOwnProperty("LabelingSlabThickness")&&(P=" 'LabelingSlabThickness', "),p.hasOwnProperty("BolusCutOffFlag")&&(N=" 'BolusCutOffFlag', "),p.hasOwnProperty("BolusCutOffTimingSequence")&&(O=" 'BolusCutOffTimingSequence', "),p.hasOwnProperty("BolusCutOffDelayTime")&&(w=" 'BolusCutOffDelayTime', "),p.hasOwnProperty("BolusCutOffTechnique")&&(j=" 'BolusCutOffTechnique', "),d.push(new eI({file:i,code:189,reason:"You defined one of the not allowed fields in case of CASL or PCASL 'ArterialSpinLabelingType'. Please verify "+C+P+N+O+w+j+" and change accordingly."}))}if(p.hasOwnProperty("LabelingDuration")){if(e&&p.LabelingDuration.constructor===Array){let t=p.LabelingDuration;t.length!==e.dim[4]&&d.push(new eI({file:i,code:157,reason:"'LabelingDuration' for this file does not match the 4th dimension of the NIFTI header. "})),t.filter(e=>e>10).length>0&&d.push(new eI({file:i,code:187,reason:"In the 'LabelingDuration' array some values are greater than 10, are you sure they are expressed in seconds? "}))}p.LabelingDuration.constructor===Number&&p.LabelingDuration>10&&d.push(new eI({file:i,code:187,reason:"'LabelingDuration' is greater than 10, are you sure it's expressed in seconds?"}))}else d.push(new eI({file:i,code:134,reason:"You should define 'LabelingDuration' for this file. If you don't provide this information CBF quantification will not be possible. LabelingDuration is the total duration, in seconds, of the labeling pulse train. "+m}))}}if(p.hasOwnProperty("PostLabelingDelay")){if(p.PostLabelingDelay.constructor===Number&&p.PostLabelingDelay>10&&d.push(new eI({file:i,code:184,reason:"'PostLabelingDelay' is greater than 10, are you sure it's expressed in seconds?"})),e&&p.PostLabelingDelay.constructor===Array){let t=p.PostLabelingDelay;t.length!==e.dim[4]&&d.push(new eI({file:i,code:173,reason:"'PostLabelingDelay' for this file does not match the 4th dimension of the NIFTI header. "})),t.filter(e=>e>10).length>0&&d.push(new eI({file:i,code:184,reason:"In the 'PostLabelingDelay' array some values are greater than 10, are you sure they are expressed in seconds? "}))}}else d.push(new eI({file:i,code:135,reason:"You should define 'PostLabelingDelay' for this file. If you don't provide this information CBF quantification will not be possible. "+m}));if(p.hasOwnProperty("BackgroundSuppression")||d.push(new eI({file:i,code:136,reason:"You should define 'BackgroundSuppression' for this file. If you don't provide this information CBF quantification will be biased. "+m})),p.hasOwnProperty("BackgroundSuppression")&&(!0!=p.BackgroundSuppression||(p.hasOwnProperty("BackgroundSuppressionPulseTime")||d.push(new eI({file:i,code:144,reason:"You should define 'BackgroundSuppressionPulseTime' for this file. "+m})),p.hasOwnProperty("BackgroundSuppressionNumberPulses")||d.push(new eI({file:i,code:179,reason:"You should define 'BackgroundSuppressionNumberPulses' for this file. "+m}))),p.hasOwnProperty("BackgroundSuppressionNumberPulses")&&p.hasOwnProperty("BackgroundSuppressionPulseTime"))){var L=p.BackgroundSuppressionNumberPulses;let e=p.BackgroundSuppressionPulseTime.length;L!==e&&d.push(new eI({file:i,code:180,reason:"The BackgroundSuppressionNumberPulses is "+L+" however the array BackgroundSuppressionPulseTime array has "+e+" values. Please check the discrepancy between this two values that must coincides."+m}))}if(p.hasOwnProperty("VascularCrushing")||d.push(new eI({file:i,code:137,reason:"You should define 'VascularCrushing' for this file. It indicates if an ASL crusher method has been used. If you don't provide this information CBF quantification could be biased. "+m})),p.hasOwnProperty("VascularCrushing")&&p.VascularCrushing.constructor===Boolean&&p.VascularCrushing&&!p.hasOwnProperty.VascularCrushingVENC&&d.push(new eI({file:i,code:145,reason:"You should define 'VascularCrushingVENC' for this file. "+m})),p.hasOwnProperty("PulseSequenceDetails")||d.push(new eI({file:i,code:138,reason:"You should define 'PulseSequenceDetails' for this file including information beyond pulse sequence type that identifies the specific pulse sequence used. "+m})),p.hasOwnProperty("M0Type")){if(p.hasOwnProperty("M0Type")&&p.M0Type.constructor===String)switch(p.M0Type){case"Separate":eE(h,s,d,i)||d.push(new eI({file:i,code:202,reason:"'M0Type' property of this asl ('"+i.relativePath+"') does not point to an existing file('"+h+"'). Please mind that this value should not include subject level directory ('/"+i.relativePath.split("/")[1]+"/').",evidence:h})),eC(h,d,i);break;case"Included":break;case"Estimate":p.hasOwnProperty("M0Estimate")||d.push(new eI({file:i,code:195,reason:"You set the 'M0Type' to 'Estimate', therefore you should also define 'M0Estimate' for this file.  "+m}));break;case"Absent":(eE(h,s,d,i)||p.hasOwnProperty("M0Estimate"))&&d.push(new eI({file:i,code:198,reason:"You set the 'M0Type' to 'Absent', you should avoid to define 'M0Estimate' or to include an [_m0scan.nii.gz] for this file.  "+m}))}}else d.push(new eI({file:i,code:153,reason:"You should define 'M0Type' for this file.  "+m}));p.hasOwnProperty("FlipAngle")?e&&p.FlipAngle.constructor===Array&&p.FlipAngle.length!==e.dim[4]&&d.push(new eI({file:i,code:168,reason:"'FlipAngle' for this file do not match the 4th dimension of the NIFTI header. "+m})):p.hasOwnProperty("LookLocker")&&p.LookLocker?d.push(new eI({file:i,code:166,reason:"In case of a LookLocker acquisition you must define 'FlipAngle' for this file.  "+m})):d.push(new eI({file:i,code:167,reason:"You should define 'FlipAngle' for this file.  "+m}))}if(c.includes("_asl.nii")||c.includes("_m0scan.nii")){if(p.hasOwnProperty("AcquisitionVoxelSize")?3!=p.AcquisitionVoxelSize.length&&d.push(new eI({file:i,code:156,reason:"The 'AcquisitionVoxelSize' field length is not 3. AcquisitionVoxelSize must be defined as a vector of length 3.  "+m})):d.push(new eI({file:i,code:143,reason:"You should define 'AcquisitionVoxelSize' for this file.  "+m})),p.hasOwnProperty("RepetitionTimePreparation")){if(e&&p.hasOwnProperty("RepetitionTimePreparation")&&p.RepetitionTimePreparation.constructor===Array){let t=p.RepetitionTimePreparation,n=e.dim[4];t.length!==n&&d.push(new eI({file:i,code:201,evidence:"RepetitionTimePreparation array is of length "+t.length+" for this file and does not match the 4th dimension of the NIFTI header."+m}))}}else d.push(new eI({file:i,code:200,reason:"'RepetitionTimePreparation' must be defined for this file. "+m}))}if(c.includes("_dwi.nii")){let t=Y.ZP.files.potentialLocations(c.replace(".gz","").replace(".nii",".bvec")),s=Y.ZP.files.potentialLocations(c.replace(".gz","").replace(".nii",".bval")),o=Y.ZP.files.getBFileContent(t,n),r=Y.ZP.files.getBFileContent(s,n),a="It can be included in one of the following locations: "+t.join(", "),l="It can be included in one of the following locations: "+s.join(", ");if(o||d.push(new eI({code:32,file:i,reason:"_dwi scans should have a corresponding .bvec file. "+a})),r||d.push(new eI({code:33,file:i,reason:"_dwi scans should have a corresponding .bval file. "+l})),r&&o&&e&&3===o.replace(/^\s+|\s+$/g,"").split("\n").length){let t=[o.split("\n")[0].replace(/^\s+|\s+$/g,"").split(" ").length,o.split("\n")[1].replace(/^\s+|\s+$/g,"").split(" ").length,o.split("\n")[2].replace(/^\s+|\s+$/g,"").split(" ").length,r.replace(/^\s+|\s+$/g,"").split(" ").length,e.dim[4]];t.every(function(e){return e===t[0]})||d.push(new eI({code:29,file:i}))}}if(function(e,i,t){let n=!1,s=!1,o=e.split("/"),r=o[o.length-1].split("_");for(let e=0;e<r.length;e++){let i=r[e];0===i.toLowerCase().indexOf("task")&&i.indexOf("rest")>-1&&(s=!0)}for(let e=0;e<i.length;e++){let s=i[e];t.find(e=>e.path==s)&&(n=!0)}return!s&&e.includes("_bold.nii")&&!n}(c,f,o)&&d.push(new eI({code:25,file:i,reason:"Task scans should have a corresponding events.tsv file. "+_})),e&&(a=e.pixdim[4],"ms"===(l=e.xyzt_units&&e.xyzt_units[3]?e.xyzt_units[3]:null)&&(a/=1e3,l="s"),"us"===l&&(a/=1e6,l="s")),!p.invalid){if(!c.includes("_task-")||c.includes("_defacemask.nii")||c.includes("_sbref.nii")||p.hasOwnProperty("TaskName")||d.push(new eI({file:i,code:50,reason:"You have to define 'TaskName' for this file. "+m})),c.includes("_bold.nii")||c.includes("_sbref.nii")||c.includes("_dwi.nii")||c.includes("_asl.nii")||c.includes("_m0scan.nii")){if(p.hasOwnProperty("EchoTime")){if(e&&p.hasOwnProperty("EchoTime")&&p.EchoTime.constructor===Array){let t=p.EchoTime,n=e.dim[3];t.length!==n&&d.push(new eI({file:i,code:197,evidence:"EchoTime array is of length "+t.length+" and the value of the 'k' dimension is "+n+" for the corresponding nifti header."}))}}else c.includes("_asl.nii")||c.includes("_m0scan.nii")?d.push(new eI({file:i,code:193,reason:"You must define 'EchoTime' for this file. If you don't provide this information a correct CBF quantification will not be possible."+m})):d.push(new eI({file:i,code:6,reason:"You should define 'EchoTime' for this file. If you don't provide this information field map correction will not be possible. "+m}));p.hasOwnProperty("PhaseEncodingDirection")||d.push(new eI({file:i,code:7,reason:"You should define 'PhaseEncodingDirection' for this file. If you don't provide this information field map correction will not be possible. "+m})),p.hasOwnProperty("EffectiveEchoSpacing")||d.push(new eI({file:i,code:8,reason:"You should define 'EffectiveEchoSpacing' for this file. If you don't provide this information field map correction will not be possible. "+m}))}if(c.includes("_dwi.nii")&&!p.hasOwnProperty("TotalReadoutTime")&&d.push(new eI({file:i,code:9,reason:"You should define 'TotalReadoutTime' for this file. If you don't provide this information field map correction using TOPUP might not be possible. "+m})),(c.includes("_bold.nii")||c.includes("_asl.nii"))&&(p.hasOwnProperty("SliceTiming")||p.hasOwnProperty("MRAcquisitionType")&&"3D"===p.MRAcquisitionType&&c.includes("_asl.nii")||(p.hasOwnProperty("MRAcquisitionType")&&"2D"===p.MRAcquisitionType&&c.includes("_asl.nii")?d.push(new eI({file:i,code:183,reason:"You should define 'SliceTiming' for this file. If you don't provide this information slice time correction will not be possible. "+m})):d.push(new eI({file:i,code:13,reason:"You should define 'SliceTiming' for this file. If you don't provide this information slice time correction will not be possible. "+m}))),e&&p.hasOwnProperty("SliceTiming")&&p.SliceTiming.constructor===Array)){let t=p.SliceTiming,n=e.dim[3];t.length!==n&&d.push(new eI({file:i,code:87,evidence:"SliceTiming array is of length "+t.length+" and the value of the 'k' dimension is "+n+" for the corresponding nifti header."}))}if(c.includes("_bold.nii")){if(p.hasOwnProperty("RepetitionTime")||p.hasOwnProperty("VolumeTiming")?e&&p.RepetitionTime&&p.EffectiveEchoSpacing&&p.PhaseEncodingDirection&&!p.hasOwnProperty("VolumeTiming")?p.EffectiveEchoSpacing*e.dim[({i:1,j:2,k:3})[p.PhaseEncodingDirection[0]]]>p.RepetitionTime&&d.push(new eI({file:i,code:76,reason:"Abnormally high value of 'EffectiveEchoSpacing' ("+p.EffectiveEchoSpacing+" seconds)."})):p.hasOwnProperty("VolumeTiming")&&p.hasOwnProperty("RepetitionTime")?d.push(new eI({file:i,code:178,reason:"'VolumeTiming' and 'RepetitionTime' for this file are mutually exclusive."+m})):!p.hasOwnProperty("VolumeTiming")||p.hasOwnProperty("RepetitionTime")||(!p.hasOwnProperty("VolumeTiming")||p.hasOwnProperty("SliceTiming")||p.hasOwnProperty("AcquisitionDuration")||d.push(new eI({file:i,code:171})),eP(p.VolumeTiming)||d.push(new eI({file:i,code:188,reason:"'VolumeTiming' should be monotonically increasing."}))):d.push(new eI({file:i,code:10,reason:"You have to define 'RepetitionTime' or 'VolumeTiming' for this file. "+m})),void 0===a&&e)d.push(new eI({file:i,code:75}));else if(p.RepetitionTime&&e){"s"!==l&&d.push(new eI({file:i,code:11}));let e=Number(a).toFixed(3),t=Number(p.RepetitionTime).toFixed(3);e!==t&&d.push(new eI({file:i,code:12,reason:"Repetition time defined in the JSON ("+t+" sec.) did not match the one defined in the NIFTI header ("+e+" sec.)"}))}if(p.hasOwnProperty("SliceTiming")&&p.SliceTiming.constructor===Array){let e=function(e,i){let t=[];for(let n=0;n<e.length;n++)e[n]>i&&t.push(e[n]);return t}(p.SliceTiming,p.RepetitionTime);e.length>0&&d.push(new eI({file:i,code:66,evidence:e.join(", ")}))}}else if(c.includes("_phasediff.nii")){if(p.hasOwnProperty("EchoTime1")&&p.hasOwnProperty("EchoTime2")||d.push(new eI({file:i,code:15,reason:"You have to define 'EchoTime1' and 'EchoTime2' for this file. "+m})),p.hasOwnProperty("EchoTime1")&&p.hasOwnProperty("EchoTime2")){let e=p.EchoTime2-p.EchoTime1;(e<1e-4||e>.01)&&d.push(new eI({file:i,code:83,reason:"The value of (EchoTime2 - EchoTime1) should be within the range of 0.0001 - 0.01. "+m}))}}else c.includes("_phase1.nii")||c.includes("_phase2.nii")?p.hasOwnProperty("EchoTime")||d.push(new eI({file:i,code:16,reason:"You have to define 'EchoTime' for this file. "+m})):c.includes("_fieldmap.nii")?p.hasOwnProperty("Units")||d.push(new eI({file:i,code:17,reason:"You have to define 'Units' for this file. "+m})):c.includes("_epi.nii")&&(p.hasOwnProperty("PhaseEncodingDirection")||d.push(new eI({file:i,code:18,reason:"You have to define 'PhaseEncodingDirection' for this file. "+m})),p.hasOwnProperty("TotalReadoutTime")||d.push(new eI({file:i,code:19,reason:"You have to define 'TotalReadoutTime' for this file. "+m})));if((c.includes("_m0scan.nii")||Y.ZP.type.file.isFieldMapMainNii(c))&&p.hasOwnProperty("IntendedFor")){let e="string"==typeof p.IntendedFor?[p.IntendedFor]:p.IntendedFor;for(let t=0;t<e.length;t++){let n=e[t];n.startsWith("bids:")||(function(e,i,t,n){let s="/"+n.relativePath.split("/")[1]+"/"+e,o=!1;for(let e in i)e&&i[e].relativePath===s&&(o=!0);o||t.push(new eI({file:n,code:37,reason:"'IntendedFor' property of this fieldmap  ('"+n.relativePath+"') does not point to an existing file('"+e+"'). Please mind that this value should not include subject level directory ('/"+n.relativePath.split("/")[1]+"/').",evidence:e}))}(n,s,d,i),eC(n,d,i))}}}c.includes("_pet.nii")&&d.push(...function(e,i,t){let n=[],s=["TracerName","TracerRadionuclide","InjectedRadioactivity","InjectedRadioactivityUnits","InjectedMass","InjectedMassUnits","SpecificRadioactivity","SpecificRadioactivityUnits","ModeOfAdministration","TimeZero","ScanStart","InjectionStart","FrameTimesStart","FrameDuration","AcquisitionMode","ImageDecayCorrected","ImageDecayCorrectionTime","ReconMethodName","ReconMethodParameterLabels","ReconFilterType","AttenuationCorrection","Manufacturer","ManufacturersModelName","Units"];for(let o of(i.hasOwnProperty("ModeOfAdministration")&&"bolus-infusion"===i.ModeOfAdministration&&s.push("InfusionRadioactivity","InfusionStart","InfusionSpeed","InfusionSpeedUnits","InjectedVolume"),i.hasOwnProperty("ReconFilterType")&&("string"==typeof i.ReconFilterType&&"none"!==i.ReconFilterType?s.push("ReconMethodParameterUnits","ReconMethodParameterValues","ReconFilterSize"):"string"!=typeof i.ReconFilterType&&Array.isArray(i.ReconFilterType)&&i.ReconFilterType.every(e=>"none"!==e)&&s.push("ReconMethodParameterUnits","ReconMethodParameterValues","ReconFilterSize")),s))i.hasOwnProperty(o)||n.push(new eI({file:e,code:237,reason:"You must define ".concat(o," for this file. ").concat(t)}));return n}(i,p,m)),r(d)}function eE(e,i){let t=e.replace("_m0scan.nii","").replace(".gz",""),n=e.replace(".nii.gz",".nii"),s=!1;for(let o in i)if(o){let r=i[o].relativePath;(RegExp((t+"_dir-*").split("*").map(e=>e.replace(/([.*+?^=!:${}()|[]\/\\])/g,"\\$1")).join(".*")+"_m0scan.nii").test(r)||r===n||r===e)&&(s=!0)}return s}function eC(e,i,t){RegExp(".nii(.gz)?$").test(e)||i.push(new eI({file:t,code:37,reason:"Invalid filetype: IntendedFor should point to the .nii[.gz] files.",evidence:e}))}function eP(e){let i=!1;for(let t=1;t<e.length;t++){if(!(e[t]>e[t-1]))return!1;i=!0}return i}let eN=t(8085).U3.Issue;var eO=e=>{let i=[],t=e.map(function(e){return{count:1,val:e.name.split(".")[0]}}).reduce(function(e,i){return e[i.val]=(e[i.val]||0)+i.count,e},{});for(let n of Object.keys(t).filter(function(e){return t[e]>1}))for(let t of e.filter(function(e){return e.name.split(".")[0]===n}))i.push(new eN({code:74,file:t}));return i};let ew=t(8085).U3.Issue;var ej=e=>{let i=[],t=e.map(e=>e.name),n=t.filter(e=>e.indexOf("_fieldmap")>-1),s=t.filter(e=>e.indexOf("_magnitude")>-1);return n.map(t=>{let n=t.replace("fieldmap","magnitude");-1===s.indexOf(n)&&i.push(new ew({code:91,file:e.find(e=>e.name==t)}))}),i};let eL=t(8085).U3.Issue;var eM=e=>{let i=[],t=e.map(e=>e.name),n=t.filter(e=>e.indexOf("phasediff")>-1),s=t.filter(e=>e.indexOf("magnitude1")>-1);return n.map(t=>{let n=t.replace("phasediff","magnitude1");-1===s.indexOf(n)&&i.push(new eL({code:92,file:e.find(e=>e.name==t)}))}),i},eD=(e,i,t,n,s,o,r,a,l)=>{let c=[],d=e.map(function(e){return new Promise(d=>{t.ignoreNiftiHeaders?eA(null,e,n,s,i,o,function(e){c=c.concat(e),d()}):Y.ZP.files.readNiftiHeader(e,a,l,function(t){t&&t.hasOwnProperty("error")?(c.push(t.error),d()):(r.push([e,t]),eA(t,e,n,s,i,o,function(e){c=c.concat(e),d()}))})})});return new Promise(i=>{let t=eO(e);c=c.concat(t);let n=ej(e);c=c.concat(n);let s=eM(e);c=c.concat(s),Promise.all(d).then(()=>i(c))})},ex={i8:"1.14.7"},ek={options:{},issues:[],summary:{sessions:[],subjects:[],tasks:[],modalities:[],totalFiles:[],size:0}},eR=e=>{e.issues=[]},ez=e=>Object.keys(e).some(i=>{let t=e[i].relativePath;if(t)return(t=(t=t.split("/")).reverse())[2]&&(0==t[2].indexOf("ses-")||0==t[2].indexOf("sub-"))}),eZ=t(3214),eF=t.n(eZ),eq=t(2918);let eG=Y.ZP.issues.Issue,eU=e=>{try{return e[0].webkitRelativePath.split(eF().sep).pop()}catch(e){return"uploaded-directory"}};var e$=function(e){let i;return new eG({code:61,file:{name:i=eq.Z?eF().basename(e):eU(e),path:eF().join(".",i),relativePath:eF().join("",i)}})};let eB=t(8085).U3.Issue;function eV(e,i,t){let n=[];if((n=n.concat(function(e,i){let t=[];return Y.dt.checkType(e,"string")||t.push(new eB({code:89,file:i,evidence:"The contents of this .bval file have type "+typeof e+" but should be a string."})),t}(i,e))).length)return t(n);t(n=(n=n.concat(function(e,i){let t=[];return 1!==e.replace(/^\s+|\s+$/g,"").split("\n").length&&t.push(new eB({code:30,file:i})),t}(i,e))).concat(function(e,i){let t=[],n=e.replace(/^\s+|\s+$/g,"").split(" "),s=!1;for(let e=0;e<n.length;e++){let i=n[e];Y.dt.checkType(i,"number")||(s=!0)}return s&&t.push(new eB({code:47,file:i})),t}(i,e)))}var eH=(e,i,t,n)=>{let s=[];return Promise.all(e.map(function(e){return Y.ZP.limit(()=>new Promise((o,r)=>{Y.ZP.files.readFile(e,t,n).then(t=>{i[e.relativePath]=t,eV(e,t,function(e){s=s.concat(e),o()})}).catch(e=>Y.ZP.issues.redirect(e,r,()=>{s.push(e),o()}))}))})).then(()=>s)};let eW=t(8085).U3.Issue;function eY(e,i,t){let n=[];if((n=n.concat(function(e,i){let t=[];return Y.dt.checkType(e,"string")||t.push(new eW({code:88,file:i,evidence:e?"The contents of this .bvec file have type "+typeof e+" but should be a string.":"The contents of this .bvec file are undefined."})),t}(i,e))).length)return t(n);t(n=(n=(n=n.concat(function(e,i){let t=[];return 3!==e.replace(/^\s+|\s+$/g,"").split("\n").length&&t.push(new eW({code:31,file:i})),t}(i,e))).concat(function(e,i){let t=!1,n=e.replace(/^\s+|\s+$/g,"").split("\n");for(let e=0;e<n.length;e++){let s=n[e].replace(/^\s+|\s+$/g,"").split(" ");if(t||(t=s.length),t!==s.length)return[new eW({code:46,file:i})]}return[]}(i,e))).concat(function(e,i){let t=e.replace(/^\s+|\s+$/g,"").split("\n");for(let e=0;e<t.length;e++)if(t[e].replace(/^\s+|\s+$/g,"").split(" ").map(e=>!Y.dt.checkType(e,"number")).some(e=>e))return[new eW({code:47,file:i})];return[]}(i,e)))}var eJ=(e,i,t,n)=>{let s=[];return Promise.all(e.map(function(e){return Y.ZP.limit(()=>new Promise((o,r)=>{Y.ZP.files.readFile(e,t,n).then(t=>{i[e.relativePath]=t,eY(e,t,function(e){s=s.concat(e),o()})}).catch(e=>Y.ZP.issues.redirect(e,r,()=>{s.push(e),o()}))}))})).then(()=>s)};let eX=Y.ZP.issues.Issue,eK=(e,i)=>{if(e===i||"\xb5m"===e&&"um"===i)return 1;if("um"===i){if("mm"===e)return 1e3;if("nm"===e)return .001}else if("mm"===i){if("\xb5m"===e)return .001;if("nm"===e)return 1e-6}else if("nm"===i){if("mm"===e)return 1e6;if("\xb5m"===e)return 1e3}},eQ=(e,i)=>{let t=e.relativePath.replace(".tif","").replace(".ome",".json"),n=Y.ZP.files.potentialLocations(t);return Y.ZP.files.generateMergedSidecarDict(n,i)},e0=(e,i,t,n)=>{let s=[],o={Immersion:"Immersion",NumericalAperture:"LensNA",Magnification:"NominalMagnification"};if(i["".concat(t,"OME")]["".concat(t,"Instrument")]&&i["".concat(t,"OME")]["".concat(t,"Instrument")][0]["".concat(t,"Objective")]){let r=i["".concat(t,"OME")]["".concat(t,"Instrument")][0]["".concat(t,"Objective")][0].$;for(let i in o){if(!o.hasOwnProperty(i))continue;let t=o[i];n.hasOwnProperty(i)&&r[t]&&r[t]!=n[i]&&s.push(new eX({file:{relativePath:e,path:e},evidence:"JSON field '".concat(i,"' is inconsistent"),code:224}))}}return s},e1=(e,i,t)=>{let n=[],s=["um","\xb5m","nm","mm"],o=e["".concat(i,"OME")]["".concat(i,"Image")][0]["".concat(i,"Pixels")][0].$.PhysicalSizeX,r=e["".concat(i,"OME")]["".concat(i,"Image")][0]["".concat(i,"Pixels")][0].$.PhysicalSizeXUnit,a=e["".concat(i,"OME")]["".concat(i,"Image")][0]["".concat(i,"Pixels")][0].$.PhysicalSizeY,l=e["".concat(i,"OME")]["".concat(i,"Image")][0]["".concat(i,"Pixels")][0].$.PhysicalSizeYUnit,c=e["".concat(i,"OME")]["".concat(i,"Image")][0]["".concat(i,"Pixels")][0].$.PhysicalSizeZ,d=e["".concat(i,"OME")]["".concat(i,"Image")][0]["".concat(i,"Pixels")][0].$.PhysicalSizeZUnit;if(0===Object.keys(t).length)return[];if([r,l,d].forEach(e=>{s.includes(e)||n.push(new eX({code:222}))}),n.length>0)return n;let u=t.PixelSize,f=t.PixelSizeUnits,h=eK(r,f),p=eK(l,f),m=eK(d,f);return(o*h!==u[0]||a*p!==u[1]||c*m!==u[2])&&n.push(new eX({code:221})),n},e9=e=>{if(!eq.Z)return new DataView(e);{let i=new Uint8Array(e.byteLength);return e.copy(i,0,0,e.byteLength),new DataView(i.buffer)}};var e2=(e,i)=>{let t=e9(e),n=18761===t.getUint16(0);return t.getUint16(2,n)===i};let e3=Y.ZP.issues.Issue,e5=t(8085).U3.Issue,e4=Y.ZP.issues.Issue,e8=(e,i,t,n)=>{let s=Y.ZP.files.potentialLocations(i),o=/_chunk-[0-9]+/,r=s.filter(e=>t.hasOwnProperty(e)&&o.exec(e)).length||o.exec(e.relativePath),a=Y.ZP.files.generateMergedSidecarDict(s,t);if(Y.ZP.type.file.isMicroscopyPhoto(e.relativePath)){if(a.hasOwnProperty("IntendedFor"))return e6("string"==typeof a.IntendedFor?[a.IntendedFor]:a.IntendedFor,n,e)}else{if(0===Object.keys(a).length)return[new e4({file:e,code:225})];if(r)return e7(e,a)}return[]},e7=(e,i)=>{let t=[];return i.hasOwnProperty("ChunkTransformationMatrix")||t.push(new e4({file:e,code:223})),t},e6=(e,i,t)=>{let n=[];for(let s=0;s<e.length;s++){let o=e[s],r="/"+t.relativePath.split("/")[1]+"/"+o,a=!1;for(let e in i)e&&i[e].relativePath===r&&(a=!0);a||n.push(new e4({file:t,code:37,reason:"'IntendedFor' property of this photo ('"+t.relativePath+"') does not point to an existing file ('"+o+"'). Please mind that this value should not include subject level directory ('/"+t.relativePath.split("/")[1]+"/').",evidence:o}))}return n};var ie={validate:(e,i)=>{let t=[];return Promise.all(e.map(function(e){return Y.ZP.limit(()=>new Promise((n,s)=>{Y.ZP.files.readBuffer(e).then(o=>{e2(o,42)?(e.relativePath.endsWith(".ome.btf")&&t.push(new e3({code:227,file:e,evidence:"Inconsistent TIFF file type and extension, given .ome.btf but should be .ome.tif"})),Y.ZP.files.readOMEFile(o).then(s=>{var o;let r,a,l,c,d,u;o=function(e){t=t.concat(e),n()},r=[],a=eQ(e,i),l=Object.keys(s)[0],c="",l.includes(":OME")&&(c=l.split(":OME")[0].concat(":")),d=e0(e.relativePath,s,c,a),u=e1(s,c,a),o(r=r.concat(d).concat(u))}).catch(e=>Y.ZP.issues.redirect(e,s,()=>{t.push(e),n()}))):(e2(o,43)?(e.relativePath.endsWith(".ome.tif")&&t.push(new e3({code:227,file:e,evidence:"Inconsistent TIFF file type and extension, given .ome.tif but should be .ome.btf"})),t.push(new e3({code:226,file:e}))):t.push(new e3({code:227,file:e,evidence:"3rd byte of file does not identify file as tiff."})),n())})}))})).then(()=>t)},checkSamples:e=>{let i=[];return Array.from(Object.values(e)).find(e=>e.relativePath&&"/samples.tsv"==e.relativePath)||i.push(new e5({code:214})),i},checkJSONAndField:(e,i,t)=>{let n=[];return e.ome&&e.ome.forEach(e=>{let s=e.relativePath.replace(".tif","").replace(".btf","").replace(".ome",".json");n=n.concat(e8(e,s,i,t))}),e.png&&e.png.forEach(e=>{let s=e.relativePath.replace(".png",".json");n=n.concat(e8(e,s,i,t))}),e.tif&&e.tif.forEach(e=>{let s=e.relativePath.replace(".tif",".json");n=n.concat(e8(e,s,i,t))}),e.jpg&&e.jpg.forEach(e=>{let s=e.relativePath.replace(".jpg",".json");n=n.concat(e8(e,s,i,t))}),n}};let ii=Y.ZP.issues.Issue;function it(e,i,t,n){return[].concat(is(i),io(e,t,n))}let is=function(e){let i=[],t=e.events,n=e.directory;if(n){let e=n.filter(function(e){return 0>t.indexOf(e.relativePath)});for(let t of e){let n=e[t];i.push(new ii({code:77,file:n}))}}return i},io=function(e,i,t){let n=[];return i.filter(e=>e[0].relativePath.includes("_task-")).forEach(i=>{let s=i[0],o=i[1].dim[4],r=Y.ZP.files.potentialLocations(s.relativePath.replace(".gz","").replace(".nii",".json")),a=Math.floor(Y.ZP.files.generateMergedSidecarDict(r,t).RepetitionTime*o),l=Math.floor(.5*a),c=Y.ZP.files.potentialLocations(s.relativePath.replace(".gz","").replace("bold.nii","events.tsv"));for(let i of e.filter(e=>c.indexOf(e.path)>-1)){let e=i.contents.split("\n").filter(e=>!(!e||/^\s*$/.test(e))),t=e[e.length-1].trim().split("	")[0];t>a&&n.push(new ii({file:i.file,code:85})),t<l&&n.push(new ii({file:i.file,code:86}))}}),n};var ir={events:it,validateEvents:it},ia=t(2532);let il=Y.ZP.issues.Issue;async function ic(e,i,t){let n;let s=i["/dataset_description.json"],o=new ia.ZP.bids.BidsJsonFile("/dataset_description.json",s,iu("/dataset_description.json",t));try{n=await ia.ZP.bids.buildBidsSchemas(o,null)}catch(e){return ia.ZP.bids.BidsHedIssue.fromHedIssues(e,o.file)}let r=[];for(let[e,s]of Object.entries(i))try{let i=function(e,i,t){let n=iu(e,t);return new ia.ZP.bids.BidsSidecar(e,i,n)}(e,s,t);r.push(...id(i,n))}catch(e){return r.push(new il({code:109})),r}if(r.some(e=>e.isError()))return r;for(let t of e)try{let e=function(e,i){let t=Y.ZP.files.potentialLocations(e.file.relativePath.replace(".tsv",".json")),n=Y.ZP.files.generateMergedSidecarDict(t,i);return new ia.ZP.bids.BidsTsvFile(e.file.relativePath,e.contents,e.file,t,n)}(t,i);r.push(...id(e,n))}catch(e){r.push(new il({code:109}));break}return r}function id(e,i){let t=e.validate(i);if(null===t)throw Error();return t}function iu(e,i){return i.filter(i=>i.relativePath===e)[0]}let ih=Y.ZP.files.sessions;var ip=Y.ZP.issues.Issue;let im=function(e){let i=[],{subjects:t,sessions:n}=function(e){let i={},t=[];for(let o in e)if(e.hasOwnProperty(o)){var n,s;let r;let a=e[o];if(!a||!eq.Z&&!a.webkitRelativePath)continue;let l=a.relativePath;if(!Y.ZP.type.isBIDS(l)||Y.ZP.type.file.isStimuliData(l))continue;let c=l.match(/sub-(.*?)(?=\/)/);if(null===c||"sub-emptyroom"==(r=c[0]))continue;i[r]=i[r]||new ih.Subject;let d=(n=l,s=r,n.substring(n.match(s).index+s.length).replace(s,"<sub>"));i[r].files.push(d);let u=d.match(ih.sessionMatcher);if(u){let e=u[1];t.includes(e)||t.push(e),i[r].sessions.includes(e)||i[r].sessions.push(e)}}return{subjects:i,sessions:t}}(e);i.push(...function(e,i){let t=[];for(let n in e)if(e.hasOwnProperty(n)){let s=e[n];i.length>0&&i.forEach(e=>{if(!s.sessions.includes(e)){s.missingSessions.push(e);let i="/".concat(n,"/").concat(e);t.push(new ip({file:{relativePath:i,webkitRelativePath:i,name:e,path:i},reason:"A session is missing from one subject that is present in at least one other subject",evidence:"Subject: ".concat(n,"; Missing session: ").concat(e),code:97}))}})}return t}(t,n));let s=function(e){let i=[];for(let t in e)e.hasOwnProperty(t)&&e[t].files.forEach(e=>{0>i.indexOf(e)&&i.push(e)});return i}(t);return i.push(...function(e,i){let t=[];return Object.keys(e).sort().forEach(n=>{i.forEach(i=>{if(!function(e,i){let t;let n=e.match(ih.sessionMatcher);return!!n&&(t=n[1],i.missingSessions.includes(t))}(i,e[n])){let s=function(e,i,t){if(-1===e.files.indexOf(t)){var n="/"+i+t.replace("<sub>",i);let e=n.substr(n.lastIndexOf("/")+1);return new ip({file:{relativePath:n,webkitRelativePath:n,name:e,path:n},evidence:"Subject: ".concat(i,"; Missing file: ").concat(e),reason:"This file is missing for subject "+i+", but is present for at least one other subject.",code:38})}}(e[n],n,i);s&&t.push(s)}})}),t}(t,s)),i};var i_=Y.ZP.issues.Issue;let iy=e=>e.relativePath.match(/sub-((?!emptyroom).*?)(?=\/)/),ig=(e,i,t)=>t.indexOf(e)===i,iv=e=>Object.values(e).filter(iy).map(e=>iy(e)[1]).filter(ig);var ib=function(e,i){for(var t=[],n=iv(e).filter(function(e){return 0>i.indexOf(e)}),s=0;s<n.length;s++){var o=n[s],r="/sub-"+o;t.push(new i_({file:{relativePath:r,webkitRelativePath:r,name:r,path:r},reason:"No BIDS compatible data found for subject "+o,code:67}))}return t},iS=Y.ZP.issues.Issue;let iT=e=>{let i=[];for(let n of Object.keys(e)){let s=e[n][0],o="";for(var t of e[n])o=o+" "+t.reason;s.reason=o,i.push(s)}return i},iI=(e,i)=>{for(var t={},n=[],s=0;s<e.length;s++){var o,r,a,l,c=!1,d=e[s][0],u=e[s][1],f=d.relativePath;if("dim"===i){if(void 0===u[i]||null===u[i]||u[i].length<u[i][0]){n.push(new iS({file:d,code:40}));continue}if(d.name.indexOf("_bold")>-1&&(4!==u[i][0]||5!==u[i].length)){n.push(new iS({file:d,code:54,evidence:'header field "dim" = '+u[i]}));continue}if((d.name.indexOf("magnitude1")>-1||d.name.indexOf("magnitude2")>-1)&&4!==u[i].length){n.push(new iS({file:d,code:94,evidence:"this magnitude file has more than three dimensions. "}));continue}d.name.indexOf("T1w")>-1&&4!==u[i].length&&n.push(new iS({file:d,code:95,evidence:"this T1w file does not have exactly three dimensions. "}));o=u[i].slice(1,u[i][0]+1).toString()}else if("pixdim"===i){if((void 0===u.xyzt_units||null===u.xyzt_units||u.xyzt_units.length<4)&&(n.push(new iS({file:d,code:41})),c=!0),(void 0===u.pixdim||null===u.pixdim||u.pixdim.length<4)&&(n.push(new iS({file:d,code:42})),c=!0),0===u.qform_code&&0===u.sform_code&&(n.push(new iS({file:d,code:60})),c=!0),!0===c)continue;o=[];for(var h=u[i].slice(1,5),p=u.xyzt_units.slice(0,4),m=0;m<h.length;m++)o.push(""+h[m].toFixed(2)+p[m]);o=o.toString()}else{console.warn("Checks against header field: "+i+" are currently unsupported.");return}d&&(eq.Z||d.webkitRelativePath)&&null!==(a=f.match(/sub-(.*?)(?=\/)/))&&(l=a[0],null!==(a=(r=(r=f.substring(f.match(l).index+l.length)).replace(l,"<sub>")).match(/run-\d+/))&&(r=r.replace(a[0],"<run>")),t.hasOwnProperty(r)?t[r].hasOwnProperty(o)?(t[r][o].count+=1,t[r][o].files.push(d)):t[r][o]={count:1,files:[d]}:(t[r]={},t[r][o]={count:1,files:[d]}))}for(let e of Object.keys(t)){let s=t[e],r=Object.keys(s)[0];for(let e in s)s.hasOwnProperty(e)&&(o=s[e]).count>s[r].count&&(r=e);for(let e of Object.keys(s))if(o=s[e],r!==e&&iA(r,e))for(var _=0;_<o.files.length;_++){var y,g=o.files[_];"dim"===i?y="The most common set of dimensions is: "+r+" (voxels), This file has the dimensions: "+e+" (voxels).":"pixdim"===i&&(y="The most common resolution is: "+r.replace(/,/g," x ")+", This file has the resolution: "+e.replace(/,/g," x ")+"."),n.push(new iS({file:g,reason:y,code:39}))}}return n},iA=(e,i)=>{var t=e.split(","),n=i.split(",");if(t.length!==n.length)return!0;for(var s=0;s<t.length;s++){var o=Number(t[s].match(/-?\d*\.?\d*/)),r=Number(n[s].match(/-?\d*\.?\d*/)),a=t[s].match(/[A-Za-z]*$/)[0],l=n[s].match(/[A-Za-z]*$/)[0];if(Math.abs(o-r)>1e-5||a!==l)return!0}return!1};var iE=e=>{for(var i=[],t={},n=["dim","pixdim"],s=0;s<n.length;s++)iI(e,n[s]).forEach(e=>{39==e.code?t.hasOwnProperty(e.file.relativePath)?t[e.file.relativePath].push(e):t[e.file.relativePath]=[e]:i.push(e)});return i=i.concat(iT(t))};let iC=Y.ZP.issues.Issue,iP=e=>{let i={},t={};i.sub=iN(e,/^\/sub-([a-zA-Z0-9]+)/),i.ses=iN(e,/^\/sub-[a-zA-Z0-9]+\/ses-([a-zA-Z0-9]+)/);let n=e.replace(/^.*[\\/]/,"");return t.sub=iN(n,/^sub-([a-zA-Z0-9]+)/),t.ses=iN(n,/^sub-[a-zA-Z0-9]+_ses-([a-zA-Z0-9]+)/),[i,t]},iN=(e,i)=>{let t=i.exec(e);return t&&t[1]?t[1]:null},iO=(e,i)=>{let t,n;return"session"==e?(t=65,n="ses"):(t=64,n="sub"),new iC({code:t,evidence:"File: ".concat(i.relativePath," is saved in incorrect ").concat(e," directory as per ").concat(n,"-id in filename."),file:i})};var iw=e=>{let i=[];return Object.keys(e).forEach(t=>{let n=e[t];if(Y.ZP.type.file.isStimuliData(n.relativePath))return;let s=iP(n.relativePath),o=s[0],r=s[1];if(null!==r.sub||null!==r.ses){let e=r.sub!==o.sub,t=r.ses!==o.ses;e&&i.push(iO("subject",n)),t&&i.push(iO("session",n))}}),i};let ij=(e,i,t)=>{Object.keys(e).forEach(i=>{let n=e[i],s=n.name;Y.ZP.type.file.isStimuliData(n.relativePath)?(t.stimuli.push(n),t.misc.push(n)):Y.ZP.type.isBIDS(n.relativePath)?iM(s,"nii")||iM(s,"nii.gz")?t.nifti.push(n):iM(s,"json")?t.json.push(n):iM(s,"tsv")?t.tsv.push(n):iM(s,"bval")?t.bval.push(n):iM(s,"bvec")?t.bvec.push(n):iL(s)?(t.ephys.push(n),t.misc.push(n)):iM(s,"tsv.gz")?t.contRecord.push(n):iM(s,"ome.tif")||iM(s,"ome.btf")?t.ome.push(n):iM(s,"jpg")?t.jpg.push(n):iM(s,"png")?t.png.push(n):!iM(s,"tif")||iM(s,"ome.tif")||iM(s,"ome.btf")?t.misc.push(n):t.tif.push(n):(t.invalid.push(n),t.misc.push(n))})},iL=e=>["edf","vhdr","vmrk","eeg","bdf","set","fdt","nwb","rdat","ridx","tdat","tidx","tmet","vidx","vmet"].includes(e.split(".").pop()),iM=(e,i)=>e&&e.endsWith("."+i);var iD=(e,i)=>{let t={json:[],nifti:[],stimuli:[],ephys:[],tsv:[],bval:[],bvec:[],contRecord:[],invalid:[],ome:[],jpg:[],png:[],tif:[],misc:[]};return ij(e,i,t),t};let ix=Y.ZP.issues.Issue,ik=(e,i)=>{let t=Y.ZP.array.diff(e,i),n=t[0],s=t[1];return(s.length?"Subjects "+s.join(", ")+" were found in the folder structure but are missing in participants.tsv. ":"")+(n.length?"Subjects "+n.join(", ")+" were found in participants.tsv but are not present in the folder structure. ":"")};var iR=(e,i)=>{let t=[];if(e){let n=e.list.sort(),s=i.sort();if(!Y.ZP.array.equals(s,n,!0)){let i=ik(n,s);t.push(new ix({code:49,evidence:i,file:e.file}))}}return t},iz=e=>{let i=[];return Object.keys(e).some(i=>{let t=e[i];return t.relativePath&&t.relativePath.startsWith("/sub-")})||i.push(new ix({code:45})),i};let iZ=t(8085).U3.Issue,iF=e=>{let i=[];return void 0===e||e.match(/\S/)||i.push(new iZ({code:115})),i},iq=e=>{let i=[];if(e&&"object"==typeof e&&e.length){if(e.forEach(e=>{(""+e).split(",").length>2&&i.push(new iZ({code:103,evidence:e}))}),1==e.length){let t=e[0];"string"==typeof t&&t.split(",").length<=2&&i.push(new iZ({code:102,evidence:t}))}}else i.push(new iZ({code:113,evidence:JSON.stringify(e)}));return i};var iG=e=>{let i=[],t=Object.keys(e),n=t.some(e=>"/dataset_description.json"==e),s=t.some(e=>"/genetic_info.json"===e);if(n){let t=e["/dataset_description.json"];i=(i=i.concat(iF(t.Name))).concat(iq(t.Authors)),s&&!("Genetics"in t&&"Dataset"in t.Genetics)&&i.push(new iZ({code:128}))}else i.push(new iZ({code:57}));return i};let iU=t(8085).U3.Issue;var i$=e=>{let i=[],t=Array.from(Object.values(e)).filter(e=>e.relativePath&&e.relativePath.startsWith("/README"));return t.map(e=>{(eq.Z?e.stats.size:e.size)<=150&&i.push(new iU({code:213,file:e}))}),t.length>1?i.push(new iU({code:228})):0===t.length&&i.push(new iU({code:101})),i};function iB(e){var i=(eq.Z?e.stats.size:e.size)<=0;return["BadChannels","bad.segments"].indexOf(e.name)>-1&&(i=!1),i&&new E.Z({code:99,file:e})}function iV(e){return e instanceof E.Z}let iH="participantId";var iW=e=>{if(e){let[i,...t]=e.split(/\r?\n/).filter(e=>""!==e).map(e=>e.split("	")),n=i.map(e=>"participant_id"===e?iH:e),s=[iH,"age","sex","group"].map(e=>({key:e,index:n.findIndex(i=>i===e)})).filter(e=>{let{index:i}=e;return -1!==i}),o=s.find(e=>{let{key:i}=e;return i===iH}),r=s.find(e=>{let{key:i}=e;return"age"===i});return void 0===o?null:t.map(e=>(e[o.index]=e[o.index].replace(/^sub-/,""),r&&(e[r.index]=parseInt(e[r.index])),e)).map(e=>s.reduce((i,t)=>{let{key:n,index:s}=t;return{...i,[n]:e[s]}},{}))}};let iY=(e,i,t)=>{e[i][t]?e[i][t]++:e[i][t]=1},iJ=e=>{let i={};return Object.keys(e).forEach(t=>{i[t]=iX(e[t])}),i},iX=e=>Object.keys(e).map(i=>({key:i,count:e[i]})).sort((e,i)=>{let{count:t}=e,{count:n}=i;return n-t}).map(e=>{let{key:i}=e;return i});var iK=e=>{let i={BodyPart:{},ScannerManufacturer:{},ScannerManufacturersModelName:{},TracerName:{},TracerRadionuclide:{}};return Object.entries(e).forEach(e=>{let[t,n]=e;t.endsWith("pet.json")&&(iY(i,"ScannerManufacturer",n.Manufacturer),iY(i,"ScannerManufacturersModelName",n.ManufacturersModelName),iY(i,"TracerName",n.TracerName),iY(i,"TracerRadionuclide",n.TracerRadionuclide),n.BodyPart&&iY(i,"BodyPart",n.BodyPart))}),iJ(i)},iQ=t(4797);let i0=Y.ZP.issues.Issue;var i1=(e,i,t,n,s)=>{ek.options=i;let o={},r={},a=[],l={events:[],directory:[]},c=[],d=[],u=[],f=[];if(ek.options.blacklistModalities){let i=Object.keys(e).map(i=>e[i].relativePath),t=(0,iQ.Z)(i);ek.options.blacklistModalities.map(e=>{t.primary.includes(e)&&ek.issues.push(new i0({file:e,evidence:"found ".concat(e," files"),code:139}))})}let h=Y.ZP.collectSummary(e,ek.options);for(let i in e)if(e.hasOwnProperty(i)){let t=e[i];"object"==typeof t.stats&&t.stats.hasOwnProperty("size")&&delete t.size}Object.keys(e).forEach(function(i){e[i].ignore&&delete e[i]}),ek.issues=ek.issues.concat(iw(e)),ek.issues=ek.issues.concat(Y.ZP.files.illegalCharacterTest(e));let p=iD(e,ek.options);p.invalid.map(function(e){ek.issues.push(new i0({file:e,evidence:e.name,code:1}))}),h.dataTypes.includes("T1w")||ek.issues.push(new i0({code:53})),Promise.resolve(p.misc.map(iB).filter(iV)).then(i=>(ek.issues=ek.issues.concat(i),el.validate(p.tsv,e,f,a,null,u,l))).then(e=>{let{tsvIssues:i,participantsTsvContent:t}=e;return ek.issues=ek.issues.concat(i),h.subjectMetadata=iW(t),eJ(p.bvec,r)}).then(e=>(ek.issues=ek.issues.concat(e),eH(p.bval,r))).then(e=>(ek.issues=ek.issues.concat(e),eT(p.json,c,o))).then(i=>{ek.issues=ek.issues.concat(i);let t=iz(e);ek.issues=ek.issues.concat(t);let n=iG(o);ek.issues=ek.issues.concat(n);let s=i$(e);if(ek.issues=ek.issues.concat(s),h.modalities.includes("Microscopy")){let i=ie.checkSamples(e),t=ie.checkJSONAndField(p,o,e);ek.issues=ek.issues.concat(i).concat(t)}return eS(c,e,o,h)}).then(e=>(ek.issues=ek.issues.concat(e),ie.validate(p.ome,o))).then(i=>(ek.issues=ek.issues.concat(i),eD(p.nifti,e,ek.options,o,r,a,d,t,n))).then(e=>{ek.issues=ek.issues.concat(e);let i=iR(null,h.subjects);ek.issues=ek.issues.concat(i);let t=el.checkPhenotype(u,h);return ek.issues=ek.issues.concat(t),ek.issues=ek.issues.concat(iE(d)),l.directory=p.stimuli,ek.issues=ek.issues.concat(ir.validateEvents(a,l,d,o)),ic(f,o,c)}).then(t=>{ek.issues=ek.issues.concat(t),ek.issues=ek.issues.concat(el.validateTsvColumns(f,o,d)),ek.issues=ek.issues.concat(el.validateContRec(p.contRecord,o)),i.ignoreSubjectConsistency||(ek.issues=ek.issues.concat(im(e))),ek.issues=ek.issues.concat(ib(e,h.subjects)),h.modalities=Y.ZP.modalities.group(h.modalities),h.modalities.includes("PET")&&(h.pet=iK(o)),s(Y.ZP.issues.format(ek.issues,h,ek.options),h)}).catch(e=>{s(Y.ZP.issues.exceptionHandler(e,ek.issues,h,ek.options),h)})},i9=t(3414),i2=t.n(i9),i3=t(923);function i5(e,i,t){let n="red"==i?"ERR":"WARN",s=[];for(var o=0;o<e.length;o++){let c=e[o],d=o+1;s.push("	"+i2()[i](d+": "+"[".concat(n,"] ")+c.reason+" (code: "+c.code+" - "+c.key+")"));for(var r=0;r<c.files.length;r++){var a=e[o].files[r];if(!a||!a.file)continue;let i="		";if(a.file.relativePath&&(s.push("".concat(i,".")+a.file.relativePath),i="			"),t.verbose&&s.push(i+a.reason),a.line){var l="".concat(i,"@ line: ")+a.line;a.character&&(l+=" character: "+a.character),s.push(l)}a.evidence&&s.push("".concat(i,"Evidence: ")+a.evidence)}c.additionalFileCount>0&&s.push("		"+i2()[i]("... and "+c.additionalFileCount+" more files having this issue (Use --verbose to see them all).")),s.push(""),c.helpUrl&&(s.push(i2().cyan("	Please visit "+c.helpUrl+" for existing conversations about this issue.")),s.push(""))}return s}let i4={BIDS:(e,i,t)=>{i.json||console.log("bids-validator@".concat(ex.i8)),Y.ZP.options.parse(e,i,async function(i,n){if(i&&i.length>0)t({config:i});else{ek.options=n,eR(ek);let i=await Y.ZP.files.readDir(e,n);if(ez(i)){let n=Y.ZP.files.remoteFiles.isGitAnnex(e);i1(i,ek.options,n,e,t)}else{let s=e$(e);ek.summary.totalFiles=Object.keys(i).length,t(Y.ZP.issues.format([s],ek.summary,n))}}})},JSON:ef,TSV:el,NIFTI:eA,Events:ir,bval:eV,bvec:eY,reformat:Y.ZP.issues.reformat,utils:Y.ZP,consoleFormat:{issues:function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var t=e.errors,n=e.warnings,s=[];if(t&&1===t.length&&"61"===t[0].code)s.push(i2().red("[ERR]  The given directory failed an initial Quick Test. This means the basic names and structure of the files and directories do not comply with BIDS specification. For more info go to https://bids.neuroimaging.io/"));else if(e.config&&e.config.length>=1){s.push(i2().red("[ERR]  Invalid Config File"));for(var o=0;o<e.config.length;o++){var r=e.config[o];r.file.file={relativePath:r.file.path},r.files=[r.file]}s=s.concat(i5(e.config,"red",i))}else t.length>=1||n.length>=1?s=(s=s.concat(i5(t,"red",i))).concat(i5(n,"yellow",i)):s.push(i2().green("This dataset appears to be BIDS compatible."));return s.join("\n")},summary:function(e){let i=[];if(e){for(var t,n,s,o=e.sessions.length>0?e.sessions.length:1,r=[e.totalFiles+" "+l()("File",e.totalFiles)+", "+g()(e.size),e.subjects.length+" - "+l()("Subject",e.subjects.length),o+" - "+l()("Session",o)],a=e.tasks,c=e.modalities,d=Math.max(r.length,a.length,c.length),u="       ",f=[[u,i2().blue.underline("Summary:")+u,i2().blue.underline("Available Tasks:")+u,i2().blue.underline("Available Modalities:")]],h=0;h<d;h++)t=r[h]?r[h]+u:"",n=a[h]?a[h]+u:"",s=c[h]?c[h]:"",f.push([u,t,n,s]);i.push((0,i3.table)(f,{border:(0,i3.getBorderCharacters)("void"),columnDefault:{paddingLeft:0,paddingRight:1},drawHorizontalLine:()=>!1})),i.push(""),i.push(i2().cyan("	If you have any questions, please post on https://neurostars.org/tags/bids.")),i.push("")}return i.join("\n")},logIssues:i5,unexpectedError:function(e){return i2().red(e)}}},i8=ex.i8,i7=()=>({dirName:"",list:{},nameError:null,projectId:"",refs:{},errors:[],warnings:[],summary:null,status:"",uploadStatus:"",options:{ignoreWarnings:!1,ignoreNiftiHeaders:!1,ignoreSubjectConsistency:!1}});class i6 extends s.Component{_validate(e){let i=e.list[0].webkitRelativePath.split("/")[0],t="".concat(i,"/.bids-validator-config.json");return this.setState({status:"validating",showIssues:!0,activeKey:3,dirName:i}),i4.BIDS(e.list,{verbose:!0,...this.state.options,config:t},(e,i)=>"Invalid"===e?this.setState({errors:"Invalid",summary:i,status:"validated"}):this.setState({errors:e.errors?e.errors:[],warnings:e.warnings?e.warnings:[],summary:i,status:"validated"}))}_reset(){this.setState(i7())}render(){return(0,n.jsxs)("div",{id:"root",children:[(0,n.jsx)("nav",{className:"navbar navbar-dark bg-dark fixed-top",children:(0,n.jsx)("div",{className:"container",children:(0,n.jsx)("div",{className:"navbar-header",children:(0,n.jsxs)("a",{className:"navbar-brand",href:"https://www.npmjs.com/package/bids-validator",target:"_blank",children:["BIDS Validator v",i8]})})})}),(0,n.jsxs)("div",{className:"container page-wrapper",children:[(0,n.jsx)("div",{className:"validator",children:(0,n.jsx)(A,{loading:"validating"===this.state.status,options:this.state.options,onChange:this.validate,handleOptionToggle:this.handleOptionToggle})}),"validated"===this.state.status?(0,n.jsx)(S,{reset:this.reset,...this.state}):null]})]})}constructor(){super(),this.handleOptionToggle=e=>{let{name:i}=e.target;this.setState(e=>({...e,options:{...e.options,[i]:!e.options[i]}}))},this.state=i7(),this.validate=this._validate.bind(this),this.reset=this._reset.bind(this)}}var te=()=>(0,n.jsx)(i6,{})},8085:function(e,i,t){"use strict";let n;t.d(i,{ZP:function(){return eM},U3:function(){return m},dt:function(){return ef.Z}}),t(5788);var s={equals:function(e,i,t){if(!e||!i||e.length!=i.length)return!1;t&&(e.sort(),i.sort());for(var n=0,o=e.length;n<o;n++)if(e[n]instanceof Array&&i[n]instanceof Array){if(!s.equals(e[n],i[n],t))return!1}else if(e[n]!=i[n])return!1;return!0},diff:function(e,i){for(var t=[],n=0;n<e.length;n++){var s=e[n],o=i.indexOf(s);o>-1?i.splice(o,1):t.push(s)}return[t,i]}},o=t(3707),r=t.n(o),a={ignoredFile:function(e,i){if(e.ignoredFiles)for(var t=0;t<e.ignoredFiles.length;t++){var n=e.ignoredFiles[t];if(r()(i,n))return!0}return!1},interpret:function(e,i){var t={};if(i.ignore&&i.ignore.length>0)for(var n=this.match(e,i.ignore),s=0;s<n.length;s++)t[n[s]]="ignore";if(i.warn&&i.warn.length>0)for(var o=this.match(e,i.warn),r=0;r<o.length;r++)t[o[r]]="warning";if(i.error&&i.error.length>0)for(var a=this.match(e,i.error),l=0;l<a.length;l++)t[a[l]]="error";return t},match:function(e,i){for(var t=[],n=0;n<i.length;n++){var s=i[n];e.indexOf(s)>-1?t.push(s):s.hasOwnProperty("and")&&this.andFulfilled(e,s.and)&&(t=t.concat(this.flatten(s.and)))}return t},flatten:function(e){for(var i=[],t=0;t<e.length;t++){var n=e[t];n.hasOwnProperty("and")?i=i.concat(this.flatten(n.and)):n.hasOwnProperty("or")?i=i.concat(this.flatten(n.or)):i.push(n)}return i},andFulfilled:function(e,i){for(var t=0;t<i.length;t++){var n=i[t];if(n.hasOwnProperty("and")){if(!this.andFulfilled(e,n.and))return!1}else if(n.hasOwnProperty("or")){if(!this.orFulfilled(e,n.or))return!1}else if(0>e.indexOf(n))return!1}return!0},orFulfilled:function(e,i){for(var t=0;t<i.length;t++){var n=i[t];if(n.hasOwnProperty("and")){if(this.andFulfilled(e,n.and))return!0}else if(n.hasOwnProperty("or")){if(this.orFulfilled(e,n.or))return!0}else if(e.indexOf(n)>-1)return!0}return!1}};function l(e,i,t){this.parts=e,this.name=i,this.properties=t,this.size=e.reduce(function(e,i){return e+i.length},0),this.type="application/octet-stream",this.lastModified=0}var c=function(){return"undefined"==typeof File?l:File},d=t(285),u=t.n(d),f=t(9676),h=t(2657),p={list:f.Z,Issue:h.Z,filterFieldMaps:function(e){for(var i=[],t=[6,7,8,9],n=0;n<e.length;n++){var s=e[n];0>t.indexOf(s.code)&&i.push(s)}return i},format:function(e,i,t){var n=[],s=[],o=[];0>i.modalities.indexOf("fieldmap")&&(e=this.filterFieldMaps(e)),e.sort(function(e,i){var t=e.file?e.file.relativePath:"",n=i.file?i.file.relativePath:"";return t>n?1:n>t?-1:0});let r={},l=[];for(var c=0;c<e.length;c++){var d=e[c];!(d.file&&a.ignoredFile(t.config,d.file.relativePath))&&(r[d.code]||(l.push(d.key),l.push(d.code),r[d.code]=f.Z[d.code],r[d.code].files=[],r[d.code].additionalFileCount=0,r[d.code].helpUrl=d.helpUrl),t.verbose||r[d.code].files.length<10?r[d.code].files.push(d):r[d.code].additionalFileCount++)}let u=a.interpret(l,t.config);for(let e in r){if(!r.hasOwnProperty(e))continue;let i=parseInt(e);(d=r[i]).code=i,u.hasOwnProperty(d.code)&&(d.severity=u[d.code]),u.hasOwnProperty(d.key)&&(d.severity=u[d.key]),"error"===d.severity?55==i?n.unshift(d):n.push(d):"warning"!==d.severity||t.ignoreWarnings?"ignore"===d.severity&&o.push(d):s.push(d)}return{errors:n,warnings:s,ignored:o}},errorToIssue:function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=e.stack?e.stack.split("\n").slice(1).join("\n").trim():"";return new h.Z({file:t,evidence:e.stack||"",reason:"".concat(e.message,"; please help the BIDS team and community by opening an issue at (https://github.com/bids-standard/bids-validator/issues) with the evidence here."),code:i})},isAnIssue:function(e){let i=Object.keys(e);return i.includes("code")&&i.includes("reason")},reformat:function(e,i,t){var n=e.errors?e.errors:[],s=e.warnings?e.warnings:[],o=e.ignored?e.ignored:[];e=n.concat(s).concat(o);for(var r=[],a=0;a<e.length;a++)for(var l=e[a],c=0;c<l.files.length;c++){var d=l.files[c];r.push(d)}return p.format(r,i,{config:t})},exceptionHandler:function(e,i,t,n){return e.hasOwnProperty("key")?i.push(e):i.push(this.errorToIssue(e)),this.format(i,t,n)},redirect:function(e,i,t){this.isAnIssue(e)?t():i(e)}},m=Object.assign(h.Z,p),_=t(3010),y=t(4164),g=t.n(y),v=t(991),b=t.n(v),S=t(2918),T=t(7061),I={getAnnexedFile:function(e,i,t,n){let s={file:e,dir:i};t&&(s.limit=t),s.remotesInfo=this.getRemotesInfo(i,e),s.remotesInfo.map((e,i)=>this.tryRemote(e,s).then(e=>n(null,null,e)).catch(e=>e.code?n(e,null,null):i==s.remotesInfo.length?n(new m({code:98,file:s.file}),null,null):void 0))},tryRemote:function(e,i){i.s3Params=this.getSingleRemoteInfo(i.dir,e.remoteUuid);let t=i.dir.endsWith("/")?i.dir.slice(0,-1):i.dir,n=t.split("/")[t.split("/").length-1]+i.file.relativePath;return i.s3Params.Key=n,i.s3Params.VersionId=e.versionId,this.accessRemoteFile(i)},accessRemoteFile:function(e){return e.limit&&(e.s3Params.Range="bytes=0-"+e.limit),new Promise((i,t)=>{this.constructAwsRequest(e).then(n=>{e.file.name.endsWith(".gz")?this.extractGzipBuffer(n,e).then(e=>i(e)).catch(e=>t(e)):i(n)}).catch(t)})},constructAwsRequest:function(e){return S.Z&&Object.keys(T.env).indexOf("AWS_ACCESS_KEY_ID")>-1?new _.g().getObject(e.s3Params).then(e=>e.Body):fetch(this.constructAwsUrl(e)).then(e=>e.ok?e.buffer():Promise.reject(Error("HTTP response failed - ".concat(e.status," - ").concat(e.statusText))))},constructAwsUrl:function(e){let i="http://s3.amazonaws.com/".concat(e.s3Params.Bucket,"/").concat(e.s3Params.Key);return i=e.s3Params.VersionId?i+"?VersionId="+e.s3Params.VersionId:i,i=e.s3Params.Range?i+"?Range="+e.s3Params.Range:i},extractGzipBuffer:function(e,i){return new Promise((t,n)=>{try{t(b().inflate(e))}catch(e){return n(new m({code:28,file:i.file}))}})},callGitAnnex:function(e,i){return g().execSync(e,{shell:!0,cwd:i}).toString()},getRemotesInfo:function(e,i){let t=i.relativePath&&i.relativePath.startsWith("/")?i.relativePath.substring(1):i.relativePath,n=this.getLookupKey(t,e),s=this.getHashDirLower(n,e),o=this.getRemoteMetadata(s,n,e);return this.processRemoteMetadata(o)},getLookupKey:function(e,i){return this.callGitAnnex("git-annex lookupkey ".concat(e),i).trim()},getHashDirLower:function(e,i){try{return JSON.parse(this.callGitAnnex("git-annex examinekey --json ".concat(e),i)).hashdirlower}catch(e){return null}},getRemoteMetadata:function(e,i,t){let n="git show git-annex:".concat(e).concat(i,".log.rmet");return this.callGitAnnex(n,t)},getSingleRemoteInfo:function(e,i){let t="cd ".concat(e,"\n    git-annex info ").concat(i),n=this.callGitAnnex(t);return this.getRemoteBucket(n)},getRemoteBucket:function(e){let i={Bucket:null};for(let t of e.split("\n"))t.includes("bucket: ")&&(i.Bucket=t.split(": ")[1]);return i},processRemoteMetadata:function(e){let i=[];return e.split("\n").map(e=>{let t=e.split(" ");if(3==t.length){let e=t[2].split("#"),n=t[0],s=t[1].split(":");if(2==e.length&&2==s.length){let t=s[0],o=e[1],r=e[0].substring(1);i.push({timestamp:n,remoteUuid:t,fileName:o,versionId:r})}}}),i},isGitAnnex:function(e){return!!S.Z&&u().existsSync(e+"/.git/annex")}},A=t(3214),E=t.n(A),C=function(e){let i;if(!e.stats)try{i=u().statSync(e.path)}catch(e){i={size:0}}return i},P=t(3095);function N(e,i,t){var n=[];if(!(0,P.JSHINT)(i))for(var s=P.JSHINT.data(),o=0;s.errors.length>o;++o){var r=s.errors[o];r&&n.push(new m({code:27,file:e,line:r.line?r.line:null,character:r.character?r.character:null,reason:r.reason?r.reason:null,evidence:r.evidence?r.evidence:null}))}t(n)}var O={parse:function(e,i){return new Promise(t=>{let n,s;try{n=JSON.parse(i)}catch(e){s=e}finally{s?N(e,i,function(e){t({issues:e,parsed:null})}):t({issues:[],parsed:n})}})},jshint:N},w={parse:function(e,i,t){(n={ignoreWarnings:!!(n=i||{}).ignoreWarnings,ignoreNiftiHeaders:!!n.ignoreNiftiHeaders,ignoreSymlinks:!!n.ignoreSymlinks,ignoreSubjectConsistency:!!n.ignoreSubjectConsistency,blacklistModalities:n.blacklistModalities,verbose:!!n.verbose,gitTreeMode:!!n.gitTreeMode,remoteFiles:!!n.remoteFiles,gitRef:n.gitRef||"HEAD",config:n.config||{}}).config&&"boolean"!=typeof n.config?this.parseConfig(e,n.config,function(e,i){n.config=i,t(e,n)}):t(null,n)},getOptions:()=>Object.freeze({...n}),loadConfig:function(e,i,t){if("string"==typeof i){let n;if(S.Z)n={path:E().isAbsolute(i)?i:E().join(e,i)};else if(!(n=[...e].find(e=>e.webkitRelativePath===i)))return t(null,n,JSON.stringify({}));n.stats=C(n),z(n).then(e=>{t(null,n,e)}).catch(e=>{44===e.code?t(null,n,JSON.stringify({})):t([e],n,null)})}else"object"==typeof i&&t(null,{path:"config"},JSON.stringify(i))},parseConfig:function(e,i,t){this.loadConfig(e,i,function(e,i,n){e?t(e,null):O.parse(i,n).then(e=>{let{issues:i,parsed:n}=e;i&&i.length>0?t(i,null):t(null,{ignore:n.ignore?[].concat(n.ignore):[],warn:n.warn?[].concat(n.warn):[],error:n.error?[].concat(n.error):[],ignoredFiles:n.ignoredFiles?[].concat(n.ignoredFiles):[]})})})}},j=t(7061),L=function(e,i,t,n){u().access(e.path,function(s){s?u().lstat(e.path,function(s,o){!s&&o&&o.isSymbolicLink()?w.getOptions().remoteFiles?function(e,i,t,n){if(i){let i=!!e.name.includes(".nii")&&500;I.getAnnexedFile(e,t,i,n)}else n(new m({code:43,file:e}),e.stats)}(e,i,t,n):n(new m({code:114,file:e}),e.stats):n(new m({code:44,file:e}),e.stats)}):j.nextTick(function(){0===e.stats.size&&n(new m({code:99,file:e,reason:"Empty files (".concat(e.path,") not allowed.")}),e.stats),n(null,e.stats)})})},M=t(1832),D=t.n(M);let x=/.json$/,k=e=>x.test(S.Z?e.name:e.relativePath);if("undefined"==typeof TextDecoder){let{TextDecoder:e}=t(1323);t.g.TextDecoder=e}let R=(e,i,t)=>{k(e)&&t({isUtf8:D()(i)})};var z=function(e,i,t){return new Promise((n,s)=>{if(S.Z)L(e,i,t,function(i,t,o){return i?s(i):(o||u().readFile(e.path,function(i,t){return i?s(i):(R(e,t,i=>{let{isUtf8:t}=i;t||s(new m({code:123,file:e}))}),n(t.toString("utf8")))}),o)?n(o.toString("utf8")):void 0});else{let i=new FileReader;i.onloadend=i=>{if(i.target.readyState==FileReader.DONE){if(!i.target.result)return s(new m({code:44,file:e}));let t=new Uint8Array(i.target.result);return R(e,t,i=>{let{isUtf8:t}=i;t||s(new m({code:123,file:e}))}),n(new TextDecoder().decode(t))}},i.readAsArrayBuffer(e)}})},Z=t(6301);let F=t(8843);var q=t(9038),G=t(816).Buffer;async function U(e,i){let t;if(t="slice"in e?e.slice(0,1024):await e.readBytes(0,1024),0==e.size){i({error:new m({code:44,file:e})});return}if(e.size<348){i({error:new m({code:36,file:e})});return}(function(e,i){let t=new FileReader;return t.onloadend=function(){let n;let s=new Uint8Array(t.result);try{n=e.name.endsWith(".nii")?s:b().inflate(s)}catch(t){i(B(s,e));return}i($(n,e))},t})(e,i).readAsArrayBuffer(t)}function $(e,i){var t;try{t=q.parseNIfTIHeader(e)}catch(e){return{error:new m({code:26,file:i})}}return t}function B(e,i){try{q.parseNIfTIHeader(e)}catch(e){return{error:new m({code:26,file:i})}}return{error:new m({code:28,file:i})}}var V=t(6678),H=t.n(V);async function W(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=await eo(e);return Y(S.Z?await X(E().resolve(e),t,i):function(e,i){let t=[];for(let n=0;n<e.length;n++){let s=e[n];s.relativePath=J(s.webkitRelativePath),i.ignores(E().relative("/",s.relativePath))&&(s.ignore=!0),t.push(s)}return t}(e,t))}function Y(e){let i={};for(let t=0;t<e.length;t++)i[t]=e[t];return i}function J(e){return -1!==e.indexOf("\\")?"/"+e.split("\\").slice(1).join("/"):"/"!==e[0]?"/"+e.split("/").slice(1).join("/"):e}async function X(e,i,t){let n=e.substr(e.lastIndexOf(E().sep)+1)+"$",s=e.replace(new RegExp(n),"");if(t.gitTreeMode){let n=await en(e,i,t);if(null!==n)return n}return await es(e,s,i,t)}let K=(e,i)=>new Promise(t=>{let n="",s=y.spawn("git",["ls-tree","-l","-r",i],{cwd:e,encoding:"utf-8"});s.stdout.on("data",e=>{n+=e.toString()}),s.stderr.on("data",()=>{t(null)}),s.on("close",()=>{t(n.trim().split("\n"))})}),Q=e=>e.map(e=>{let[i,t]=e.split("	"),[n,s,o,r]=i.split(/\s+/);return{path:t,mode:n,objType:s,objHash:o,size:r}}).filter(e=>{let{path:i,mode:t}=e;return!/^\.git/.test(i)&&!/^\.datalad/.test(i)&&".gitattributes"!==i&&"160000"!==t}).reduce((e,i)=>{let{files:t,symlinkFilenames:n,symlinkObjects:s}=e,{path:o,mode:r,objHash:a,size:l}=i;return"120000"===r?(n.push(o),s.push(a)):t.push({path:o,size:parseInt(l)}),{files:t,symlinkFilenames:n,symlinkObjects:s}},{files:[],symlinkFilenames:[],symlinkObjects:[]}),ee=(e,i)=>new Promise(t=>{let n="",s=y.spawn("git",["cat-file","--batch","--buffer"],{cwd:e,encoding:"utf-8"});s.stdin.write(i),s.stdin.end(),s.stdout.on("data",e=>{n+=e.toString()}),s.stderr.on("data",()=>{t(null)}),s.on("close",()=>{t(n.trim().split("\n"))})}),ei=(e,i)=>e.filter((e,i)=>i%2==1).map((e,t)=>({path:i[t],size:parseInt(e.split("/").pop().match(/-s(\d+)/)[1])})),et=function(e,i){for(var t=arguments.length,n=Array(t>2?t-2:0),s=2;s<t;s++)n[s-2]=arguments[s];return n.reduce((e,i)=>[...e,...i],[]).map(e=>(e.relativePath=E().normalize("".concat(E().sep).concat(e.path)),e)).filter(e=>!i.ignores(e.relativePath.slice(1))).map(i=>(i.relativePath=J(i.relativePath),i.name=E().basename(i.path),i.path=E().join(e,i.relativePath),i))};async function en(e,i,t){let n=await K(e,t.gitRef);if(null===n||1===n.length&&""===n[0])return null;let{files:s,symlinkFilenames:o,symlinkObjects:r}=Q(n),a=ei(await ee(e,r.join("\n")),o);return et(e,i,s,a)}async function es(e,i,t,n){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];for(let o of(await u().promises.readdir(e,{withFileTypes:!0}))){let r=E().join(e,o.name),a=J(E().relative(i,r)),l=t.ignores(E().relative("/",a)),c={name:o.name,path:r,relativePath:a};if(l&&(c.ignore=!0),o.isDirectory())await es(r,i,t,n,s);else if(o.isSymbolicLink()){if(n.ignoreSymlinks)s.push(c);else try{let e=await u().promises.realpath(r);(await u().promises.stat(e)).isDirectory()?await es(e,i,t,n,s):s.push(c)}catch(e){return}}else s.push(c)}return s}async function eo(e){let i=H()().add(".*").add("!*.icloud").add("/derivatives").add("/sourcedata").add("/code"),t=S.Z?function(e){let i=e+"/.bidsignore";try{return u().accessSync(i),{path:i,stats:{size:null}}}catch(e){return null}}(e):function(e){for(var i=0;i<e.length;i++){let t=e[i];if("/.bidsignore"===J(t.webkitRelativePath))return t}}(e);if(t){let e=await z(t);i.add(e)}return i}var er=Object.assign(W,{readDir:W,getFilesFromFs:es,fileArrayToObject:Y,harmonizeRelativePath:J,readLsTreeLines:Q,readCatFileLines:ei,processFiles:et});let ea=e=>{let i=e.filename,t=e.path,n=i.length-1,s=i[n],o=i.slice(0,n),r=o.filter(e=>0>t.indexOf(e)),a=[];return t.map((e,i)=>{let n=t.slice(0,i+1),l=n.join("/"),c=o.filter(e=>n.indexOf(e)>-1).join("_");for(let e=0;e<Math.pow(2,r.length);e++){let i=r.filter((i,t)=>e&1<<t).concat([s]).join("_");a.push(el(l,i,c))}}),i.indexOf("bold.json")>-1&&(a=ec(a)),a},el=(e,i,t)=>e+"/"+(t?[t,i].join("_"):i),ec=e=>e.filter(e=>e.indexOf("task")>-1),ed=[[/sub-(.*?)_task-[a-zA-Z0-9]*[_-][a-zA-Z0-9]*(?:_acq-[a-zA-Z0-9-]*)?(?:_run-\d+)?_/g,58,"task name contains illegal character:"],[/sub-(.*?)(_task-\w+.\w+)?(_acq-[a-zA-Z0-9]*[_-][a-zA-Z0-9]*)(?:_run-\d+)?_/g,59,"acq name contains illegal character:"],[/sub-[a-zA-Z0-9]*[_-][a-zA-Z0-9]*_/g,62,"sub name contains illegal character:"],[/ses-[a-zA-Z0-9]*[_-][a-zA-Z0-9]*?_(.*?)/g,63,"ses name contains illegal character:"]];var eu={FileAPI:c,newFile:function(e){return new(c())([""],e)},readFile:z,readDir:er,readBuffer:e=>new Promise((i,t)=>{if(S.Z)i(u().readFileSync(e.path));else try{let t=new FileReader;t.onload=e=>{i(e.target.result)},t.readAsArrayBuffer(e)}catch(e){t(e)}}),readOMEFile:e=>{let i=Z.ZP.load(e).ImageDescription.description;return new Promise((e,t)=>{F.parseStringPromise(i).then(i=>{e(i)}).catch(e=>t(e))})},readNiftiHeader:function(e,i,t,n){S.Z?L(e,i,t,function(i,t,s){if(e.stats=t,i){n({error:i});return}if(t&&t.size<348){n({error:new m({code:36,file:e})});return}if(!s)return function(e,i){let t=G.alloc(1024);u().open(e.path,"r",function(n,s){if(n){i({error:new m({code:44,file:e})});return}u().read(s,t,0,1024,0,function(){if(e.name.endsWith(".nii"))i($(t,e));else try{let n=b().inflate(t);i($(n,e))}catch(n){i(B(t,e))}})})}(e,n);n($(s,e))}):U(e,n)},generateMergedSidecarDict:function(e,i){let t=new Map,n=!0;e.map(e=>{let s=i[e];if(s)for(let e of Object.keys(s))s.hasOwnProperty(e)&&t.set(e,s[e]);else null===s&&(n=!1)});let s=Object.fromEntries(t);return n||(s.invalid=!0),s},potentialLocations:e=>{let i=(e=e.startsWith("/")?e:"/"+e).split("/"),t=i[i.length-1],n=ea({path:i.splice(0,i.length-1),filename:t.split("_")});return 0>n.indexOf(e)?[e].concat(n).reverse():n},getBFileContent:function(e,i){for(var t=0;t<e.length;t++){var n=e[t];if(i.hasOwnProperty(n))return i[n]}},collectDirectorySize:e=>{let i=0;return Object.keys(e).forEach(t=>{let n=e[t];n.size?(i+=n.size,S.Z&&(n.stats={size:n.size})):(n.stats=C(n),i+=n.stats.size)}),i},illegalCharacterTest:e=>{let i=[];return Object.keys(e).forEach(t=>{let n=e[t],s=n.relativePath;s.startsWith("/derivatives")||s.startsWith("/code")||s.startsWith("/sourcedata")||ed.map(e=>{let t=e[0],o=e[1],r=e[2];t.exec(s)&&i.push(new m({file:n,code:o,evidence:r+s}))})}),i},sessions:{sessionMatcher:RegExp("(ses-.*?)/"),Subject:function(){this.files=[],this.sessions=[],this.missingSessions=[]}},remoteFiles:I,getFileStats:C},ef=t(7675);function eh(e){this.path=this.fileList[e].relativePath;let i=!1,t=this.path.includes(this.dictPath)?this.dictArgs:[];return t.length>0&&t.every(e=>"coordsystem"===e||this.path.includes(e))&&(i=function(e,i,t){let n=!1,s=!1,o=t.relativePath===e;return!o&&ef.Z.file.isDatafile(t.relativePath)&&(n=!0),!o&&!n&&((i.endsWith("_meg")||i.endsWith("_coordsystem"))&&(s=t.relativePath.includes("_meg.ds")),(i.endsWith("_ieeg")||i.endsWith("_coordsystem"))&&(s=t.relativePath.includes("_ieeg.mefd"))),s&&(n=!0),n}(this.file.relativePath,this.noExt,this.fileList[e])),i}let ep=/^\/derivatives\/\w+re/;var em=e=>{let i=[];for(let t of e){let e=t.split("_"),n=e[e.length-1];if(ef.Z.file.hasModality(t)){let e=n.slice(0,n.indexOf("."));-1===i.indexOf(e)&&i.push(e)}}return i},e_=t(4797),ey=e=>{let i=[];return Object.keys(e).forEach(t=>{let n=e[t];if(!ef.Z.file.isStimuliData(n.relativePath)&&ef.Z.isBIDS(n.relativePath)){let e=ef.Z.getPathValues(n.relativePath),t=e.sub&&"emptyroom"==e.sub;e.ses&&-1===i.indexOf(e.ses)&&!t&&i.push(e.ses)}}),i},eg=e=>{let i=[];return Object.keys(e).forEach(t=>{let n=e[t];if(!ef.Z.file.isStimuliData(n.relativePath)&&ef.Z.isBIDS(n.relativePath)){let e=ef.Z.getPathValues(n.relativePath),t=e.sub&&"emptyroom"==e.sub;e.sub&&-1===i.indexOf(e.sub)&&!t&&i.push(e.sub)}}),i},ev=t(1722),eb=t.n(ev)()(200);let eS=["metre","m","kilogram","kg","second","s","ampere","A","kelvin","K","mole","mol","candela","cd","radian","rad","steradian","sr","hertz","Hz","newton","N","pascal","Pa","joule","J","watt","W","coulomb","C","volt","V","farad","F","ohm","Ω","siemens","S","weber","Wb","tesla","T","henry","H","degree","Celsius","\xb0C","lumen","lm","lux","lx","becquerel","Bq","gray","Gy","sievert","Sv","katal","kat"],eT=["deca","da","hecto","h","kilo","k","mega","M","giga","G","tera","T","peta","P","exa","E","zetta","Z","yotta","Y","deci","d","centi","c","milli","m","micro","\xb5","nano","n","pico","p","femto","f","atto","a","zepto","z","yocto","y"],eI=["/","*","⋅"],eA=[...eI,"^"],eE=["⁰","\xb9","\xb2","\xb3","⁴","⁵","⁶","⁷","⁸","⁹"],eC="(".concat(eT.join("|"),")?"),eP="(".concat(eS.join("|"),")"),eN="(".concat("⁻","?[").concat(eE,"]+)?"),eO=new RegExp("".concat("^").concat(eC).concat(eP,"(").concat(eN,"|").concat("(\\^-?[0-9]+)?",")").concat("$")),ew=new RegExp("[".concat(eI.join(""),"]")),ej=e=>"n/a"===e.trim().toLowerCase(),eL=e=>"%"===e.trim();var eM={array:s,config:a,files:eu,bids_files:{checkSidecarForDatafiles:function(e,i){let t=e.relativePath.replace(".json",""),n=t.substring(t.lastIndexOf("/")+1,t.length),s={dictArgs:n.split("_"),dictName:n,dictPath:t.substring(0,t.lastIndexOf("/")+1),file:e,fileList:i,noExt:t};return Object.keys(i).some(eh,s)}},issues:m,json:O,modalities:{group:function(e){for(var i=[[["magnitude1","magnitude2","phase1","phase2"],"fieldmap"],[["magnitude1","magnitude2","phasediff"],"fieldmap"],[["magnitude1","phasediff"],"fieldmap"],[["magnitude","fieldmap"],"fieldmap"],[["epi"],"fieldmap"]],t=0;t<i.length;t++){for(var n=i[t][0],s=i[t][1],o=!0,r=0;r<n.length;r++)-1===e.indexOf(n[r])&&(o=!1);if(o){e.push(s);for(var a=0;a<n.length;a++)e.splice(e.indexOf(n[a]),1)}}return e}},options:w,type:ef.Z,collectSummary:(e,i)=>{let t={sessions:[],subjects:[],subjectMetadata:{},tasks:[],modalities:[],secondaryModalities:[],totalFiles:-1,size:0,dataProcessed:!1,pet:null};t.dataProcessed=-1!==Object.values(e).findIndex(e=>ep.test(e.relativePath)),Object.keys(e).forEach(function(i){e[i].ignore&&delete e[i]}),t.totalFiles=Object.keys(e).length;let n=Object.keys(e).map(i=>e[i].relativePath);t.size=eu.collectDirectorySize(e);let{primary:s,secondary:o}=(0,e_.Z)(n);return t.modalities=s,t.secondaryModalities=o,t.dataTypes=em(n),t.subjects=eg(e,i),t.sessions=ey(e,i),t},limit:eb,unit:{roots:eS,prefixes:eT,superscriptNumbers:eE,operators:eA,validate:e=>{if(ej(e)||eL(e))return{isValid:!0,evidence:""};{let i=e.split(ew).map(e=>e.trim()).filter(e=>!eO.test(e)),t=0===i.length,n=t?"":"Subunit".concat(1===i.length?"":"s"," (").concat(i.join(", "),") of unit ").concat(e," is invalid. ");return{isValid:t,evidence:n}}}}}},2918:function(e,i){"use strict";i.Z=!1},2657:function(e,i,t){"use strict";var n=t(9676);let s=e=>"https://neurostars.org/"+(e&&e.key?"search?q="+e.key:"");i.Z=function(e){let i=e.hasOwnProperty("code")?e.code:null,t=n.Z[i];this.key=t.key,this.code=i,this.file=e.hasOwnProperty("file")?e.file:null,this.evidence=e.hasOwnProperty("evidence")?e.evidence:null,this.line=e.hasOwnProperty("line")?e.line:null,this.character=e.hasOwnProperty("character")?e.character:null,this.severity=e.hasOwnProperty("severity")?e.severity:t.severity,this.reason=e.hasOwnProperty("reason")?e.reason:t.reason,this.helpUrl=s(t)}},9676:function(e,i){"use strict";i.Z={0:{key:"INTERNAL ERROR",severity:"error",reason:"Internal error. SOME VALIDATION STEPS MAY NOT HAVE OCCURRED"},1:{key:"NOT_INCLUDED",severity:"error",reason:'Files with such naming scheme are not part of BIDS specification. This error is most commonly caused by typos in file names that make them not BIDS compatible. Please consult the specification and make sure your files are named correctly. If this is not a file naming issue (for example when including files not yet covered by the BIDS specification) you should include a ".bidsignore" file in your dataset (see https://github.com/bids-standard/bids-validator#bidsignore for details). Please note that derived (processed) data should be placed in /derivatives folder and source data (such as DICOMS or behavioural logs in proprietary formats) should be placed in the /sourcedata folder.'},2:{key:"REPETITION_TIME_GREATER_THAN",severity:"warning",reason:"'RepetitionTime' is greater than 100 are you sure it's expressed in seconds?"},3:{key:"ECHO_TIME_GREATER_THAN",severity:"warning",reason:"'EchoTime' is greater than 1 are you sure it's expressed in seconds?"},4:{key:"ECHO_TIME_DIFFERENCE_GREATER_THAN",severity:"warning",reason:"'EchoTimeDifference' is greater than 1 are you sure it's expressed in seconds?"},5:{key:"TOTAL_READOUT_TIME_GREATER_THAN",severity:"warning",reason:"'TotalReadoutTime' is greater than 10 are you sure it's expressed in seconds?"},6:{key:"ECHO_TIME_NOT_DEFINED",severity:"warning",reason:"You should define 'EchoTime' for this file. If you don't provide this information field map correction will not be possible."},7:{key:"PHASE_ENCODING_DIRECTION_NOT_DEFINED",severity:"warning",reason:"You should define 'PhaseEncodingDirection' for this file. If you don't provide this information field map correction will not be possible."},8:{key:"EFFECTIVE_ECHO_SPACING_NOT_DEFINED",severity:"warning",reason:"You should define 'EffectiveEchoSpacing' for this file. If you don't provide this information field map correction will not be possible."},9:{key:"TOTAL_READOUT_TIME_NOT_DEFINED",severity:"warning",reason:"You should define 'TotalReadoutTime' for this file. If you don't provide this information field map correction using TOPUP might not be possible."},10:{key:"REPETITION_TIME_MUST_DEFINE",severity:"error",reason:"You have to define 'RepetitionTime' for this file."},11:{key:"REPETITION_TIME_UNITS",severity:"error",reason:"Repetition time was not defined in seconds, milliseconds or microseconds in the scan's header."},12:{key:"REPETITION_TIME_MISMATCH",severity:"error",reason:"Repetition time did not match between the scan's header and the associated JSON metadata file."},13:{key:"SLICE_TIMING_NOT_DEFINED",severity:"warning",reason:"You should define 'SliceTiming' for this file. If you don't provide this information slice time correction will not be possible. 'Slice Timing' is the time at which each slice was acquired within each volume (frame) of the acquisition. Slice timing is not slice order -- rather, it is a list of times containing the time (in seconds) of each slice acquisition in relation to the beginning of volume acquisition."},15:{key:"ECHO_TIME1-2_NOT_DEFINED",severity:"error",reason:"You have to define 'EchoTime1' and 'EchoTime2' for this file."},16:{key:"ECHO_TIME_MUST_DEFINE",severity:"error",reason:"You have to define 'EchoTime' for this file."},17:{key:"UNITS_MUST_DEFINE",severity:"error",reason:"You have to define 'Units' for this file."},18:{key:"PHASE_ENCODING_DIRECTION_MUST_DEFINE",severity:"error",reason:"You have to define 'PhaseEncodingDirection' for this file."},19:{key:"TOTAL_READOUT_TIME_MUST_DEFINE",severity:"error",reason:"You have to define 'TotalReadoutTime' for this file."},20:{key:"EVENTS_COLUMN_ONSET",severity:"error",reason:"First column of the events file must be named 'onset'"},21:{key:"EVENTS_COLUMN_DURATION",severity:"error",reason:"Second column of the events file must be named 'duration'"},22:{key:"TSV_EQUAL_ROWS",severity:"error",reason:"All rows must have the same number of columns as there are headers."},23:{key:"TSV_EMPTY_CELL",severity:"error",reason:'Empty cell in TSV file detected: The proper way of labeling missing values is "n/a".'},24:{key:"TSV_IMPROPER_NA",severity:"warning",reason:'A proper way of labeling missing values is "n/a".'},25:{key:"EVENTS_TSV_MISSING",severity:"warning",reason:'Task scans should have a corresponding events.tsv file. If this is a resting state scan you can ignore this warning or rename the task to include the word "rest".'},26:{key:"NIFTI_HEADER_UNREADABLE",severity:"error",reason:"We were unable to parse header data from this NIfTI file. Please ensure it is not corrupted or mislabeled."},27:{key:"JSON_INVALID",severity:"error",reason:"Not a valid JSON file."},28:{key:"GZ_NOT_GZIPPED",severity:"error",reason:"This file ends in the .gz extension but is not actually gzipped."},29:{key:"VOLUME_COUNT_MISMATCH",severity:"error",reason:"The number of volumes in this scan does not match the number of volumes in the corresponding .bvec and .bval files."},30:{key:"BVAL_MULTIPLE_ROWS",severity:"error",reason:".bval files should contain exactly one row of volumes."},31:{key:"BVEC_NUMBER_ROWS",severity:"error",reason:".bvec files should contain exactly three rows of volumes."},32:{key:"DWI_MISSING_BVEC",severity:"error",reason:"DWI scans should have a corresponding .bvec file."},33:{key:"DWI_MISSING_BVAL",severity:"error",reason:"DWI scans should have a corresponding .bval file."},36:{key:"NIFTI_TOO_SMALL",severity:"error",reason:"This file is too small to contain the minimal NIfTI header."},37:{key:"INTENDED_FOR",severity:"error",reason:"'IntendedFor' field needs to point to an existing file."},38:{key:"INCONSISTENT_SUBJECTS",severity:"warning",reason:"Not all subjects contain the same files. Each subject should contain the same number of files with the same naming unless some files are known to be missing."},39:{key:"INCONSISTENT_PARAMETERS",severity:"warning",reason:"Not all subjects/sessions/runs have the same scanning parameters."},40:{key:"NIFTI_DIMENSION",severity:"warning",reason:"NIfTI file's header field for dimension information blank or too short."},41:{key:"NIFTI_UNIT",severity:"warning",reason:"NIfTI file's header field for unit information for x, y, z, and t dimensions empty or too short"},42:{key:"NIFTI_PIXDIM",severity:"warning",reason:"NIfTI file's header field for pixel dimension information empty or too short."},43:{key:"ORPHANED_SYMLINK",severity:"error",reason:"This file appears to be an orphaned symlink. Make sure it correctly points to its referent."},44:{key:"FILE_READ",severity:"error",reason:"We were unable to read this file. Make sure it contains data (file size > 0 kB) and is not corrupted, incorrectly named, or incorrectly symlinked."},45:{key:"SUBJECT_FOLDERS",severity:"error",reason:'There are no subject folders (labeled "sub-*") in the root of this dataset.'},46:{key:"BVEC_ROW_LENGTH",severity:"error",reason:"Each row in a .bvec file should contain the same number of values."},47:{key:"B_FILE",severity:"error",reason:".bval and .bvec files must be single space delimited and contain only numerical values."},48:{key:"PARTICIPANT_ID_COLUMN",severity:"error",reason:"Participants and phenotype .tsv files must have a 'participant_id' column."},49:{key:"PARTICIPANT_ID_MISMATCH",severity:"error",reason:"Participant labels found in this dataset did not match the values in participant_id column found in the participants.tsv file."},50:{key:"TASK_NAME_MUST_DEFINE",severity:"error",reason:"You have to define 'TaskName' for this file."},51:{key:"PHENOTYPE_SUBJECTS_MISSING",severity:"error",reason:"A phenotype/ .tsv file lists subjects that were not found in the dataset."},52:{key:"STIMULUS_FILE_MISSING",severity:"error",reason:"A stimulus file was declared but not found in the dataset."},53:{key:"NO_T1W",severity:"ignore",reason:"Dataset does not contain any T1w scans."},54:{key:"BOLD_NOT_4D",severity:"error",reason:"Bold scans must be 4 dimensional."},55:{key:"JSON_SCHEMA_VALIDATION_ERROR",severity:"error",reason:"Invalid JSON file. The file is not formatted according the schema."},56:{key:"Participants age 89 or higher",severity:"warning",reason:'As per section 164.514(C) of "The De-identification Standard" under HIPAA guidelines, participants with age 89 or higher should be tagged as 89+. More information can be found at https://www.hhs.gov/hipaa/for-professionals/privacy/special-topics/de-identification/#standard'},57:{key:"DATASET_DESCRIPTION_JSON_MISSING",severity:"error",reason:"The compulsory file /dataset_description.json is missing. See Section 03 (Modality agnostic files) of the BIDS specification."},58:{key:"TASK_NAME_CONTAIN_ILLEGAL_CHARACTER",severity:"error",reason:"Task Name contain an Illegal Character hyphen or underscore. Please edit the filename as per BIDS spec."},59:{key:"ACQ_NAME_CONTAIN_ILLEGAL_CHARACTER",severity:"error",reason:"acq Name contain an Illegal Character hyphen or underscore. Please edit the filename as per BIDS spec."},60:{key:"SFORM_AND_QFORM_IN_IMAGE_HEADER_ARE_ZERO",severity:"error",reason:"sform_code and qform_code in the image header are 0. The image/file will be considered invalid or assumed to be in LAS orientation."},61:{key:"QUICK_VALIDATION_FAILED",severity:"error",reason:'Quick validation failed - the general folder structure does not resemble a BIDS dataset. Have you chosen the right folder (with "sub-*/" subfolders)? Check for structural/naming issues and presence of at least one subject.'},62:{key:"SUBJECT_VALUE_CONTAINS_ILLEGAL_CHARACTER",severity:"error",reason:"Sub label contain an Illegal Character hyphen or underscore. Please edit the filename as per BIDS spec."},63:{key:"SESSION_VALUE_CONTAINS_ILLEGAL_CHARACTER",severity:"error",reason:"Ses label contain an Illegal Character hyphen or underscore. Please edit the filename as per BIDS spec."},64:{key:"SUBJECT_LABEL_IN_FILENAME_DOESNOT_MATCH_DIRECTORY",severity:"error",reason:"Subject label in the filename doesn't match with the path of the file. File seems to be saved in incorrect subject directory."},65:{key:"SESSION_LABEL_IN_FILENAME_DOESNOT_MATCH_DIRECTORY",severity:"error",reason:"Session label in the filename doesn't match with the path of the file. File seems to be saved in incorrect session directory."},66:{key:"SLICETIMING_VALUES_GREATOR_THAN_REPETITION_TIME",severity:"error",reason:'"SliceTiming" value/s contains invalid value as it is greater than RepetitionTime.  SliceTiming values should be in seconds not milliseconds (common mistake).'},67:{key:"NO_VALID_DATA_FOUND_FOR_SUBJECT",severity:"error",reason:"No BIDS compatible data found for at least one subject."},68:{key:"FILENAME_COLUMN",severity:"error",reason:"_scans.tsv files must have a 'filename' column."},70:{key:"WRONG_NEW_LINE",severity:"error",reason:"All TSV files must use Line Feed '\\n' characters to denote new lines. This files uses Carriage Return '\\r'."},71:{key:"MISSING_TSV_COLUMN_CHANNELS",severity:"error",reason:"The column names of the channels file must begin with ['name', 'type', 'units']"},72:{key:"MISSING_TSV_COLUMN_IEEG_CHANNELS",severity:"error",reason:"The column names of the channels file must begin with ['name', 'type', 'units', 'low_cutoff', 'high_cutoff']"},73:{key:"MISSING_TSV_COLUMN_IEEG_ELECTRODES",severity:"error",reason:"The column names of the electrodes file must begin with ['name', 'x', 'y', 'z', 'size']"},74:{key:"DUPLICATE_NIFTI_FILES",severity:"error",reason:"NIfTI file exist with both '.nii' and '.nii.gz' extensions."},75:{key:"NIFTI_PIXDIM4",severity:"error",reason:"NIfTI file's header is missing time dimension information."},76:{key:"EFFECTIVEECHOSPACING_TOO_LARGE",severity:"error",reason:"Abnormally high value of 'EffectiveEchoSpacing'."},77:{key:"UNUSED_STIMULUS",severity:"warning",reason:"There are files in the /stimuli directory that are not utilized in any _events.tsv file."},78:{key:"CHANNELS_COLUMN_SFREQ",severity:"error",reason:"Fourth column of the channels file must be named 'sampling_frequency'"},79:{key:"CHANNELS_COLUMN_LOWCUT",severity:"error",reason:"Third column of the channels file must be named 'low_cutoff'"},80:{key:"CHANNELS_COLUMN_HIGHCUT",severity:"error",reason:"Third column of the channels file must be named 'high_cutoff'"},81:{key:"CHANNELS_COLUMN_NOTCH",severity:"error",reason:"Third column of the channels file must be named 'notch'"},82:{key:"CUSTOM_COLUMN_WITHOUT_DESCRIPTION",severity:"warning",reason:"Tabular file contains custom columns not described in a data dictionary"},83:{key:"ECHOTIME1_2_DIFFERENCE_UNREASONABLE",severity:"error",reason:"The value of (EchoTime2 - EchoTime1) should be within the range of 0.0001 - 0.01."},84:{key:"ACQTIME_FMT",severity:"error",reason:'Entries in the "acq_time" column of _scans.tsv should be expressed in the following format YYYY-MM-DDTHH:mm:ss[.000000] (year, month, day, hour (24h), minute, second, and optionally fractional second; this is equivalent to the RFC3339 "date-time" format.'},85:{key:"SUSPICIOUSLY_LONG_EVENT_DESIGN",severity:"warning",reason:"The onset of the last event is after the total duration of the corresponding scan. This design is suspiciously long. "},86:{key:"SUSPICIOUSLY_SHORT_EVENT_DESIGN",severity:"warning",reason:"The onset of the last event is less than half the total duration of the corresponding scan. This design is suspiciously short. "},87:{key:"SLICETIMING_ELEMENTS",severity:"warning",reason:"The number of elements in the SliceTiming array should match the 'k' dimension of the corresponding NIfTI volume."},88:{key:"MALFORMED_BVEC",severity:"error",reason:"The contents of this .bvec file are undefined or severely malformed. "},89:{key:"MALFORMED_BVAL",severity:"error",reason:"The contents of this .bval file are undefined or severely malformed. "},90:{key:"SIDECAR_WITHOUT_DATAFILE",severity:"error",reason:"A json sidecar file was found without a corresponding data file"},91:{key:"_FIELDMAP_WITHOUT_MAGNITUDE_FILE",severity:"error",reason:"_fieldmap.nii[.gz] file does not have accompanying _magnitude.nii[.gz] file. "},92:{key:"MISSING_MAGNITUDE1_FILE",severity:"warning",reason:"Each _phasediff.nii[.gz] file should be associated with a _magnitude1.nii[.gz] file."},93:{key:"EFFECTIVEECHOSPACING_LARGER_THAN_TOTALREADOUTTIME",severity:"error",reason:"EffectiveEchoSpacing should always be smaller than TotalReadoutTime. "},94:{key:"MAGNITUDE_FILE_WITH_TOO_MANY_DIMENSIONS",severity:"error",reason:"_magnitude1.nii[.gz] and _magnitude2.nii[.gz] files must have exactly three dimensions. "},95:{key:"T1W_FILE_WITH_TOO_MANY_DIMENSIONS",severity:"error",reason:"_T1w.nii[.gz] files must have exactly three dimensions. "},96:{key:"MISSING_TSV_COLUMN_EEG_ELECTRODES",severity:"error",reason:"The column names of the electrodes file must begin with ['name', 'x', 'y', 'z']"},97:{key:"MISSING_SESSION",severity:"warning",reason:"Not all subjects contain the same sessions."},98:{key:"INACCESSIBLE_REMOTE_FILE",severity:"error",reason:"This file appears to be a symlink to a remote annexed file but could not be accessed from any of the configured remotes."},99:{key:"EMPTY_FILE",severity:"error",reason:"Empty files not allowed."},100:{key:"BRAINVISION_LINKS_BROKEN",severity:"error",reason:"Internal file pointers in BrainVision file triplet (*.eeg, *.vhdr, and *.vmrk) are broken or some files do not exist."},101:{key:"README_FILE_MISSING",severity:"warning",reason:"The recommended file /README is missing. See Section 03 (Modality agnostic files) of the BIDS specification."},102:{key:"TOO_FEW_AUTHORS",severity:"warning",reason:"The Authors field of dataset_description.json should contain an array of fields - with one author per field. This was triggered based on the presence of only one author field. Please ignore if all contributors are already properly listed."},103:{key:"MULTIPLE_COMMAS_IN_AUTHOR_FIELD",severity:"error",reason:"The Authors field of dataset_description.json should contain an array of fields - with one author per field. This was triggered based on the presence of multiple commas in a single author field. Please ensure your authors are properly formatted."},104:{key:"HED_ERROR",severity:"error",reason:"The validation on this HED string returned an error."},105:{key:"HED_WARNING",severity:"warning",reason:"The validation on this HED string returned a warning."},106:{key:"HED_INTERNAL_ERROR",severity:"error",reason:"An internal error occurred during HED validation."},107:{key:"HED_INTERNAL_WARNING",severity:"warning",reason:"An internal warning occurred during HED validation."},108:{key:"HED_MISSING_VALUE_IN_SIDECAR",severity:"warning",reason:"The json sidecar does not contain this column value as a possible key to a HED string."},109:{key:"HED_VERSION_NOT_DEFINED",severity:"warning",reason:"You should define 'HEDVersion' for this file. If you don't provide this information, the HED validation will use the latest version available."},113:{key:"NO_AUTHORS",severity:"warning",reason:"The Authors field of dataset_description.json should contain an array of fields - with one author per field. This was triggered because there are no authors, which will make DOI registration from dataset metadata impossible."},114:{key:"INCOMPLETE_DATASET",severity:"error",reason:"This dataset contains remote files. If you would like to validate with remote files, use the --remoteFiles option."},115:{key:"EMPTY_DATASET_NAME",severity:"warning",reason:"The Name field of dataset_description.json is present but empty of visible characters."},123:{key:"INVALID JSON ENCODING",severity:"error",reason:"JSON files must be valid utf-8."},124:{key:"INVALID_TSV_UNITS",severity:"error",reason:"Units in .tsv files must be valid SI units as described in the BIDS spec Appendix V (https://bids-specification.readthedocs.io/en/stable/99-appendices/05-units.html)."},125:{key:"CHANNELS_COLUMN_STATUS",severity:"error",reason:"Status column in channels.tsv files must contain only one of two values: good or bad. Per the BIDS spec: (https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/04-intracranial-electroencephalography.html#channels-description-_channelstsv)."},126:{key:"MISSING_TSV_COLUMN_TIME",severity:"error",reason:"*_blood.tsv require a time column."},127:{key:"NOT_IN_USE",severity:"error",reason:"Code 127 is currently not used or reserved."},128:{key:"NO_GENETIC_DATABASE",severity:"error",reason:"A genetic_info.json file is present but no Database field present in Genetics object in dataset_description.json."},129:{key:"SCANS_FILENAME_NOT_MATCH_DATASET",severity:"error",reason:"The filename in scans.tsv file does not match what is present in the BIDS dataset."},130:{key:"CHANNELS_COLUMN_TYPE_UPPER_CASE",severity:"error",reason:"Type column in channels.tsv files should consist of upper-case characters."},131:{key:"CHANNELS_COLUMN_TYPE",severity:"error",reason:"Type column in channels.tsv files should only consist of values allowed in the specification for MEG/EEG/iEEG data."},133:{key:"LABELING_TYPE_MUST_DEFINE",severity:"error",reason:"You should define 'ArterialSpinLabelingType' for this file. 'ArterialSpinLabelingType' can be CASL, PCASL, PASL."},134:{key:"LABELING_DURATION_MUST_DEFINE",severity:"error",reason:"You should define 'LabelingDuration' for this file. 'LabelingDuration' is the total duration of the labeling pulse train, in seconds, corresponding to the temporal width of the labeling bolus for `(P)CASL`. In case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`, a scalar must be specified. In case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`, an array of numbers must be specified, for which any `m0scan` in the timeseries has a `LabelingDuration` of zero. In case an array of numbers is provided, its length should be equal to the number of volumes specified in `*_aslcontext.tsv`. Corresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`."},135:{key:"POST_LABELING_DELAY_MUST_DEFINE",severity:"error",reason:"You should define 'PostLabelingDelay' for this file. 'PostLabelingDelay' is the time, in seconds, after the end of the labeling (for (P)CASL) or middle of the labeling pulse (for PASL) until the middle of the excitation pulse applied to the imaging slab (for 3D acquisition) or first slice (for 2D acquisition). Can be a number (for a single-PLD time series) or an array of numbers (for multi-PLD and Look-Locker). In the latter case, the array of numbers contains the PLD of each volume (i.e. each 'control' and 'label') in the acquisition order. Any image within the time-series without a PLD (e.g. an 'm0scan') is indicated by a zero. Based on DICOM Tags 0018,9079 Inversion Times and 0018,0082 InversionTime."},136:{key:"BACKGROUND_SUPPRESSION_MUST_DEFINE",severity:"error",reason:"You should define 'BackgroundSuppression' for this file. 'BackGroundSuppression' is a boolean indicating if background suppression is used."},137:{key:"VASCULAR_CRUSHING_MUST_DEFINE",severity:"warning",reason:"It is recommended to define 'VascularCrushing' for this file. 'VascularCrushing' is a boolean value indicating if an ASL crusher method is used."},138:{key:"PULSE_SEQUENCE_DETAILS_MISSING",severity:"warning",reason:"It is recommended to define 'PulseSequenceDetails' for this file. 'PulseSequenceDetails' is the information beyond pulse sequence type that identifies the specific pulse sequence used (for example, 'Standard Siemens Sequence distributed with the VB17 software', 'Siemens WIP ### version #.##', or 'Sequence written by X using a version compiled on MM/DD/YYYY')."},139:{key:"BLACKLISTED_MODALITY",severity:"error",reason:"Found a modality that has been blacklisted through validator configuration."},140:{key:"140_EMPTY",severity:"warning",reason:""},141:{key:"141_EMPTY",severity:"warning",reason:""},142:{key:"LABELING_SLAB_THICKNESS_MISSING",severity:"warning",reason:"It is recommended to define 'LabelingSlabThickness' for this file. 'LabelingSlabThickness' is the thickness of the labeling slab in millimeters. For non-selective FAIR a zero is entered. Corresponds to DICOM Tag 0018,9254 ASL Slab Thickness."},143:{key:"ACQUISITION_VOXELSIZE_MISSING",severity:"warning",reason:"It is recommended to define 'AcquisitionVoxelSize' for this file. 'AcquisitionVoxelSize' is an array of numbers with a length of 3, in millimeters. This parameter denotes the original acquisition voxel size, excluding any inter-slice gaps and before any interpolation or resampling within reconstruction or image processing. Any point spread function effects (e.g. due to T2-blurring) that would decrease the effective resolution are not considered here."},144:{key:"BACKGROUND_SUPPRESSION_PULSE_TIME_MISSING",severity:"warning",reason:"It is recommended to define 'BackgroundSuppressionPulseTime' for this file, when the 'BackgroundSuppression' is set to true. 'BackGroundSuppressionPulseTime' is an array of numbers containing timing, in seconds, of the background suppression pulses with respect to the start of the labeling. In case of multi-PLD with different background suppression pulse times, only the pulse time of the first PLD should be defined."},145:{key:"VASCULAR_CRUCHING_VENC_MISSING",severity:"warning",reason:"It is recommended to define 'VascularCrushingVENC' for this file, when the 'VascularCrushing' is set to true. 'VascularCrushingVENC' is the crusher gradient strength, in centimeters per second. Specify either one number for the total time-series, or provide an array of numbers, for example when using QUASAR, using the value zero to identify volumes for which 'VascularCrushing' was turned off. Corresponds to DICOM Tag 0018,925A ASL Crusher Flow Limit."},147:{key:"PASL_BOLUS_CUT_OFF_FLAG",severity:"error",reason:"You should define the 'BolusCutOffFlag' for this file. 'BolusCutOffFlag' is a boolean indicating if a bolus cut-off technique is used. Corresponds to DICOM Tag 0018,925C ASL Bolus Cut-off Flag."},149:{key:"PASL_BOLUS_CUT_OFF_DELAY_TIME",severity:"error",reason:"It is required to define 'BolusCutOffDelayTime' for this file, when 'BolusCutOffFlag' is set to true. 'BolusCutOffDelayTime' is the duration between the end of the labeling and the start of the bolus cut-off saturation pulse(s), in seconds. This can be a number or array of numbers, of which the values must be non-negative and monotonically increasing, depending on the number of bolus cut-off saturation pulses. For Q2TIPS, only the values for the first and last bolus cut-off saturation pulses are provided. Based on DICOM Tag 0018,925F ASL Bolus Cut-off Delay Time."},150:{key:"PASL_BOLUS_CUT_OFF_TECHNIQUE",severity:"error",reason:"It is required to define 'BolusCutOffTechnique' for this file, when 'BolusCutOffFlag' is set to true. 'BolusCutOffTechnique' is the name of the technique used (e.g. Q2TIPS, QUIPSS, QUIPSSII). Corresponds to DICOM Tag 0018,925E ASL Bolus Cut-off Technique."},153:{key:"M0Type_NOT_SET",severity:"error",reason:"You should define the 'M0Type' for this file. 'M0Type' describes the presence of M0 information, as either: “Separate” when a separate `*_m0scan.nii[.gz]` is present, “Included” when an m0scan volume is contained within the current ‘*_asl.nii[.gz]’, “Estimate” when a single whole-brain M0 value is provided, or “Absent” when no specific M0 information is present."},154:{key:"M0Type_SET_INCORRECTLY",severity:"error",reason:"M0Type was not defined correctly. If 'M0Type' is equal to included, the corresponding '*_aslcontext.tsv' should contain the 'm0scan' volume."},155:{key:"MRACQUISITIONTYPE_MUST_DEFINE",severity:"error",reason:"You should define 'MRAcquisitionType' for this file. 'MRAcquistionType' is the type of sequence readout with possible values: `2D` or `3D`. Corresponds to DICOM Tag 0018,0023 `MR Acquisition Type`."},156:{key:"ACQUISITION_VOXELSIZE_WRONG",severity:"warning",reason:"The 'AcquisitionVoxelSize' field length is not 3. 'AcquisitionVoxelSize' should be defined as an array of numbers with a length of 3, in millimeters. This parameter denotes the original acquisition voxel size, excluding any inter-slice gaps and before any interpolation or resampling within reconstruction or image processing. Any point spread function effects (e.g. due to T2-blurring) that would decrease the effective resolution are not considered here."},157:{key:"LABELLING_DURATION_LENGTH_NOT_MATCHING_NIFTI",severity:"error",reason:"The number of values for 'LabelingDuration' for this file does not match the 4th dimension of the NIfTI header. 'LabelingDuration' is the total duration of the labeling pulse train, in seconds, corresponding to the temporal width of the labeling bolus for `(P)CASL`. In case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`, a scalar must be specified. In case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`, an array of numbers must be specified, for which any `m0scan` in the timeseries has a `LabelingDuration` of zero. In case an array of numbers is provided, its length should be equal to the number of volumes specified in `*_aslcontext.tsv`. Corresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`."},164:{key:"ASL_MANUFACTURER_MISSING",severity:"warning",reason:"It is recommended to define 'Manufacturer' for this file. 'Manufacturer' is the manufacturer of the equipment that produced the composite instances. Corresponds to DICOM Tag 0008, 0070 Manufacturer"},165:{key:"ASLCONTEXT_TSV_NOT_CONSISTENT",severity:"error",reason:"The number of volumes in the '*_aslcontext.tsv' for this file does not match the number of values in the NIfTI header."},166:{key:"LOOK_LOCKER_FLIP_ANGLE_MISSING",severity:"error",reason:"You should define 'FlipAngle' for this file, in case of a LookLocker acquisition. 'FlipAngle' is the flip angle (FA) for the acquisition, specified in degrees. Corresponds to: DICOM Tag 0018, 1314 `Flip Angle`. The data type number may apply to files from any MRI modality concerned with a single value for this field, or to the files in a file collection where the value of this field is iterated using the flip entity. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL or variable flip angle fMRI sequences."},167:{key:"FLIP_ANGLE_MISSING",severity:"warning",reason:"It is recommended to define 'FlipAngle' for this file. 'FlipAngle' is the flip angle (FA) for the acquisition, specified in degrees. Corresponds to: DICOM Tag 0018, 1314 `Flip Angle`. The data type number may apply to files from any MRI modality concerned with a single value for this field, or to the files in a file collection where the value of this field is iterated using the flip entity. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL or variable flip angle fMRI sequences."},168:{key:"FLIP_ANGLE_NOT_MATCHING_NIFTI",severity:"error",reason:"The number of values for 'FlipAngle' for this file does not match the 4th dimension of the NIfTI header. 'FlipAngle' is the flip angle (FA) for the acquisition, specified in degrees. Corresponds to: DICOM Tag 0018, 1314 `Flip Angle`. The data type number may apply to files from any MRI modality concerned with a single value for this field, or to the files in a file collection where the value of this field is iterated using the flip entity. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL or variable flip angle fMRI sequences."},169:{key:"LABELING_DURATION_PASL_INCONSISTENT",severity:"error",reason:"The 'LabelingDuration' for PASL 'ArterialSpinLabelingType' can be only a numerical value put to zero or unset. 'LabelingDuration' is the total duration of the labeling pulse train, in seconds, corresponding to the temporal width of the labeling bolus for `(P)CASL`. In case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`, a scalar must be specified. In case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`, an array of numbers must be specified, for which any `m0scan` in the timeseries has a `LabelingDuration` of zero. In case an array of numbers is provided, its length should be equal to the number of volumes specified in `*_aslcontext.tsv`. Corresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`."},170:{key:"CONTINOUS_RECORDING_MISSING_JSON",severity:"error",reason:"Continous recording data files are required to have an associated JSON metadata file."},171:{key:"VOLUME_TIMING_MISSING_ACQUISITION_DURATION",severity:"error",reason:"The field 'VolumeTiming' requires 'AcquisitionDuration' or 'SliceTiming' to be defined."},172:{key:"FLIP_ANGLE_NOT_MATCHING_ASLCONTEXT_TSV",severity:"error",reason:"The number of values for 'FlipAngle' for this file does not match the number of volumes in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'. 'FlipAngle' is the flip angle (FA) for the acquisition, specified in degrees. Corresponds to: DICOM Tag 0018, 1314 `Flip Angle`. The data type number may apply to files from any MRI modality concerned with a single value for this field, or to the files in a file collection where the value of this field is iterated using the flip entity. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL or variable flip angle fMRI sequences."},173:{key:"POST_LABELING_DELAY_NOT_MATCHING_NIFTI",severity:"error",reason:"The number of values for 'PostLabelingDelay' for this file does not match the 4th dimension of the NIfTI header. 'PostLabelingDelay' is the time, in seconds, after the end of the labeling (for (P)CASL) or middle of the labeling pulse (for PASL) until the middle of the excitation pulse applied to the imaging slab (for 3D acquisition) or first slice (for 2D acquisition). Can be a number (for a single-PLD time series) or an array of numbers (for multi-PLD and Look-Locker). In the latter case, the array of numbers contains the PLD of each volume (i.e. each 'control' and 'label') in the acquisition order. Any image within the time-series without a PLD (e.g. an 'm0scan') is indicated by a zero. Based on DICOM Tags 0018,9079 Inversion Times and 0018,0082 InversionTime."},174:{key:"POST_LABELING_DELAY_NOT_MATCHING_ASLCONTEXT_TSV",severity:"error",reason:"'The number of values for PostLabelingDelay' for this file does not match the number of volumes in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'.'PostLabelingDelay' is the time, in seconds, after the end of the labeling (for (P)CASL) or middle of the labeling pulse (for PASL) until the middle of the excitation pulse applied to the imaging slab (for 3D acquisition) or first slice (for 2D acquisition). Can be a number (for a single-PLD time series) or an array of numbers (for multi-PLD and Look-Locker). In the latter case, the array of numbers contains the PLD of each volume (i.e. each 'control' and 'label') in the acquisition order. Any image within the time-series without a PLD (e.g. an 'm0scan') is indicated by a zero. Based on DICOM Tags 0018,9079 Inversion Times and 0018,0082 InversionTime."},175:{key:"LABELLING_DURATION_NOT_MATCHING_ASLCONTEXT_TSV",severity:"error",reason:"The number of values for 'LabelingDuration' for this file does not match the number of volumes in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'. 'LabelingDuration' is the total duration of the labeling pulse train, in seconds, corresponding to the temporal width of the labeling bolus for `(P)CASL`. In case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`, a scalar must be specified. In case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`, an array of numbers must be specified, for which any `m0scan` in the timeseries has a `LabelingDuration` of zero. In case an array of numbers is provided, its length should be equal to the number of volumes specified in `*_aslcontext.tsv`. Corresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`."},176:{key:"ASLCONTEXT_TSV_INCONSISTENT",severity:"error",reason:"In the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv', the 'volume_type' can only be filled with volumes ['cbf' ,'m0scan', 'label', 'control', 'deltam']."},177:{key:"REPETITIONTIMEPREPARATION_NOT_MATCHING_ASLCONTEXT_TSV",severity:"error",reason:"The number of values of 'RepetitionTimePreparation' for this file does not match the number of volumes in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'. 'RepetitionTimePreparation' is the interval, in seconds, that it takes a preparation pulse block to re-appear at the beginning of the succeeding (essentially identical) pulse sequence block. The data type number may apply to files from any MRI modality concerned with a single value for this field. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL."},178:{key:"VOLUME_TIMING_AND_REPETITION_TIME_MUTUALLY_EXCLUSIVE",severity:"error",reason:"The fields 'VolumeTiming' and 'RepetitionTime' for this file are mutually exclusive. Choose 'RepetitionTime' when the same repetition time is used for all volumes, or 'VolumeTiming' when variable times are used."},179:{key:"BACKGROUND_SUPPRESSION_PULSE_NUMBER_MISSING",severity:"warning",reason:"It is recommended to define 'BackgroundSuppressionNumberPulses' for this file, in case 'BackgroundSuppression' is set to true. 'BackgroundSuppressionNumberPulses' is the number of background suppression pulses used. Note that this excludes any effect of background suppression pulses applied before the labeling."},180:{key:"BACKGROUND_SUPPRESSION_PULSE_NUMBER_NOT_CONSISTENT",severity:"warning",reason:"The 'BackgroundSuppressionNumberPulses' field is not consistent with the length of 'BackgroundSuppressionPulseTime'. 'BackgroundSuppressionNumberPulses' is the number of background suppression pulses used. Note that this excludes any effect of background suppression pulses applied before the labeling."},181:{key:"TOTAL_ACQUIRED_VOLUMES_NOT_CONSISTENT",severity:"warning",reason:"The number of values for 'TotalAcquiredVolumes' for this file does not match number of volumes in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'. 'TotalAcquiredVolumes' is the original number of 3D volumes acquired for each volume defined in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'."},182:{key:"MAGNETIC_FIELD_STRENGTH_MISSING",severity:"error",reason:"You should define 'MagneticFieldStrength' for this file. 'MagneticFieldStrength' is the nominal field strength of MR magnet in Tesla. Corresponds to DICOM Tag 0018,0087 'Magnetic Field Strength'."},183:{key:"SLICE_TIMING_NOT_DEFINED_2D_ASL",severity:"error",reason:"'You should define SliceTiming', in case 'SequenceType' is set to a 2D sequence. 'SliceTiming' is the time at which each slice was acquired within each volume (frame) of the acquisition. Slice timing is not slice order -- rather, it is a list of times containing the time (in seconds) of each slice acquisition in relation to the beginning of volume acquisition. The list goes through the slices along the slice axis in the slice encoding dimension (see below). Note that to ensure the proper interpretation of the `SliceTiming` field, it is important to check if the OPTIONAL `SliceEncodingDirection` exists. In particular, if `SliceEncodingDirection` is negative, the entries in `SliceTiming` are defined in reverse order with respect to the slice axis, such that the final entry in the `SliceTiming` list is the time of acquisition of slice 0. Without this parameter slice time correction will not be possible. "},184:{key:"POST_LABELING_DELAY_GREATER",severity:"warning",reason:"'PostLabelingDelay' is greater than 10, are you sure it's expressed in seconds? 'PostLabelingDelay' is the time, in seconds, after the end of the labeling (for (P)CASL) or middle of the labeling pulse (for PASL) until the middle of the excitation pulse applied to the imaging slab (for 3D acquisition) or first slice (for 2D acquisition). Can be a number (for a single-PLD time series) or an array of numbers (for multi-PLD and Look-Locker). In the latter case, the array of numbers contains the PLD of each volume (i.e. each 'control' and 'label') in the acquisition order. Any image within the time-series without a PLD (e.g. an 'm0scan') is indicated by a zero. Based on DICOM Tags 0018,9079 Inversion Times and 0018,0082 InversionTime."},186:{key:"BOLUS_CUT_OFF_DELAY_TIME_GREATER",severity:"warning",reason:"'BolusCutOffDelayTime' is greater than 10, are you sure it's expressed in seconds? 'BolusCutOffDelayTime' is duration between the end of the labeling and the start of the bolus cut-off saturation pulse(s), in seconds. This can be a number or array of numbers, of which the values must be non-negative and monotonically increasing, depending on the number of bolus cut-off saturation pulses. For Q2TIPS, only the values for the first and last bolus cut-off saturation pulses are provided. Based on DICOM Tag 0018,925F ASL Bolus Cut-off Delay Time."},187:{key:"LABELING_DURATION_GREATER",severity:"warning",reason:"'LabelingDuration' is greater than 10, are you sure it's expressed in seconds? 'LabelingDuration' is the total duration of the labeling pulse train, in seconds, corresponding to the temporal width of the labeling bolus for `(P)CASL`. In case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`, a scalar must be specified. In case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`, an array of numbers must be specified, for which any `m0scan` in the timeseries has a `LabelingDuration` of zero. In case an array of numbers is provided, its length should be equal to the number of volumes specified in `*_aslcontext.tsv`. Corresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`."},188:{key:"VOLUME_TIMING_NOT_MONOTONICALLY_INCREASING",severity:"error",reason:"'VolumeTiming' is not monotonically increasing. 'VolumeTiming' is the time at which each volume was acquired during the acquisition, referring to the start of each readout in the ASL timeseries. Use this field instead of the 'RepetitionTime' field in the case that the ASL timeseries have a non-uniform time distance between acquired volumes. The list must have the same length as the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv', and the numbers must be non-negative and monotonically increasing. If 'VolumeTiming' is defined, this requires acquisition time (TA) to be defined via 'AcquisitionDuration'."},189:{key:"CASL_PCASL_NOT_ALLOWED_FIELDS",severity:"error",reason:"You defined one of the not allowed fields in case of CASL or PCASL 'ArterialSpinLabelingType'. Please verify which field among 'PASLType', 'LabelingSlabThickness' 'BolusCutOffFlag', 'BolusCutOffTimingSequence', 'BolusCutOffDelayTime' and 'BolusCutOffTechnique' you have filled."},190:{key:"PASL_NOT_ALLOWED_FIELDS",severity:"error",reason:"You defined one of the not allowed fields in case of PASL 'ArterialSpinLabelingType'. Please verify which field among 'CASLType', 'PCASLType' 'LabelingPulseAverageGradient', 'LabelingPulseMaximumGradient', 'LabelingPulseAverageB1', 'LabelingPulseDuration', 'LabelingPulseFlipAngle', 'LabelingPulseInterval', 'LabelingDuration' you have filled."},191:{key:"PCASL_CASL_LABELING_TYPE_NOT_ALLOWED",severity:"error",reason:"You defined either the 'CASLType' with a PCASL 'LabellingType' or the 'PCASLType' with a CASL 'LabellingType'. This is not allowed, please check that these fields are filled correctly."},192:{key:"BOLUS_CUT_OFF_DELAY_TIME_NOT_MONOTONICALLY_INCREASING",severity:"error",reason:"'BolusCutOffDelayTime' is not monotonically increasing. 'BolusCutOffDelayTime' is the duration between the end of the labeling and the start of the bolus cut-off saturation pulse(s), in seconds. This can be a number or array of numbers, of which the values must be non-negative and monotonically increasing, depending on the number of bolus cut-off saturation pulses. For Q2TIPS, only the values for the first and last bolus cut-off saturation pulses are provided. Based on DICOM Tag 0018,925F ASL Bolus Cut-off Delay Time."},193:{key:"ECHO_TIME_NOT_DEFINED",severity:"error",reason:"You must define 'EchoTime' for this file. 'EchoTime' is the echo time (TE) for the acquisition, specified in seconds. Corresponds to DICOM Tag 0018, 0081 Echo Time (please note that the DICOM term is in milliseconds not seconds). The data type number may apply to files from any MRI modality concerned with a single value for this field, or to the files in a file collection where the value of this field is iterated using the echo entity. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL or variable echo time fMRI sequences."},194:{key:"MRACQUISITIONTYPE_MISSING",severity:"warning",reason:"It is recommended to define 'MRAcquisitionType' for this file. 'MRAcquistionType' is the type of sequence readout with possible values: `2D` or `3D`. Corresponds to DICOM Tag 0018,0023 `MR Acquisition Type`."},195:{key:"M0ESTIMATE_NOT_DEFINED",severity:"error",reason:"You must define 'M0Estimate' for this file, in case 'M0Type' is defined as 'Estimate'. 'M0Estimate' is a single numerical whole-brain M0 value (referring to the M0 of blood), only if obtained externally (for example retrieved from CSF in a separate measurement)."},196:{key:"ECHO_TIME_NOT_CONSISTENT",severity:"warning",reason:"The number of values for 'EchoTime' for this file does not match number of volumes in the 'sub-<label>[_ses-<label>][_acq-<label>][_rec-<label>][_run-<index>]_aslcontext.tsv'.  'EchoTime' is the echo time (TE) for the acquisition, specified in seconds. "},197:{key:"ECHO_TIME_ELEMENTS",severity:"warning",reason:"The number of elements in the 'EchoTime' array should match the 'k' dimension of the corresponding NIfTI volume."},198:{key:"M0Type_SET_INCORRECTLY_TO_ABSENT",severity:"error",reason:"You defined M0Type as 'absent' while including a separate '*_m0scan.nii[.gz]' and '*_m0scan.json', or defining the 'M0Estimate' field. This is not allowed, please check that this field are filled correctly."},199:{key:"M0Type_SET_INCORRECTLY_TO_ABSENT_IN_ASLCONTEXT",severity:"error",reason:"You defined M0Type as 'absent' while including an m0scan volume within the '*_aslcontext.tsv'. This is not allowed, please check that this field are filled correctly."},200:{key:"REPETITION_TIME_PREPARATION_MISSING",severity:"error",reason:"You must define 'RepetitionTimePreparation' for this file. 'RepetitionTimePreparation' is the interval, in seconds, that it takes a preparation pulse block to re-appear at the beginning of the succeeding (essentially identical) pulse sequence block. The data type number may apply to files from any MRI modality concerned with a single value for this field. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL."},201:{key:"REPETITIONTIME_PREPARATION_NOT_CONSISTENT",severity:"error",reason:"The number of values for 'RepetitionTimePreparation' for this file does not match the 4th dimension of the NIfTI header. 'RepetitionTimePreparation' is the interval, in seconds, that it takes a preparation pulse block to re-appear at the beginning of the succeeding (essentially identical) pulse sequence block. The data type number may apply to files from any MRI modality concerned with a single value for this field. The data type array provides a value for each volume in a 4D dataset and should only be used when the volume timing is critical for interpretation of the data, such as in ASL."},202:{key:"M0Type_SET_INCORRECTLY",severity:"error",reason:"M0Type was not defined correctly. If 'M0Type' is equal to separate, the dataset should include a *_m0scan.nii[.gz] and *_m0scan.json file."},211:{key:"TSV_MISSING_REQUIRED_COLUMN",severity:"error",reason:"A TSV file is missing a column required by a value in its JSON sidecar."},212:{key:"PARTICIPANT_ID_PATTERN",severity:"error",reason:'Participant_id column labels must consist of the pattern "sub-<subject_id>".'},213:{key:"README_FILE_SMALL",severity:"warning",reason:"The recommended file /README is very small. Please consider expanding it with additional information about the dataset."},214:{key:"SAMPLES_TSV_MISSING",severity:"error",reason:"The compulsory file /samples.tsv is missing. See Section 03 (Modality agnostic files) of the BIDS specification."},215:{key:"SAMPLE_ID_PATTERN",severity:"error",reason:'sample_id column labels must consist of the pattern "sample-<sample_id>".'},216:{key:"SAMPLE_ID_COLUMN",severity:"error",reason:"Samples .tsv files must have a 'sample_id' column."},217:{key:"PARTICIPANT_ID_COLUMN",severity:"error",reason:"Samples .tsv files must have a 'participant_id' column."},218:{key:"SAMPLE_TYPE_COLUMN",severity:"error",reason:"Samples .tsv files must have a 'sample_type' column."},219:{key:"SAMPLE_TYPE_VALUE",severity:"error",reason:"sample_type MUST consist of one of the following values: cell line, in vitro differentiated cells, primary cell, cell-free sample, cloning host, tissue, whole organisms, organoid or technical sample."},220:{key:"SAMPLE_ID_DUPLICATE",severity:"error",reason:"Each sample from a same subject MUST be described by one and only one row."},221:{key:"PIXEL_SIZE_INCONSISTENT",severity:"error",reason:"PixelSize need to be consistent with PhysicalSizeX, PhysicalSizeY and PhysicalSizeZ OME metadata fields"},222:{key:"INVALID_PIXEL_SIZE_UNIT",severity:"warning",reason:'PixelSize consistency is only validated for "mm", "\xb5m" and "nm".'},223:{key:"CHUNK_TRANSFORMATION_MATRIX_MISSING",severity:"warning",reason:"It is recommended to define 'ChunkTransformationMatrix' for this file."},224:{key:"OPTIONAL_FIELD_INCONSISTENT",severity:"error",reason:"Optional JSON field is not consistent with the OME-TIFF metadata"},225:{key:"NO_VALID_JSON",severity:"error",reason:"No valid JSON file found for this file"},226:{key:"UNSUPPORTED_BIG_TIFF",severity:"warning",reason:"Metadata consistency check skipped for BigTiff OME-TIFF file"},227:{key:"INCONSISTENT_TIFF_EXTENSION",severity:"error",reason:"Inconsistent TIFF file type and extension"},228:{key:"MULTIPLE_README_FILES",severity:"error",reason:"A BIDS dataset MUST NOT contain more than one `README` file (with or without extension) at its root directory."},229:{key:"INCORRECT_ORDER_TSV_COLUMN_CHANNELS_IEEG",severity:"error",reason:"The column names of the IEEG channels file must be in the following order ['name', 'type', 'units', 'low_cutoff', 'high_cutoff']"},230:{key:"INCORRECT_ORDER_TSV_COLUMN_CHANNELS_EEG",severity:"error",reason:"The column names of the EEG channels file must be in the following order ['name', 'type', 'units']"},231:{key:"TSV_COLUMN_HEADER_DUPLICATE",severity:"error",reason:"Two elements in the first row of a TSV are the same. Each column header must be unique."},232:{key:"TSV_COLUMN_HEADER_NA",severity:"error",reason:'An element in a tsv header is "n/a". A different header name should be chosen.'},233:{key:"MISSING_TSV_COLUMN_NIRS_OPTODES",severity:"error",reason:"The column names of the optodes file must begin with ['name', 'type', 'x', 'y', 'z']"},234:{key:"MISSING_TSV_COLUMN_NIRS_CHANNELS",severity:"error",reason:"The column names of the channels file must begin with ['name', 'type', 'source', 'detector', 'wavelength_nominal', 'units']"},235:{key:"MOTION_COMPONENT_IN_WRONG_COLUMN",severity:"error",reason:"The 'component' column must be the second column in the channels.tsv file."},236:{key:"MOTION_COMPONENT_INVLAID_VALUE",severity:"error",reason:"Values in the 'component' column must be one of ['x', 'y', 'z', 'quat_x', 'quat_y', 'quat_z', 'quat_w', 'n/a']."},237:{key:"PET_JSON_KEY_REQUIRED",severity:"error",reason:"A PET image JSON sidecar is missing a required field."}}},5788:function(){String.prototype.endsWith||(String.prototype.endsWith=function(e,i){var t=this.toString();("number"!=typeof i||!isFinite(i)||Math.floor(i)!==i||i>t.length)&&(i=t.length),i-=e.length;var n=t.indexOf(e,i);return -1!==n&&n===i}),String.prototype.includes||(String.prototype.includes=function(){return -1!==String.prototype.indexOf.apply(this,arguments)})},4797:function(e,i,t){"use strict";var n=t(7675);i.Z=e=>{let i={MRI:0,PET:0,MEG:0,EEG:0,iEEG:0,Microscopy:0,NIRS:0},t={MRI_Diffusion:0,MRI_Structural:0,MRI_Functional:0,MRI_Perfusion:0,PET_Static:0,PET_Dynamic:0,iEEG_ECoG:0,iEEG_SEEG:0};for(let s of e)n.Z.file.isAnat(s)&&(i.MRI++,t.MRI_Structural++),n.Z.file.isDWI(s)&&(i.MRI++,t.MRI_Diffusion++),n.Z.file.isAsl(s)&&(i.MRI++,t.MRI_Perfusion++),(n.Z.file.isFunc(s)||n.Z.file.isFuncBold(s))&&(i.MRI++,t.MRI_Functional++),n.Z.file.isFieldMap(s)&&i.MRI++,(n.Z.file.isPET(s)||n.Z.file.isPETBlood(s))&&(i.PET++,s.match("rec-acstat")||s.match("rec-nacstat")?t.PET_Static++:(s.match("rec-acdyn")||s.match("rec-nacdyn"))&&t.PET_Dynamic++),n.Z.file.isMeg(s)&&i.MEG++,n.Z.file.isEEG(s)&&i.EEG++,n.Z.file.isIEEG(s)&&i.iEEG++,n.Z.file.isMicroscopy(s)&&i.Microscopy++,n.Z.file.isNIRS(s)&&i.NIRS++;let s=Object.keys(i).filter(e=>0!==i[e]);return 0===s.length?{primary:[],secondary:[]}:{primary:s.sort((e,t)=>i[t]===i[e]?"MRI"===t?-1:0:i[t]-i[e]),secondary:Object.keys(t).filter(e=>0!==t[e]).sort((e,i)=>t[i]-t[e])}}},7675:function(e,i,t){"use strict";t.d(i,{Z:function(){return eO}});var n=JSON.parse('{"$":{"regexp":"^[\\\\/\\\\\\\\](?:@@@_associated_data_type_@@@)[\\\\/\\\\\\\\](?:.*)$","tokens":{"@@@_associated_data_type_@@@":["code","derivatives","sourcedata","stimuli"]}}}'),s=JSON.parse('{"Xg":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(?:_part-(imag|mag|phase|real))?(?:_chunk-[0-9]+)?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["T1w","T2w","PDw","T2starw","FLAIR","inplaneT1","inplaneT2","PDT2","angio","T2star","FLASH","PD"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"n8":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["T1map","T2map","T2starmap","R1map","R2map","R2starmap","PDmap","MTRmap","MTsat","UNIT1","T1rho","MWFmap","MTVmap","PDT2map","Chimap","S0map","M0map"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"MI":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_mod-(?:@@@_anat_suffixes_@@@))?_defacemask\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["T1w","T2w","PDw","T2starw","FLAIR","inplaneT1","inplaneT2","PDT2","angio","T1map","T2map","T2starmap","R1map","R2map","R2starmap","PDmap","MTRmap","MTsat","UNIT1","T1rho","MWFmap","MTVmap","PDT2map","Chimap","TB1map","RB1map","S0map","M0map","MESE","MEGRE","VFA","IRT1","MP2RAGE","MPM","MTS","MTR","T2star","FLASH","PD"],"@@@_anat_ext_@@@":["nii.gz","nii"]}},"AT":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_echo-[0-9]+?(_part-(imag|mag|phase|real))?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["MESE","MEGRE"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"Et":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_flip-[0-9]+?(?:_part-(imag|mag|phase|real))?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["VFA"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"eV":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_inv-[0-9]+?(?:_part-(imag|mag|phase|real))?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["IRT1"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"aq":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(?:_flip-[0-9]+)?_inv-[0-9]+?(?:_part-(imag|mag|phase|real))?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["MP2RAGE"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"m":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?_flip-[0-9]+?_mt-(on|off)?(?:_part-(imag|mag|phase|real))?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["MPM","MTS"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"LH":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?anat[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_mt-(on|off)?(?:_part-(imag|mag|phase|real))?_(?:@@@_anat_suffixes_@@@)\\\\.(@@@_anat_ext_@@@)$","tokens":{"@@@_anat_suffixes_@@@":["MTR"],"@@@_anat_ext_@@@":["nii\\\\.gz","nii","json"]}},"Xn":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?beh[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?((?:@@@_behavioral_ext_@@@)|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_behavioral_ext_@@@":["_beh\\\\.json","_beh\\\\.tsv","_events\\\\.json","_events\\\\.tsv"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"cO":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?dwi[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_part-(imag|mag|phase|real))?((?:@@@_dwi_ext_@@@)|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_dwi_ext_@@@":["_dwi\\\\.nii\\\\.gz","_dwi\\\\.nii","_dwi\\\\.json","_dwi\\\\.bvec","_dwi\\\\.bval","_sbref\\\\.nii\\\\.gz","_sbref\\\\.nii","_sbref\\\\.json"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"NW":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["phasediff","phase1","phase2","magnitude1","magnitude2","magnitude","fieldmap"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"l0":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?_dir-[a-zA-Z0-9]+(?:_run-[0-9]+)?(?:_part-(mag|phase|real|imag))?(?:_chunk-[0-9]+)?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["m0scan","epi"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"Kw":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_flip-[0-9]+?(?:_part-(imag|mag|phase|real))?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["TB1DAM"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"hk":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_echo-[0-9]+?_flip-[0-9]+?(?:_inv-[0-9]+)?(?:_part-(imag|mag|phase|real))?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["TB1EPI"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"UM":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(?:_flip-[0-9]+)?(?:_inv-[0-9]+)?(?:_part-(imag|mag|phase|real))?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["TB1AFI","TB1TFL","TB1RFM","RB1COR"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"xt":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?_flip-[0-9]+?_inv-[0-9]+?(?:_part-(imag|mag|phase|real))?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["TB1SRGE"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"d4":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?fmap[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_(?:@@@_field_map_type_@@@)\\\\.(@@@_field_map_ext_@@@)$","tokens":{"@@@_field_map_type_@@@":["TB1map","RB1map"],"@@@_field_map_ext_@@@":["nii\\\\.gz","nii","json"]}},"Yl":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?func[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(?:_part-(imag|mag|phase|real))?(?:@@@_func_ext_@@@)$","tokens":{"@@@_func_ext_@@@":["_bold\\\\.nii\\\\.gz","_bold\\\\.nii","_bold\\\\.json","_cbv\\\\.nii\\\\.gz","_cbv\\\\.nii","_cbv\\\\.json","_sbref\\\\.nii\\\\.gz","_sbref\\\\.nii","_sbref\\\\.json"]}},"wj":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?func[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(?:@@@_func_ext_@@@)$","tokens":{"@@@_func_ext_@@@":["_phase\\\\.nii\\\\.gz","_phase\\\\.nii","_phase\\\\.json"]}},"Ct":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?func[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:@@@_func_ext_@@@)$","tokens":{"@@@_func_ext_@@@":["_events\\\\.tsv","_events\\\\.json"]}},"V9":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?func[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@)$","tokens":{"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"Hu":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?func[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(?:_part-(imag|mag|phase|real))?(?:@@@_func_bold_ext_@@@)$","tokens":{"@@@_func_bold_ext_@@@":["_bold\\\\.nii\\\\.gz","_bold\\\\.nii","_sbref\\\\.nii\\\\.gz","_sbref\\\\.nii"]}},"uu":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?perf[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:(?:@@@_asl_type_@@@)|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_asl_type_@@@":["_asl\\\\.nii\\\\.gz","_asl\\\\.nii","_asl\\\\.json","_m0scan\\\\.nii\\\\.gz","_m0scan\\\\.nii","_m0scan\\\\.json","_aslcontext\\\\.tsv","_asllabeling\\\\.jpg"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"Gb":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?eeg[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:_split-[0-9]+)?(?:_space-(@@@_eeg_space_@@@))?((_eeg\\\\.(@@@_eeg_type_@@@)|(@@@_eeg_ext_@@@))|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_eeg_space_@@@":["Other","CapTrak","EEGLAB","EEGLAB-HJ","CTF","ElektaNeuromag","4DBti","KitYokogawa","ChietiItab","ICBM452AirSpace","ICBM452Warp5Space","IXI549Space","fsaverage","fsaverageSym","fsLR","MNIColin27","MNI152Lin","MNI152NLin2009aSym","MNI152NLin2009bSym","MNI152NLin2009cSym","MNI152NLin2009aAsym","MNI152NLin2009bAsym","MNI152NLin2009cAsym","MNI152NLin6Sym","MNI152NLin6ASym","MNI305","NIHPD","OASIS30AntsOASISAnts","OASIS30Atropos","Talairach","UNCInfant","fsaverage3","fsaverage4","fsaverage5","fsaverage6","fsaveragesym","UNCInfant0V21","UNCInfant1V21","UNCInfant2V21","UNCInfant0V22","UNCInfant1V22","UNCInfant2V22","UNCInfant0V23","UNCInfant1V23","UNCInfant2V23"],"@@@_eeg_type_@@@":["vhdr","vmrk","eeg","edf","bdf","set","fdt"],"@@@_eeg_ext_@@@":["_events\\\\.json","_events\\\\.tsv","_electrodes\\\\.json","_electrodes\\\\.tsv","_channels\\\\.json","_channels\\\\.tsv","_eeg\\\\.json","_coordsystem\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"wp":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?ieeg[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:_split-[0-9]+)?(?:_space-(@@@_ieeg_space_@@@))?((_ieeg\\\\.(@@@_ieeg_type_@@@)|(@@@_ieeg_ext_@@@))|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_ieeg_space_@@@":["Other","Pixels","ACPC","ScanRAS","ICBM452AirSpace","ICBM452Warp5Space","IXI549Space","fsaverage","fsaverageSym","fsLR","MNIColin27","MNI152Lin","MNI152NLin2009aSym","MNI152NLin2009bSym","MNI152NLin2009cSym","MNI152NLin2009aAsym","MNI152NLin2009bAsym","MNI152NLin2009cAsym","MNI152NLin6Sym","MNI152NLin6ASym","MNI305","NIHPD","OASIS30AntsOASISAnts","OASIS30Atropos","Talairach","UNCInfant","fsaverage3","fsaverage4","fsaverage5","fsaverage6","fsaveragesym","UNCInfant0V21","UNCInfant1V21","UNCInfant2V21","UNCInfant0V22","UNCInfant1V22","UNCInfant2V22","UNCInfant0V23","UNCInfant1V23","UNCInfant2V23"],"@@@_ieeg_type_@@@":["edf","vhdr","vmrk","eeg","set","fdt","nwb","mefd[\\\\/\\\\\\\\].*"],"@@@_ieeg_ext_@@@":["_events\\\\.json","_events\\\\.tsv","_electrodes\\\\.json","_electrodes\\\\.tsv","_channels\\\\.json","_channels\\\\.tsv","_ieeg\\\\.json","_coordsystem\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"P8":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?meg[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:_split-[0-9]+)?(_digitizer\\\\.txt|_meg(@@@_meg_type_@@@[\\\\/\\\\\\\\](.(?!\\\\.(sqd|con|fif|raw|raw\\\\.mhd|trg|kdf|chn)$))*|[\\\\/\\\\\\\\](.(?!\\\\.(sqd|con|fif|raw|raw\\\\.mhd|trg|kdf|chn)$))*)|(@@@_meg_ext_@@@)|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_meg_type_@@@":["\\\\.ds[\\\\/\\\\\\\\].*","\\\\.(?:chn|kdf|trg)","\\\\.(?:raw|raw\\\\.mhd)","\\\\.fif","\\\\.(?:con|sqd)","\\\\.(?:kdf|chn|trg)"],"@@@_meg_ext_@@@":["_events\\\\.json","_events\\\\.tsv","_channels\\\\.json","_channels\\\\.tsv","_electrodes\\\\.json","_electrodes\\\\.tsv","_meg\\\\.json","_coordsystem\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif","_headshape\\\\.pos","_markers\\\\.(?:mrk|sqd)"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"nC":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?meg[\\\\/]\\\\1(_\\\\2)?_acq-calibration_meg\\\\.dat$"},"qo":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?meg[\\\\/]\\\\1(_\\\\2)?_acq-crosstalk_meg\\\\.fif$"},"Cw":{"regexp":"^[\\\\/\\\\\\\\](?:stimuli)[\\\\/\\\\\\\\](?:.*)$"},"gq":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?nirs[\\\\/\\\\\\\\]\\\\1(_\\\\2)?(((?:_acq-[a-zA-Z0-9]+)?(@@@_nirs_optodes_@@@))|((?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:_part-[0-9]+)?(_nirs\\\\.(@@@_nirs_type_@@@)|(@@@_nirs_ext_@@@))))$","tokens":{"@@@_nirs_type_@@@":["snirf"],"@@@_nirs_ext_@@@":["_events\\\\.json","_events\\\\.tsv","_channels\\\\.json","_channels\\\\.tsv","_nirs\\\\.json","_photo\\\\.jpg"],"@@@_nirs_optodes_@@@":["_optodes\\\\.tsv","_optodes\\\\.json","_coordsystem\\\\.json"]}},"IS":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?pet[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)(?:(_ses-[a-zA-Z0-9]+))?(?:_task-[a-zA-Z0-9]+)?(?:_trc-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:(?:@@@_pet_ext_@@@)|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_pet_ext_@@@":["_pet\\\\.nii\\\\.gz","_pet\\\\.nii","_pet\\\\.json","_events\\\\.json","_events\\\\.tsv"],"@@@_cont_ext_@@@":["_physio\\\\.tsv\\\\.gz","_stim\\\\.tsv\\\\.gz","_physio\\\\.json","_stim\\\\.json"]}},"B9":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?pet[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)(?:(_ses-[a-zA-Z0-9]+))?(?:_task-[a-zA-Z0-9]+)?(?:_trc-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_recording-[a-zA-Z0-9]+)_(@@@_pet_ext_@@@)$","tokens":{"@@@_pet_ext_@@@":["blood\\\\.tsv\\\\.gz","blood\\\\.tsv","blood\\\\.json"]}},"EA":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?motion[\\\\/\\\\\\\\]\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(_tracksys-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_(@@@_motion_ext_@@@))|((?:_tracksys-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?_(@@@_cont_ext_@@@))$","tokens":{"@@@_motion_ext_@@@":["channels\\\\.json","channels\\\\.tsv","motion\\\\.json","motion\\\\.tsv"],"@@@_cont_ext_@@@":["events\\\\.json","events\\\\.tsv"]}},"lp":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?micr[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)(?:(_ses-[a-zA-Z0-9]+))?(?:_sample-[a-zA-Z0-9]+)(?:_acq-[a-zA-Z0-9]+)?(?:_stain-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_chunk-[0-9]+)?((@@@_microscopy_type_@@@)(@@@_microscopy_ext_@@@))$","tokens":{"@@@_microscopy_type_@@@":["_TEM","_SEM","_uCT","_BF","_DF","_PC","_DIC","_FLUO","_CONF","_PLI","_CARS","_2PE","_MPE","_SR","_NLO","_OCT","_SPIM","_XPCT"],"@@@_microscopy_ext_@@@":["\\\\.ome\\\\.tif","\\\\.ome\\\\.btf","\\\\.ome\\\\.zarr[\\\\/\\\\\\\\].*","\\\\.tif","\\\\.png"]}},"SF":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?micr[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)(?:(_ses-[a-zA-Z0-9]+))?(?:_sample-[a-zA-Z0-9]+)(?:_acq-[a-zA-Z0-9]+)?(@@@_photo_ext_@@@)$","tokens":{"@@@_photo_ext_@@@":["_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif","_photo\\\\.json"]}},"N7":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?micr[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)(?:(_ses-[a-zA-Z0-9]+))?(?:_sample-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_stain-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_chunk-[0-9]+)?(@@@_microscopy_type_@@@)\\\\.json$","tokens":{"@@@_microscopy_type_@@@":["_TEM","_SEM","_uCT","_BF","_DF","_PC","_DIC","_FLUO","_CONF","_PLI","_CARS","_2PE","_MPE","_SR","_NLO","_OCT","_SPIM","_XPCT"]}}}'),o=JSON.parse('{"r":{"regexp":"^[\\\\/\\\\\\\\](?:phenotype)[\\\\/\\\\\\\\](?:.*\\\\.tsv|.*\\\\.json)$"}}'),r=JSON.parse('{"s7":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(@@@_scat_ext_@@@)$","tokens":{"@@@_scat_ext_@@@":["_scans\\\\.tsv","_scans\\\\.json"]}},"Ui":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?_task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?(@@@_func_ses_ext_@@@)$","tokens":{"@@@_func_ses_ext_@@@":["_bold\\\\.json","_sbref\\\\.json","_events\\\\.json","_events\\\\.tsv","_physio\\\\.json","_stim\\\\.json"]}},"F2":{"regexp":"^\\\\/(sub-[a-zA-Z0-9]+)\\\\/(?:(ses-[a-zA-Z0-9]+)\\\\/)?\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(@@@_asl_ses_ext_@@@)$","tokens":{"@@@_asl_ses_ext_@@@":["_asl\\\\.json","_aslcontext\\\\.tsv","_m0scan\\\\.json","_asllabeling\\\\.jpg"]}},"Wu":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_trc-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+_)?(@@@_pet_ses_type_@@@)$","tokens":{"@@@_pet_ses_type_@@@":["_pet\\\\.json","_events\\\\.json","_events\\\\.tsv"]}},"L6":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+_)?(@@@_anat_ses_type_@@@)\\\\.json$","tokens":{"@@@_anat_ses_type_@@@":["T1w","T2w","T1map","T2map","T1rho","FLAIR","PD","PDT2","inplaneT1","inplaneT2","angio","defacemask","SWImagandphase"]}},"Ju":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_)?dwi\\\\.(?:@@@_dwi_ses_ext_@@@)$","tokens":{"@@@_dwi_ses_ext_@@@":["json","bval","bvec"]}},"Vy":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(@@@_meg_ses_type_@@@)$","tokens":{"@@@_meg_ses_type_@@@":["_events\\\\.tsv","_channels\\\\.tsv","_channels\\\\.json","_meg\\\\.json","_coordsystem\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif","_headshape\\\\.pos"]}},"nR":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:_space-(@@@_eeg_space_@@@))?(@@@_eeg_ses_type_@@@)$","tokens":{"@@@_eeg_ses_type_@@@":["_events\\\\.tsv","_channels\\\\.tsv","_channels\\\\.json","_electrodes\\\\.tsv","_electrodes\\\\.json","_eeg\\\\.json","_coordsystem\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif"],"@@@_eeg_space_@@@":["Other","CapTrak","EEGLAB","EEGLAB-HJ","CTF","ElektaNeuromag","4DBti","KitYokogawa","ChietiItab","ICBM452AirSpace","ICBM452Warp5Space","IXI549Space","fsaverage","fsaverageSym","fsLR","MNIColin27","MNI152Lin","MNI152NLin2009aSym","MNI152NLin2009bSym","MNI152NLin2009cSym","MNI152NLin2009aAsym","MNI152NLin2009bAsym","MNI152NLin2009cAsym","MNI152NLin6Sym","MNI152NLin6ASym","MNI305","NIHPD","OASIS30AntsOASISAnts","OASIS30Atropos","Talairach","UNCInfant","fsaverage3","fsaverage4","fsaverage5","fsaverage6","fsaveragesym","UNCInfant0V21","UNCInfant1V21","UNCInfant2V21","UNCInfant0V22","UNCInfant1V22","UNCInfant2V22","UNCInfant0V23","UNCInfant1V23","UNCInfant2V23"]}},"AE":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:_space-(@@@_ieeg_space_@@@))?(@@@_ieeg_ses_type_@@@)$","tokens":{"@@@_ieeg_ses_type_@@@":["_events\\\\.tsv","_channels\\\\.tsv","_channels\\\\.json","_electrodes\\\\.tsv","_electrodes\\\\.json","_ieeg\\\\.json","_coordsystem\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif"],"@@@_ieeg_space_@@@":["Other","Pixels","ACPC","ScanRAS","ICBM452AirSpace","ICBM452Warp5Space","IXI549Space","fsaverage","fsaverageSym","fsLR","MNIColin27","MNI152Lin","MNI152NLin2009aSym","MNI152NLin2009bSym","MNI152NLin2009cSym","MNI152NLin2009aAsym","MNI152NLin2009bAsym","MNI152NLin2009cAsym","MNI152NLin6Sym","MNI152NLin6ASym","MNI305","NIHPD","OASIS30AntsOASISAnts","OASIS30Atropos","Talairach","UNCInfant","fsaverage3","fsaverage4","fsaverage5","fsaverage6","fsaveragesym","UNCInfant0V21","UNCInfant1V21","UNCInfant2V21","UNCInfant0V22","UNCInfant1V22","UNCInfant2V22","UNCInfant0V23","UNCInfant1V23","UNCInfant2V23"]}},"X7":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(@@@_motion_ses_type_@@@)$","tokens":{"@@@_motion_ses_type_@@@":["_events.tsv","_events.json","_channels.tsv","_channels.json","_motion.json","_coordsystem.json"]}},"jO":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(?:_sample-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_stain-[a-zA-Z0-9]+)?(?:_run-[0-9]+_)?(?:_chunk-[0-9]+)?(@@@_microscopy_ses_type_@@@)$","tokens":{"@@@_microscopy_ses_type_@@@":["_TEM\\\\.json","_SEM\\\\.json","_uCT\\\\.json","_BF\\\\.json","_DF\\\\.json","_PC\\\\.json","_DIC\\\\.json","_FLUO\\\\.json","_CONF\\\\.json","_PLI\\\\.json","_CARS\\\\.json","_2PE\\\\.json","_MPE\\\\.json","_SR\\\\.json","_NLO\\\\.json","_OCT\\\\.json","_SPIM\\\\.json","_XPCT\\\\.json"]}},"CF":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\](?:(ses-[a-zA-Z0-9]+)[\\\\/\\\\\\\\])?\\\\1(_\\\\2)?(((?:_acq-[a-zA-Z0-9]+)?(@@@_nirs_optodes_@@@))|((?:_task-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(@@@_nirs_ses_type_@@@)))$","tokens":{"@@@_nirs_ses_type_@@@":["_events\\\\.tsv","_channels\\\\.tsv","_nirs\\\\.json","_photo\\\\.jpg"],"@@@_nirs_optodes_@@@":["_optodes\\\\.tsv","_optodes\\\\.json","_coordsystem\\\\.json"]}}}'),a=JSON.parse('{"C":{"regexp":"^[\\\\/\\\\\\\\](sub-[a-zA-Z0-9]+)[\\\\/\\\\\\\\]\\\\1(@@@_subject_level_ext_@@@)$","tokens":{"@@@_subject_level_ext_@@@":["_sessions\\\\.tsv","_sessions\\\\.json"]}}}'),l=JSON.parse('{"Dc":{"regexp":"^[\\\\/\\\\\\\\]?(@@@_root_files_@@@)$","tokens":{"@@@_root_files_@@@":["README","README\\\\.md","README\\\\.rst","README\\\\.txt","CHANGES","CITATION\\\\.cff","LICENSE","dataset_description\\\\.json","genetic_info\\\\.json","participants\\\\.tsv","participants\\\\.json","phasediff.json","phase1\\\\.json","phase2\\\\.json","fieldmap\\\\.json","TB1DAM\\\\.json","TB1EPI\\\\.json","TB1AFI\\\\.json","TB1TFL\\\\.json","TB1RFM\\\\.json","TB1SRGE\\\\.json","RB1COR\\\\.json","events\\\\.json","scans\\\\.json","samples\\\\.json","samples\\\\.tsv"]}},"$g":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_ce-[a-zA-Z0-9]+)?(?:_dir-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_echo-[0-9]+)?((?:@@@_func_top_ext_@@@)|(?:_recording-[a-zA-Z0-9]+)?(?:@@@_cont_ext_@@@))$","tokens":{"@@@_func_top_ext_@@@":["_bold\\\\.json","_sbref\\\\.json","_events\\\\.json","_events\\\\.tsv","_beh\\\\.json"],"@@@_cont_ext_@@@":["_physio\\\\.json","_stim\\\\.json"]}},"rU":{"regexp":"^\\\\/(?:ses-[a-zA-Z0-9]+_)?(?:_acq-[a-zA-Z0-9]+)?(?:_rec-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(@@@_asl_top_ext_@@@)$","tokens":{"@@@_asl_top_ext_@@@":["_asl\\\\.json","_m0scan\\\\.json","_aslcontext\\\\.tsv","_labeling.jpg"]}},"Sj":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:task-[a-zA-Z0-9]+_)?(?:trc-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(@@@_pet_suffixes_@@@)\\\\.json$","tokens":{"@@@_pet_suffixes_@@@":["pet"]}},"Yr":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:task-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(@@@_anat_suffixes_@@@)\\\\.json$","tokens":{"@@@_anat_suffixes_@@@":["T1w","T2w","T1map","T2map","T1rho","FLAIR","PD","PDT2","inplaneT1","inplaneT2","angio","SWImagandphase","T2star","FLASH","PDmap","photo"]}},"bA":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:echo-[0-9]+_)?(?:flip-[0-9]+_)?(?:part-(mag|phase|real|imag)_)?(@@@_mese_megre_suffixes_@@@)\\\\.json$","tokens":{"@@@_mese_megre_suffixes_@@@":["VFA"]}},"Jm":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:echo-[0-9]+_)?(?:part-(mag|phase|real|imag)_)?(@@@_mese_megre_suffixes_@@@)\\\\.json$","tokens":{"@@@_mese_megre_suffixes_@@@":["MEGRE","MESE"]}},"dv":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:inv-[0-9]+_)?(?:part-(mag|phase|real|imag)_)?(@@@_irt1_suffixes_@@@)\\\\.json$","tokens":{"@@@_irt1_suffixes_@@@":["IRT1"]}},"y4":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:echo-[0-9]+_)?(?:flip-[0-9]+_)?(?:mt-(on|off)_)(?:part-(mag|phase|real|imag)_)?(@@@_mpm_suffixes_@@@)\\\\.json$","tokens":{"@@@_mpm_suffixes_@@@":["MPM"]}},"LW":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:echo-[0-9]+_)?(?:flip-[0-9]+_mt-(on|off)_)?(?:part-(mag|phase|real|imag)_)?(@@@_mts_suffixes_@@@)\\\\.json$","tokens":{"@@@_mts_suffixes_@@@":["MTS"]}},"$c":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:mt-(on|off)_)?(?:part-(mag|phase|real|imag)_)?(@@@_mtr_suffixes_@@@)\\\\.json$","tokens":{"@@@_mtr_suffixes_@@@":["MTR"]}},"u8":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:echo-[0-9]+_)?(?:flip-[0-9]+_)?(?:inv-[0-9]+_)?(?:part-(mag|phase|real|imag)_)?(@@@_mp2rage_suffixes_@@@)\\\\.json$","tokens":{"@@@_mp2rage_suffixes_@@@":["MP2RAGE"]}},"Bp":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:dir-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:part-(mag|phase|real|imag)_)?(?:chunk-[0-9]+_)?(dwi\\\\.(?:@@@_dwi_top_ext_@@@)|sbref\\\\.json)$","tokens":{"@@@_dwi_top_ext_@@@":["json","bval","bvec"]}},"mI":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:@@@_eeg_top_ext_@@@)$","tokens":{"@@@_eeg_top_ext_@@@":["_eeg\\\\.json","_channels\\\\.tsv","_channels\\\\.json","_electrodes\\\\.tsv","_electrodes\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif","_coordsystem\\\\.json"]}},"m6":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:@@@_ieeg_top_ext_@@@)$","tokens":{"@@@_ieeg_top_ext_@@@":["_ieeg\\\\.json","_channels\\\\.tsv","_channels\\\\.json","_electrodes\\\\.tsv","_electrodes\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif","_coordsystem\\\\.json"]}},"Yi":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:@@@_meg_top_ext_@@@)$","tokens":{"@@@_meg_top_ext_@@@":["_meg\\\\.json","_channels\\\\.tsv","_channels\\\\.json","_photo\\\\.jpg","_photo\\\\.png","_photo\\\\.tif","_coordsystem\\\\.json"]}},"Xf":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?task-[a-zA-Z0-9]+(?:@@@_motion_top_ext_@@@)$","tokens":{"@@@_motion_top_ext_@@@":["_motion\\\\.json","_channels\\\\.tsv","_channels\\\\.json","_coordsystem\\\\.json"]}},"hi":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(((?:_acq-[a-zA-Z0-9]+)?(@@@_nirs_optodes_@@@))|(task-[a-zA-Z0-9]+(?:_acq-[a-zA-Z0-9]+)?(?:_proc-[a-zA-Z0-9]+)?(?:@@@_nirs_top_ext_@@@)))$","tokens":{"@@@_nirs_top_ext_@@@":["_nirs\\\\.json","_channels\\\\.tsv","_photo\\\\.jpg"],"@@@_nirs_optodes_@@@":["_optodes\\\\.tsv","_optodes\\\\.json","_coordsystem\\\\.json"]}},"r":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:ce-[a-zA-Z0-9]+_)?(?:dir-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:part-(mag|phase|real|imag)_)?(?:chunk-[0-9]+_)?(?:@@@_field_map_type_@@@)\\\\.json$","tokens":{"@@@_field_map_type_@@@":["m0scan","epi"]}},"Z0":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:chunk-[0-9]+_)?(@@@_fmap_gre_suffixes_@@@)\\\\.json$","tokens":{"@@@_fmap_gre_suffixes_@@@":["magnitude1","magnitude2","phasediff","phase1","phase2","magnitude","fieldmap"]}},"QF":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:task-[a-zA-Z0-9]+_)?(?:acq-[a-zA-Z0-9]+_)?(?:rec-[a-zA-Z0-9]+_)?(?:run-[0-9]+_)?(?:recording-[a-zA-Z0-9]+_)?(@@@_other_top_files_ext_@@@)$","tokens":{"@@@_other_top_files_ext_@@@":["physio\\\\.json","stim\\\\.json"]}},"E4":{"regexp":"^[\\\\/\\\\\\\\](?:ses-[a-zA-Z0-9]+_)?(?:_sample-[a-zA-Z0-9]+)?(?:_acq-[a-zA-Z0-9]+)?(?:_stain-[a-zA-Z0-9]+)?(?:_run-[0-9]+)?(?:_chunk-[0-9]+)?(?:@@@_microscopy_top_ext_@@@)$","tokens":{"@@@_microscopy_top_ext_@@@":["_TEM\\\\.json","_SEM\\\\.json","_uCT\\\\.json","_BF\\\\.json","_DF\\\\.json","_PC\\\\.json","_DIC\\\\.json","_FLUO\\\\.json","_CONF\\\\.json","_PLI\\\\.json","_CARS\\\\.json","_2PE\\\\.json","_MPE\\\\.json","_SR\\\\.json","_NLO\\\\.json","_OCT\\\\.json","_SPIM\\\\.json","_XPCT\\\\.json"]}}}');let c=ej(n.$),d=ej(s.Xg),u=ej(s.n8),f=ej(s.MI),h=ej(s.AT),p=ej(s.Et),m=ej(s.eV),_=ej(s.aq),y=ej(s.m),g=ej(s.LH),v=ej(s.Xn),b=ej(s.cO),S=ej(s.Gb),T=ej(s.NW),I=ej(s.l0),A=ej(s.Kw),E=ej(s.hk),C=ej(s.UM),P=ej(s.xt),N=ej(s.d4),O=ej(s.Yl),w=ej(s.wj),j=ej(s.Ct),L=ej(s.V9),M=ej(s.Hu),D=ej(s.uu),x=ej(s.wp),k=ej(s.P8),R=ej(s.nC),z=ej(s.qo),Z=ej(s.Cw),F=ej(s.IS),q=ej(s.B9),G=ej(s.lp),U=ej(s.SF),$=ej(s.N7),B=ej(s.EA),V=ej(s.gq),H=ej(o.r),W=ej(r.L6),Y=ej(r.Ju),J=ej(r.nR),X=ej(r.Ui),K=ej(r.F2),Q=ej(r.AE),ee=ej(r.Vy),ei=ej(r.s7),et=ej(r.Wu),en=ej(r.X7),es=ej(r.jO),eo=ej(r.CF),er=ej(a.C),ea=ej(l.Dc),el=ej(l.$g),ec=ej(l.rU),ed=ej(l.Yr),eu=ej(l.bA),ef=ej(l.Jm),eh=ej(l.dv),ep=ej(l.y4),em=ej(l.LW),e_=ej(l.$c),ey=ej(l.u8),eg=ej(l.Bp),ev=ej(l.mI),eb=ej(l.m6),eS=ej(l.r),eT=ej(l.Z0),eI=ej(l.QF),eA=ej(l.Yi),eE=ej(l.Sj),eC=ej(l.Xf),eP=ej(l.E4),eN=ej(l.hi);var eO={isBIDS:function(e){return this.file.isTopLevel(e)||this.file.isStimuliData(e)||this.file.isSessionLevel(e)||this.file.isSubjectLevel(e)||this.file.isAnat(e)||this.file.isDWI(e)||this.file.isFunc(e)||this.file.isAsl(e)||this.file.isMeg(e)||this.file.isNIRS(e)||this.file.isIEEG(e)||this.file.isEEG(e)||this.file.isBehavioral(e)||this.file.isFieldMap(e)||this.file.isPhenotypic(e)||this.file.isPET(e)||this.file.isPETBlood(e)||this.file.isMOTION(e)||this.file.isMicroscopy(e)||this.file.isMicroscopyPhoto(e)||this.file.isMicroscopyJSON(e)},file:{isTopLevel:function(e){return ea.test(e)||el.test(e)||ec.test(e)||eg.test(e)||ed.test(e)||eu.test(e)||ef.test(e)||eh.test(e)||ep.test(e)||em.test(e)||e_.test(e)||ey.test(e)||eS.test(e)||eT.test(e)||eI.test(e)||eA.test(e)||ev.test(e)||eb.test(e)||eE.test(e)||eC.test(e)||eN.test(e)||eP.test(e)},isDatafile:function(e){return this.isAssociatedData(e)||this.isTSV(e)||this.isStimuliData(e)||this.isPhenotypic(e)||this.hasModality(e)},isAssociatedData:function(e){return c.test(e)},isTSV:function(e){return e.endsWith(".tsv")},isContinousRecording:function(e){return e.endsWith(".tsv.gz")},isStimuliData:function(e){return Z.test(e)},isPhenotypic:function(e){return H.test(e)},isSessionLevel:function(e){return ew(ei,e)||ew(X,e)||ew(K,e)||ew(W,e)||ew(Y,e)||ew(ee,e)||ew(eo,e)||ew(J,e)||ew(Q,e)||ew(et,e)||ew(en,e)||ew(es,e)},isSubjectLevel:function(e){return er.test(e)},isAnat:function(e){return ew(d,e)||ew(u,e)||ew(f,e)||ew(h,e)||ew(p,e)||ew(m,e)||ew(_,e)||ew(y,e)||ew(g,e)},isDWI:function(e){return ew(b,e)},isFieldMap:function(e){return ew(T,e)||ew(I,e)||ew(A,e)||ew(E,e)||ew(P,e)||ew(C,e)||ew(N,e)},isFieldMapMainNii:function(e){return!e.endsWith(".json")&&(ew(T,e)||ew(I,e)||ew(A,e)||ew(E,e)||ew(P,e)||ew(C,e)||ew(N,e))},isFunc:function(e){return ew(O,e)||ew(w,e)||ew(j,e)||ew(L,e)},isAsl:function(e){return ew(D,e)},isPET:function(e){return ew(F,e)},isPETBlood:function(e){return ew(q,e)},isMeg:function(e){return ew(k,e)||ew(R,e)||ew(z,e)},isNIRS:function(e){return ew(V,e)},isEEG:function(e){return ew(S,e)},isIEEG:function(e){return ew(x,e)},isMOTION:function(e){return ew(B,e)},isMicroscopy:function(e){return ew(G,e)},isMicroscopyPhoto:function(e){return ew(U,e)},isMicroscopyJSON:function(e){return ew($,e)},isBehavioral:function(e){return ew(v,e)},isFuncBold:function(e){return ew(M,e)},hasModality:function(e){return this.isAnat(e)||this.isDWI(e)||this.isFieldMap(e)||this.isFieldMapMainNii(e)||this.isFunc(e)||this.isAsl(e)||this.isMeg(e)||this.isNIRS(e)||this.isEEG(e)||this.isIEEG(e)||this.isBehavioral(e)||this.isFuncBold(e)||this.isPET(e)||this.isPETBlood(e)||this.isMicroscopy(e)||this.isMicroscopyPhoto(e)||this.isMicroscopyJSON(e)||this.isMOTION(e)}},checkType:(e,i)=>"number"==i?!isNaN(parseFloat(e))&&isFinite(e):typeof e==i,getPathValues:function(e){var i,t={};return i=/^\/sub-([a-zA-Z0-9]+)/.exec(e),t.sub=i&&i[1]?i[1]:null,i=/^\/sub-[a-zA-Z0-9]+\/ses-([a-zA-Z0-9]+)/.exec(e),t.ses=i&&i[1]?i[1]:null,t}};function ew(e,i){let t=e.exec(i);return!!t&&(!!t[2]&&!!t[3]||!t[2])}function ej(e){if(!e.tokens)return new RegExp(e.regexp);{let i=e.regexp;for(let t of Object.keys(e.tokens)){let n=e.tokens[t].join("|");i=i.replace(t,n)}return new RegExp(i)}}},4164:function(){},285:function(){},1555:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"EchoTime":{"anyOf":[{"type":"number","exclusiveMinimum":0},{"type":"array","items":{"type":"number","exclusiveMinimum":0}}]},"EffectiveEchoSpacing":{"type":"number","exclusiveMinimum":0},"PhaseEncodingDirection":{"type":"string","enum":["i","j","k","i-","j-","k-"]},"RepetitionTimePreparation":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number"},"minimum":0}]},"SliceEncodingDirection":{"type":"string","enum":["i","j","k","i-","j-","k-"]},"SliceTiming":{"type":"array","items":{"type":"number","minimum":0}},"FlipAngle":{"anyOf":[{"type":"number"},{"type":"array","items":{"type":"number"}}]},"ArterialSpinLabelingType":{"type":"string","enum":["PASL","CASL","PCASL"]},"LabelingDuration":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number"},"minimum":0}]},"PostLabelingDelay":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number"},"minimum":0}]},"BackgroundSuppression":{"type":"boolean"},"VascularCrushing":{"type":"boolean"},"LabelingLocationDescription":{"type":"string"},"LabelingOrientation":{"type":"array","items":{"type":"number"}},"LabelingDistance":{"type":"number"},"LabelingPulseMaximumGradient":{"type":"number","exclusiveMinimum":0},"LabelingPulseFlipAngle":{"type":"number","exclusiveMinimum":0,"maximum":360},"LabelingSlabThickness":{"type":"number","exclusiveMinimum":0},"AcquisitionVoxelSize":{"type":"array","items":{"type":"number","exclusiveMinimum":0}},"BackgroundSuppressionNumberPulses":{"type":"number","minimum":0},"BackgroundSuppressionPulseTime":{"type":"array","items":{"type":"number","minimum":0}},"VascularCrushingVENC":{"anyOf":[{"type":"number"},{"type":"array","items":{"type":"number"}}]},"PCASLType":{"type":"string","enum":["balanced","unbalanced"]},"CASLType":{"type":"string","enum":["single-coil","double-coil"]},"PASLType":{"type":"string"},"LookLocker":{"type":"boolean"},"LabelingPulseDuration":{"type":"number","exclusiveMinimum":0},"LabelingPulseInterval":{"type":"number","exclusiveMinimum":0},"LabelingPulseAverageB1":{"type":"number","exclusiveMinimum":0},"LabelingPulseAverageGradient":{"type":"number","exclusiveMinimum":0},"LabelingEfficiency":{"type":"number","exclusiveMinimum":0},"BolusCutOffFlag":{"type":"boolean"},"BolusCutOffDelayTime":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number"},"minimum":0}]},"BolusCutOffTechnique":{"type":"string"},"M0Type":{"type":"string","enum":["Separate","Included","Estimate","Absent"]},"M0Estimate":{"type":"number","exclusiveMinimum":0},"TotalAcquiredPairs":{"type":"number","exclusiveMinimum":0},"PulseSequenceDetails":{"type":"string"},"Manufacturer":{"type":"string"},"MRAcquisitionType":{"type":"string","enum":["2D","3D"]}}}')},3791:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"TaskName":{"$ref":"common_definitions.json#/definitions/TaskName"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"InstitutionName":{"$ref":"common_definitions.json#/definitions/InstitutionName"},"InstitutionAddress":{"$ref":"common_definitions.json#/definitions/InstitutionAddress"},"InstitutionalDepartmentName":{"$ref":"common_definitions.json#/definitions/InstitutionalDepartmentName"}},"additionalProperties":true}')},139:function(e){"use strict";e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"AcquisitionDuration":{"type":"number","exclusiveMinimum":0},"EchoTime":{"type":"number","exclusiveMinimum":0},"EffectiveEchoSpacing":{"type":"number","exclusiveMinimum":0},"PhaseEncodingDirection":{"type":"string","enum":["i","j","k","i-","j-","k-"]},"RepetitionTime":{"type":"number","exclusiveMinimum":0},"SliceEncodingDirection":{"type":"string","enum":["i","j","k","i-","j-","k-"]},"SliceTiming":{"type":"array","items":{"type":"number","minimum":0}},"TaskName":{"type":"string"},"VolumeTiming":{"type":"array","items":{"type":"number","minimum":0}},"PartialFourier":{"type":"number"}}}')},7364:function(e){"use strict";e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-06/schema#","allOf":[{"type":"object","properties":{"reference_frame":{"title":"Reference Frame","type":"object","properties":{"Levels":{"type":"object","patternProperties":{"^.+$":{"type":"object","properties":{"RotationOrder":{"description":"The sequence in which the extrinsic rotations are applied around the three axes.","type":"string","enum":["XYZ","XZY","YXZ","YZX","ZXY","ZYX"]},"RotationRule":{"description":"The direction of rotation around each axis.","type":"string","enum":["left-hand","right-hand"]},"SpatialAxes":{"description":"The coordinate system in which the motion data are to be interpreted. A sequence of characters from the set `{\'A\', \'P\', \'L\', \'R\', \'S\', \'I\', \'_\'}` indicating the direction of each axis. For example `\\"ARS\\"` indicates positive values in the X, Y, Z axes are respectively anterior, right, and superior of the origin, while `\\"PLI\\"` indicates positive values are posterior, left, and inferior of the origin. The `\\"_\\"` character may be used for unused axes.","type":"string","pattern":"^[APLRSI_]{3}$"}}}}}}}}},{"type":"object","patternProperties":{"^.+$":{"$ref":"common_definitions.json#/definitions/ColumnDescription"}}}]}')},8205:function(e){"use strict";e.exports=JSON.parse('{"$id":"common_definitions.json","definitions":{"CogAtlasID":{"type":"string","format":"uri"},"CogPOID":{"type":"string","format":"uri"},"CoordUnits":{"type":"string","enum":["m","mm","cm","n/a"]},"MEGCoordSys":{"type":"string","enum":["CTF","ElektaNeuromag","4DBti","KitYokogawa","ChietiItab","Other"]},"EEGCoordSys":{"type":"string","enum":["CapTrak","EEGLAB","EEGLAB-HJ","Other"]},"iEEGCoordSys":{"type":"string","enum":["Pixels","ACPC","ScanRAS","Other"]},"StandardTemplateCoordSys":{"type":"string","enum":["ICBM452AirSpace","ICBM452Warp5Space","IXI549Space","fsaverage","fsaverageSym","fsLR","MNIColin27","MNI152Lin","MNI152NLin2009aSym","MNI152NLin2009bSym","MNI152NLin2009cSym","MNI152NLin2009aAsym","MNI152NLin2009bAsym","MNI152NLin2009cAsym","MNI152NLin6Sym","MNI152NLin6ASym","MNI305","NIHPD","OASIS30AntsOASISAnts","OASIS30Atropos","Talairach","UNCInfant"]},"StandardTemplateDeprecatedCoordSys":{"type":"string","enum":["fsaverage3","fsaverage4","fsaverage5","fsaverage6","fsaveragesym","UNCInfant0V21","UNCInfant1V21","UNCInfant2V21","UNCInfant0V22","UNCInfant1V22","UNCInfant2V22","UNCInfant0V23","UNCInfant1V23","UNCInfant2V23"]},"DeviceSerialNumber":{"type":"string"},"ECGChannelCount":{"type":"integer","minimum":0},"EEGChannelCount":{"type":"integer","minimum":0},"NIRSChannelCount":{"type":"integer","minimum":0},"NIRSSourceOptodeCount":{"type":"integer","minimum":0},"NIRSDetectorOptodeCount":{"type":"integer","minimum":0},"EMGChannelCount":{"type":"integer","minimum":0},"EOGChannelCount":{"type":"integer","minimum":0},"EpochLength":{"type":"number","minimum":0},"HardwareFilters":{"anyOf":[{"type":"object","additionalProperties":{"type":"object"}},{"type":"string","pattern":"^n/a$"}]},"InstitutionAddress":{"type":"string"},"InstitutionName":{"type":"string"},"Instructions":{"type":"string"},"InstitutionalDepartmentName":{"type":"string","minLength":1},"LandmarkCoordinates":{"type":"object","additionalProperties":{"type":"array","items":{"type":"number"},"minItems":3,"maxItems":3}},"Manufacturer":{"type":"string","minLength":1},"MiscChannelCount":{"type":"integer","minimum":0},"PowerLineFrequency":{"anyOf":[{"type":"number","exclusiveMinimum":0},{"type":"string","pattern":"^n/a$"}]},"RecordingDuration":{"type":"number"},"RecordingType":{"type":"string","enum":["continuous","epoched","discontinuous"]},"SamplingFrequency":{"type":"number"},"SoftwareFilters":{"anyOf":[{"type":"object","additionalProperties":{"type":"object"}},{"type":"string","pattern":"^n/a$"}]},"SoftwareVersions":{"type":"string"},"TaskDescription":{"type":"string"},"TaskName":{"type":"string","minLength":1},"TermURL":{"title":"TermURL","description":"URL pointing to a formal definition in an ontology available on the web.","type":"string","format":"uri"},"TriggerChannelCount":{"type":"integer","minimum":0},"ColumnDescription":{"type":"object","title":"Column","description":"Column of a corresponding tabular file.","properties":{"LongName":{"title":"LongName","description":" Long (unabbreviated) name of column.","type":"string"},"Description":{"title":"Description","description":"Description of the column.","type":"string"},"Units":{"title":"Units","description":"Measurement units.","type":"string"},"Levels":{"type":"object","title":"Levels","description":"For categorical variables: a dictionary of possible values (keys) and their descriptions (values).","patternProperties":{"^.+$":{"anyOf":[{"type":"string"},{"type":"object","properties":{"Description":{"type":"string"},"TermURL":{"$ref":"#/definitions/TermURL"}}}]}}},"TermURL":{"$ref":"#/definitions/TermURL"},"HED":{"anyOf":[{"type":"object","title":"HED","description":"For categorical variables: a dictionary of possible values (keys) and their HED strings (values).","patternProperties":{"^.+$":{"type":"string"}}},{"type":"string","title":"HED","description":"For value variables: a string with a single \'#\' character where the cell value is to be interpolated."}]}}}}}')},7735:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"IntendedFor":{"type":"string","minLength":1},"FiducialsDescription":{"type":"string","minLength":1},"FiducialsCoordinates":{"$ref":"common_definitions.json#/definitions/LandmarkCoordinates"},"FiducialsCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"FiducialsCoordinateSystemDescription":{"type":"string","minLength":1},"FiducialsCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"EEGCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"EEGCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"EEGCoordinateSystemDescription":{"type":"string","minLength":1},"AnatomicalLandmarkCoordinates":{"$ref":"common_definitions.json#/definitions/LandmarkCoordinates"},"AnatomicalLandmarkCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"AnatomicalLandmarkCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"AnatomicalLandmarkCoordinateSystemDescription":{"type":"string","minLength":1}},"required":["EEGCoordinateSystem","EEGCoordinateUnits"],"additionalProperties":false,"allOf":[{"$ref":"#/dependency-definitions/if-EEGCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-FiducialsCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-AnatomicalLandmarkCoordinateSystem-is-Other-then-Description-is-required"}],"dependency-definitions":{"if-EEGCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"EEGCoordinateSystem":{"const":"Other"}},"required":["EEGCoordinateSystem"]},"then":{"required":["EEGCoordinateSystemDescription"]}},"if-FiducialsCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"FiducialsCoordinateSystem":{"const":"Other"}},"required":["FiducialsCoordinateSystem"]},"then":{"required":["FiducialsCoordinateSystemDescription"]}},"if-AnatomicalLandmarkCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"AnatomicalLandmarkCoordinateSystem":{"const":"Other"}},"required":["AnatomicalLandmarkCoordinateSystem"]},"then":{"required":["AnatomicalLandmarkCoordinateSystemDescription"]}}}}')},920:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"IntendedFor":{"type":"string","minLength":1},"iEEGCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/iEEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"iEEGCoordinateUnits":{"type":"string","enum":["m","mm","cm","pixels","n/a"]},"iEEGCoordinateSystemDescription":{"type":"string","minLength":1},"iEEGCoordinateProcessingDescription":{"type":"string","minLength":1},"iEEGCoordinateProcessingReference":{"type":"string","minLength":1}},"required":["iEEGCoordinateSystem","iEEGCoordinateUnits"],"additionalProperties":false,"allOf":[{"$ref":"#/dependency-definitions/if-iEEGCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-iEEGCoordinateSystem-is-Pixels-then-iEEGCoordinateUnits-must-be-pixels"}],"dependency-definitions":{"if-iEEGCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"iEEGCoordinateSystem":{"const":"Other"}},"required":["iEEGCoordinateSystem"]},"then":{"required":["iEEGCoordinateSystemDescription"]}},"if-iEEGCoordinateSystem-is-Pixels-then-iEEGCoordinateUnits-must-be-pixels":{"if":{"type":"object","properties":{"iEEGCoordinateSystem":{"const":"Pixels"}},"required":["iEEGCoordinateSystem"]},"then":{"type":"object","properties":{"iEEGCoordinateUnits":{"type":"string","enum":["pixels"]}},"required":["iEEGCoordinateUnits"]}}}}')},6829:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"MEGCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"MEGCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"MEGCoordinateSystemDescription":{"type":"string","minLength":1},"EEGCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"EEGCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"EEGCoordinateSystemDescription":{"type":"string","minLength":1},"IntendedFor":{"anyOf":[{"type":"array","items":{"type":"string","minLength":1}},{"type":"string","minLength":1}]},"FiducialsDescription":{"type":"string","minLength":1},"HeadCoilCoordinates":{"$ref":"common_definitions.json#/definitions/LandmarkCoordinates"},"HeadCoilCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"HeadCoilCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"HeadCoilCoordinateSystemDescription":{"type":"string","minLength":1},"AnatomicalLandmarkCoordinates":{"$ref":"common_definitions.json#/definitions/LandmarkCoordinates"},"AnatomicalLandmarkCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"AnatomicalLandmarkCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"AnatomicalLandmarkCoordinateSystemDescription":{"type":"string","minLength":1},"DigitizedHeadPoints":{"type":"string"},"DigitizedHeadPointsCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"DigitizedHeadPointsCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"DigitizedHeadPointsCoordinateSystemDescription":{"type":"string","minLength":1}},"required":["MEGCoordinateSystem","MEGCoordinateUnits"],"additionalProperties":false,"allOf":[{"$ref":"#/dependency-definitions/if-MEGCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-EEGCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-HeadCoilCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-AnatomicalLandmarkCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-DigitizedHeadPointsCoordinateSystem-is-Other-then-Description-is-required"}],"dependency-definitions":{"if-MEGCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"MEGCoordinateSystem":{"const":"Other"}},"required":["MEGCoordinateSystem"]},"then":{"required":["MEGCoordinateSystemDescription"]}},"if-EEGCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"EEGCoordinateSystem":{"const":"Other"}},"required":["EEGCoordinateSystem"]},"then":{"required":["EEGCoordinateSystemDescription"]}},"if-HeadCoilCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"HeadCoilCoordinateSystem":{"const":"Other"}},"required":["HeadCoilCoordinateSystem"]},"then":{"required":["HeadCoilCoordinateSystemDescription"]}},"if-AnatomicalLandmarkCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"AnatomicalLandmarkCoordinateSystem":{"const":"Other"}},"required":["AnatomicalLandmarkCoordinateSystem"]},"then":{"required":["AnatomicalLandmarkCoordinateSystemDescription"]}},"if-DigitizedHeadPointsCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"DigitizedHeadPointsCoordinateSystem":{"const":"Other"}},"required":["DigitizedHeadPointsCoordinateSystem"]},"then":{"required":["DigitizedHeadPointsCoordinateSystemDescription"]}}}}')},9890:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"IntendedFor":{"type":"string","minLength":1},"FiducialsDescription":{"type":"string","minLength":1},"FiducialsCoordinates":{"$ref":"common_definitions.json#/definitions/LandmarkCoordinates"},"FiducialsCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"FiducialsCoordinateSystemDescription":{"type":"string","minLength":1},"FiducialsCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"NIRSCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"NIRSCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"NIRSCoordinateSystemDescription":{"type":"string","minLength":1},"AnatomicalLandmarkCoordinates":{"$ref":"common_definitions.json#/definitions/LandmarkCoordinates"},"AnatomicalLandmarkCoordinateSystem":{"anyOf":[{"$ref":"common_definitions.json#/definitions/MEGCoordSys"},{"$ref":"common_definitions.json#/definitions/EEGCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateCoordSys"},{"$ref":"common_definitions.json#/definitions/StandardTemplateDeprecatedCoordSys"}]},"AnatomicalLandmarkCoordinateUnits":{"$ref":"common_definitions.json#/definitions/CoordUnits"},"AnatomicalLandmarkCoordinateSystemDescription":{"type":"string","minLength":1},"NIRSCoordinateProcessingDescription":{"type":"string","minLength":1}},"required":["NIRSCoordinateSystem","NIRSCoordinateUnits"],"additionalProperties":false,"allOf":[{"$ref":"#/dependency-definitions/if-NIRSCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-FiducialsCoordinateSystem-is-Other-then-Description-is-required"},{"$ref":"#/dependency-definitions/if-AnatomicalLandmarkCoordinateSystem-is-Other-then-Description-is-required"}],"dependency-definitions":{"if-NIRSCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"NIRSCoordinateSystem":{"const":"Other"}},"required":["NIRSCoordinateSystem"]},"then":{"required":["NIRSCoordinateSystemDescription"]}},"if-FiducialsCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"FiducialsCoordinateSystem":{"const":"Other"}},"required":["FiducialsCoordinateSystem"]},"then":{"required":["FiducialsCoordinateSystemDescription"]}},"if-AnatomicalLandmarkCoordinateSystem-is-Other-then-Description-is-required":{"if":{"type":"object","properties":{"AnatomicalLandmarkCoordinateSystem":{"const":"Other"}},"required":["AnatomicalLandmarkCoordinateSystem"]},"then":{"required":["AnatomicalLandmarkCoordinateSystemDescription"]}}}}')},5340:function(e){"use strict";e.exports=JSON.parse('{"type":"object","patternProperties":{"^.+$":{"$ref":"common_definitions.json#/definitions/ColumnDescription"}}}')},1045:function(e){"use strict";e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-06/schema#","$id":"http://example.com/example.json","type":"object","properties":{"Name":{"type":"string"},"BIDSVersion":{"type":"string"},"HEDVersion":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string","pattern":"^(?:[a-zA-Z]+:)?(?:[a-zA-Z]+_)?(?:0|[1-9]\\\\d*)\\\\.(?:0|[1-9]\\\\d*)\\\\.(?:0|[1-9]\\\\d*)(?:-(?:(?:0|[1-9]\\\\d*|\\\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\\+(?:[0-9a-zA-Z-]+(?:\\\\.[0-9a-zA-Z-]+)*))?$"}}]},"DatasetType":{"type":"string","enum":["raw","derivative"]},"License":{"type":"string"},"Authors":{"items":{"type":"string"},"type":"array"},"Acknowledgements":{"type":"string"},"HowToAcknowledge":{"type":"string"},"Funding":{"items":{"type":"string"},"type":"array"},"EthicsApprovals":{"items":{"type":"string"},"type":"array"},"ReferencesAndLinks":{"items":{"type":"string"},"type":"array"},"DatasetDOI":{"type":"string"},"DatasetLinks":{"type":"object","properties":{},"propertyNames":{"type":"string","minLength":1,"pattern":"^[a-zA-Z0-9]*$"},"additionalProperties":{"type":"string","format":"uri-reference"}},"GeneratedBy":{"type":"array","minItems":1,"items":{"type":"object","properties":{"Name":{"type":"string"},"Version":{"type":"string"},"Description":{"type":"string"},"CodeURL":{"type":"string","format":"uri"},"Container":{"type":"object","properties":{"Type":{"type":"string"},"Tag":{"type":"string"},"URI":{"type":"string","format":"uri"}}}}}},"SourceDatasets":{"type":"array","items":{"type":"object","properties":{"URL":{"type":"string","format":"uri"},"DOI":{"type":"string"},"Version":{"type":"string"}}}},"Genetics":{"type":"object","properties":{"Database":{"type":"string","format":"uri"},"Dataset":{"type":"string","format":"uri"},"Descriptors":{"items":{"type":"string"},"type":["array","string"]}}}},"required":["Name","BIDSVersion"],"allOf":[{"$ref":"#/dependency-definitions/if-DatasetType-is-derivative-then-GeneratedBy-is-required"}],"dependency-definitions":{"if-DatasetType-is-derivative-then-GeneratedBy-is-required":{"if":{"type":"object","properties":{"DatasetType":{"const":"derivative"}},"required":["DatasetType"]},"then":{"required":["GeneratedBy"]}}}}')},8876:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"TaskName":{"$ref":"common_definitions.json#/definitions/TaskName"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"InstitutionName":{"$ref":"common_definitions.json#/definitions/InstitutionName"},"InstitutionAddress":{"$ref":"common_definitions.json#/definitions/InstitutionAddress"},"InstitutionalDepartmentName":{"$ref":"common_definitions.json#/definitions/InstitutionalDepartmentName"},"Manufacturer":{"$ref":"common_definitions.json#/definitions/Manufacturer"},"ManufacturersModelName":{"type":"string","minLength":1},"DeviceSerialNumber":{"$ref":"common_definitions.json#/definitions/DeviceSerialNumber"},"SoftwareVersions":{"$ref":"common_definitions.json#/definitions/SoftwareVersions"},"PowerLineFrequency":{"$ref":"common_definitions.json#/definitions/PowerLineFrequency"},"SamplingFrequency":{"$ref":"common_definitions.json#/definitions/SamplingFrequency"},"EEGChannelCount":{"$ref":"common_definitions.json#/definitions/EEGChannelCount"},"EOGChannelCount":{"$ref":"common_definitions.json#/definitions/EOGChannelCount"},"ECGChannelCount":{"$ref":"common_definitions.json#/definitions/ECGChannelCount"},"EMGChannelCount":{"$ref":"common_definitions.json#/definitions/EMGChannelCount"},"MiscChannelCount":{"$ref":"common_definitions.json#/definitions/MiscChannelCount"},"TriggerChannelCount":{"$ref":"common_definitions.json#/definitions/TriggerChannelCount"},"EEGPlacementScheme":{"type":"string"},"EEGReference":{"type":"string"},"EEGGround":{"type":"string"},"CapManufacturer":{"type":"string"},"CapManufacturersModelName":{"type":"string"},"HeadCircumference":{"type":"number","exclusiveMinimum":0},"HardwareFilters":{"$ref":"common_definitions.json#/definitions/HardwareFilters"},"SoftwareFilters":{"$ref":"common_definitions.json#/definitions/SoftwareFilters"},"RecordingDuration":{"$ref":"common_definitions.json#/definitions/RecordingDuration"},"RecordingType":{"$ref":"common_definitions.json#/definitions/RecordingType"},"EpochLength":{"$ref":"common_definitions.json#/definitions/EpochLength"},"SubjectArtefactDescription":{"type":"string"},"ElectricalStimulation":{"type":"boolean"},"ElectricalStimulationParameters":{"type":"string"}},"required":["TaskName","SamplingFrequency","SoftwareFilters","EEGReference","PowerLineFrequency"],"additionalProperties":false}')},7298:function(e){"use strict";e.exports=JSON.parse('{"type":"object","patternProperties":{"^.+$":{"$ref":"common_definitions.json#/definitions/ColumnDescription"}},"properties":{"StimulusPresentation":{"type":"object","properties":{"OperatingSystem":{"type":"string"},"SoftwareName":{"type":"string"},"SoftwareRRID":{"type":"string","pattern":".+_.+"},"SoftwareVersion":{"type":"string"},"Code":{"type":"string","format":"uri"}}}}}')},7140:function(e){"use strict";e.exports=JSON.parse('{"type":"object","definitions":{"GeneticLevelEnum":{"type":"string","enum":["Genetic","Genomic","Epigenomic","Transcriptomic","Metabolomic","Proteomic"]}},"properties":{"GeneticLevel":{"anyof":[{"type":"array","items":{"$ref":"#/definitions/GeneticLevelEnum"}},{"$ref":"#/definitions/GeneticLevelEnum"}]},"AnalyticalApproach":{"items":{"type":"string"},"type":["array","string"]},"SampleOrigin":{"type":"string","enum":["blood","saliva","brain","csf","breast milk","bile","amniotic fluid","other biospecimen"]},"TissueOrigin":{"type":"string","enum":["gray matter","white matter","csf","meninges","macrovascular","microvascular"]},"BrainLocation":{"type":"string"},"CellType":{"type":"string"}},"required":["GeneticLevel","SampleOrigin"],"additionalProperties":false}')},1983:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"TaskName":{"$ref":"common_definitions.json#/definitions/TaskName"},"SamplingFrequency":{"$ref":"common_definitions.json#/definitions/SamplingFrequency"},"PowerLineFrequency":{"$ref":"common_definitions.json#/definitions/PowerLineFrequency"},"DCOffsetCorrection":{"type":"string","minLength":1},"SoftwareFilters":{"$ref":"common_definitions.json#/definitions/SoftwareFilters"},"HardwareFilters":{"$ref":"common_definitions.json#/definitions/HardwareFilters"},"Manufacturer":{"$ref":"common_definitions.json#/definitions/Manufacturer"},"ManufacturersModelName":{"type":"string"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"InstitutionName":{"$ref":"common_definitions.json#/definitions/InstitutionName"},"InstitutionAddress":{"$ref":"common_definitions.json#/definitions/InstitutionAddress"},"InstitutionalDepartmentName":{"$ref":"common_definitions.json#/definitions/InstitutionalDepartmentName"},"DeviceSerialNumber":{"$ref":"common_definitions.json#/definitions/DeviceSerialNumber"},"ECOGChannelCount":{"type":"integer","minimum":0},"SEEGChannelCount":{"type":"integer","minimum":0},"EEGChannelCount":{"$ref":"common_definitions.json#/definitions/EEGChannelCount"},"EOGChannelCount":{"$ref":"common_definitions.json#/definitions/EOGChannelCount"},"ECGChannelCount":{"$ref":"common_definitions.json#/definitions/ECGChannelCount"},"EMGChannelCount":{"$ref":"common_definitions.json#/definitions/EMGChannelCount"},"MiscChannelCount":{"$ref":"common_definitions.json#/definitions/MiscChannelCount"},"TriggerChannelCount":{"$ref":"common_definitions.json#/definitions/TriggerChannelCount"},"RecordingDuration":{"$ref":"common_definitions.json#/definitions/RecordingDuration"},"RecordingType":{"$ref":"common_definitions.json#/definitions/RecordingType"},"EpochLength":{"$ref":"common_definitions.json#/definitions/EpochLength"},"SubjectArtefactDescription":{"type":"string"},"SoftwareVersions":{"$ref":"common_definitions.json#/definitions/SoftwareVersions"},"iEEGReference":{"type":"string"},"ElectrodeManufacturer":{"type":"string"},"ElectrodeManufacturersModelName":{"type":"string"},"iEEGGround":{"type":"string"},"iEEGPlacementScheme":{"type":"string"},"iEEGElectrodeGroups":{"type":"string"},"ElectricalStimulation":{"type":"boolean"},"ElectricalStimulationParameters":{"type":"string"}},"required":["TaskName","SamplingFrequency","PowerLineFrequency","SoftwareFilters","iEEGReference"],"additionalProperties":false}')},7325:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"TaskName":{"$ref":"common_definitions.json#/definitions/TaskName"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"InstitutionName":{"$ref":"common_definitions.json#/definitions/InstitutionName"},"InstitutionAddress":{"$ref":"common_definitions.json#/definitions/InstitutionAddress"},"InstitutionalDepartmentName":{"$ref":"common_definitions.json#/definitions/InstitutionalDepartmentName"},"Manufacturer":{"$ref":"common_definitions.json#/definitions/Manufacturer"},"ManufacturersModelName":{"type":"string","minLength":1},"DeviceSerialNumber":{"$ref":"common_definitions.json#/definitions/DeviceSerialNumber"},"SoftwareVersions":{"$ref":"common_definitions.json#/definitions/SoftwareVersions"},"PowerLineFrequency":{"$ref":"common_definitions.json#/definitions/PowerLineFrequency"},"SamplingFrequency":{"$ref":"common_definitions.json#/definitions/SamplingFrequency"},"MEGChannelCount":{"type":"integer","minimum":0},"MEGREFChannelCount":{"type":"integer","minimum":0},"EEGChannelCount":{"$ref":"common_definitions.json#/definitions/EEGChannelCount"},"ECOGChannelCount":{"type":"integer","minimum":0},"SEEGChannelCount":{"type":"integer","minimum":0},"EOGChannelCount":{"$ref":"common_definitions.json#/definitions/EOGChannelCount"},"ECGChannelCount":{"$ref":"common_definitions.json#/definitions/ECGChannelCount"},"EMGChannelCount":{"$ref":"common_definitions.json#/definitions/EMGChannelCount"},"MiscChannelCount":{"$ref":"common_definitions.json#/definitions/MiscChannelCount"},"TriggerChannelCount":{"$ref":"common_definitions.json#/definitions/TriggerChannelCount"},"EEGPlacementScheme":{"type":"string"},"EEGReference":{"type":"string"},"CapManufacturer":{"type":"string"},"CapManufacturersModelName":{"type":"string"},"DewarPosition":{"type":"string"},"HardwareFilters":{"$ref":"common_definitions.json#/definitions/HardwareFilters"},"SoftwareFilters":{"$ref":"common_definitions.json#/definitions/SoftwareFilters"},"RecordingDuration":{"$ref":"common_definitions.json#/definitions/RecordingDuration"},"RecordingType":{"$ref":"common_definitions.json#/definitions/RecordingType"},"EpochLength":{"$ref":"common_definitions.json#/definitions/EpochLength"},"ContinuousHeadLocalization":{"type":"boolean"},"HeadCoilFrequency":{"anyOf":[{"type":"number"},{"type":"array","items":{"type":"number"}}]},"AssociatedEmptyRoom":{"anyOf":[{"type":"array","items":{"type":"string","minLength":1}},{"type":"string","minLength":1}]},"MaxMovement":{"type":"number"},"SubjectArtefactDescription":{"type":"string"},"DigitizedLandmarks":{"type":"boolean"},"DigitizedHeadPoints":{"type":"boolean"},"ElectricalStimulation":{"type":"boolean"},"ElectricalStimulationParameters":{"type":"string"}},"required":["TaskName","SamplingFrequency","PowerLineFrequency","DewarPosition","SoftwareFilters","DigitizedLandmarks","DigitizedHeadPoints"],"additionalProperties":false}')},9430:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"Manufacturer":{"type":"string","minLength":1},"ManufacturersModelName":{"type":"string","minLength":1},"DeviceSerialNumber":{"type":"string","minLength":1},"StationName":{"type":"string","minLength":1},"SoftwareVersions":{"type":"string","minLength":1},"InstitutionName":{"type":"string","minLength":1},"InstitutionAddress":{"type":"string","minLength":1},"InstitutionalDepartmentName":{"type":"string","minLength":1},"BodyPart":{"type":"string","minLength":1},"BodyPartDetails":{"type":"string","minLength":1},"BodyPartDetailsOntology":{"type":"string","minLength":1,"format":"uri"},"SampleEnvironment":{"type":"string","minLength":1,"enum":["in vivo","ex vivo","in vitro"]},"SampleEmbedding":{"type":"string","minLength":1},"SampleFixation":{"type":"string","minLength":1},"SampleStaining":{"anyOf":[{"type":"string","minLength":1},{"type":"array","items":{"type":"string"}}]},"SamplePrimaryAntibody":{"anyOf":[{"type":"string","minLength":1},{"type":"array","items":{"type":"string"}}]},"SampleSecondaryAntibody":{"anyOf":[{"type":"string","minLength":1},{"type":"array","items":{"type":"string"}}]},"SliceThickness":{"type":"number","exclusiveMinimum":0},"SampleExtractionProtocol":{"type":"string","minLength":1},"SampleExtractionInstitution":{"type":"string","minLength":1},"TissueDeformationScaling":{"type":"number"},"PixelSize":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number","minimum":0}},"PixelSizeUnits":{"type":"string","enum":["mm","um","nm"]},"Immersion":{"type":"string","minLength":1},"NumericalAperture":{"type":"number","exclusiveMinimum":0},"Magnification":{"type":"number","exclusiveMinimum":0},"ImageAcquisitionProtocol":{"type":"string","minLength":1},"OtherAcquisitionParameters":{"type":"string","minLength":1},"ChunkTransformationMatrix":{"anyOf":[{"type":"array","minItems":3,"maxItems":3,"items":{"type":"array","minItems":3,"maxItems":3,"items":{"type":"number"}}},{"type":"array","minItems":4,"maxItems":4,"items":{"type":"array","minItems":4,"maxItems":4,"items":{"type":"number"}}}]},"ChunkTransformationMatrixAxis":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"string"}}},"required":["PixelSize","PixelSizeUnits"],"recommended":["Manufacturer","ManufacturersModelName","DeviceSerialNumber","StationName","SoftwareVersions","InstitutionName","InstitutionAddress","InstitutionalDepartmentName","BodyPart","BodyPartDetails","SampleEnvironment","SampleStaining","SamplePrimaryAntibody","SampleSecondaryAntibody"],"dependencies":{"PixelSize":["PixelSizeUnits"],"ChunkTransformationMatrix":["ChunkTransformationMatrixAxis"]}}')},7100:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"PhotoDescription":{"type":"string","minLength":1},"IntendedFor":{"anyOf":[{"type":"string","minLength":1},{"type":"array","items":{"type":"string","minLength":1},"minItems":1}]}}}')},9435:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"TaskName":{"$ref":"common_definitions.json#/definitions/TaskName"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"InstitutionName":{"$ref":"common_definitions.json#/definitions/InstitutionName"},"InstitutionAddress":{"$ref":"common_definitions.json#/definitions/InstitutionAddress"},"InstitutionalDepartmentName":{"$ref":"common_definitions.json#/definitions/InstitutionalDepartmentName"},"EpochLength":{"$ref":"common_definitions.json#/definitions/EpochLength"},"RecordingType":{"$ref":"common_definitions.json#/definitions/RecordingType"},"SubjectArtefactDescription":{"type":"string"},"MotionChannelCount":{"type":"number"},"TrackingSystemName":{"type":"string"},"DeviceSerialNumber":{"$ref":"common_definitions.json#/definitions/DeviceSerialNumber"},"SoftwareVersions":{"$ref":"common_definitions.json#/definitions/SoftwareVersions"},"Manufacturer":{"$ref":"common_definitions.json#/definitions/Manufacturer"},"ManufacturersModelName":{"type":"string","minLength":1},"TrackedPointsCount":{"type":"number"},"RecordingDuration":{"$ref":"common_definitions.json#/definitions/RecordingDuration"},"SamplingFrequency":{"$ref":"common_definitions.json#/definitions/SamplingFrequency"},"SamplingFrequencyEffective":{"type":"number"},"SoftwareFilters":{"$ref":"common_definitions.json#/definitions/SoftwareFilters"},"ACCELChannelCount":{"type":"number"},"ANGACCELChannelCount":{"type":"number"},"GYROChannelCount":{"type":"number"},"JNTANGChannelCount":{"type":"number"},"MAGNChannelCount":{"type":"number"},"MISCChannelCount":{"type":"number"},"ORNTChannelCount":{"type":"number"},"POSChannelCount":{"type":"number"},"VELChannelCount":{"type":"number"},"LATENCYChannelCount":{"type":"number"},"MissingValues":{"type":"string"}},"required":["TaskName","SamplingFrequency"],"additionalProperties":false}')},7618:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"TaskName":{"$ref":"common_definitions.json#/definitions/TaskName"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"InstitutionName":{"$ref":"common_definitions.json#/definitions/InstitutionName"},"InstitutionalDepartmentName":{"type":"string"},"InstitutionAddress":{"$ref":"common_definitions.json#/definitions/InstitutionAddress"},"Manufacturer":{"$ref":"common_definitions.json#/definitions/Manufacturer"},"ManufacturersModelName":{"type":"string","minLength":1},"DeviceSerialNumber":{"$ref":"common_definitions.json#/definitions/DeviceSerialNumber"},"SoftwareVersions":{"$ref":"common_definitions.json#/definitions/SoftwareVersions"},"PowerLineFrequency":{"$ref":"common_definitions.json#/definitions/PowerLineFrequency"},"SamplingFrequency":{"anyOf":[{"$ref":"common_definitions.json#/definitions/SamplingFrequency"},{"enum":["n/a"]}]},"NIRSChannelCount":{"$ref":"common_definitions.json#/definitions/NIRSChannelCount"},"NIRSSourceOptodeCount":{"$ref":"common_definitions.json#/definitions/NIRSSourceOptodeCount"},"NIRSDetectorOptodeCount":{"$ref":"common_definitions.json#/definitions/NIRSDetectorOptodeCount"},"EEGChannelCount":{"$ref":"common_definitions.json#/definitions/EEGChannelCount"},"EOGChannelCount":{"$ref":"common_definitions.json#/definitions/EOGChannelCount"},"ECGChannelCount":{"$ref":"common_definitions.json#/definitions/ECGChannelCount"},"EMGChannelCount":{"$ref":"common_definitions.json#/definitions/EMGChannelCount"},"MiscChannelCount":{"$ref":"common_definitions.json#/definitions/MiscChannelCount"},"TriggerChannelCount":{"$ref":"common_definitions.json#/definitions/TriggerChannelCount"},"NIRSPlacementScheme":{"type":"string"},"CapManufacturer":{"type":"string"},"CapManufacturersModelName":{"type":"string"},"HeadCircumference":{"type":"number","exclusiveMinimum":0},"SourceType":{"type":"string"},"ShortChannelCount":{"type":"number","exclusiveMinimum":0,"recommends_tsv_non_custom_columns":["short_channel"]},"HardwareFilters":{"$ref":"common_definitions.json#/definitions/HardwareFilters"},"SoftwareFilters":{"$ref":"common_definitions.json#/definitions/SoftwareFilters"},"RecordingDuration":{"$ref":"common_definitions.json#/definitions/RecordingDuration"},"RecordingType":{"$ref":"common_definitions.json#/definitions/RecordingType"},"SubjectArtefactDescription":{"type":"string"},"ACCELChannelCount":{"type":"number"},"GYROChannelCount":{"type":"number"},"MAGNChannelCount":{"type":"number"}},"required":["TaskName","SamplingFrequency","NIRSChannelCount","NIRSSourceOptodeCount","NIRSDetectorOptodeCount"],"required_if_tsv_value_present":{"ACCELChannelCount":{"header":"type","value":"ACC"},"MAGNChannelCount":{"header":"type","value":"MAGN"},"GYROChannelCount":{"header":"type","value":"GYRO"}},"additionalProperties":false}')},9885:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"Manufacturer":{"type":"string","minLength":1},"ManufacturersModelName":{"type":"string","minLength":1},"Units":{"type":"string","minLength":1},"TracerName":{"type":"string","minLength":1},"TracerRadionuclide":{"type":"string","minLength":1},"InstitutionName":{"type":"string","minLength":1},"InstitutionAddress":{"type":"string","minLength":1},"InstitutionalDepartmentName":{"$ref":"common_definitions.json#/definitions/InstitutionalDepartmentName"},"BodyPart":{"type":"string","minLength":1},"TracerRadLex":{"type":"string","minLength":1},"TracerSNOMED":{"type":"string","minLength":1},"TracerMolecularWeight":{"type":"number"},"TracerMolecularWeightUnits":{"type":"string","minLength":1},"PharmaceuticalName":{"type":"string","minLength":1},"PharmaceuticalDoseAmount":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number"}}]},"PharmaceuticalDoseUnits":{"type":"string","minLength":1},"PharmaceuticalDoseRegimen":{"type":"string","minLength":1},"PharmaceuticalDoseTime":{"anyOf":[{"type":"number"},{"type":"array","items":{"type":"number"}}]},"Anaesthesia":{"type":"string","minLength":1},"ModeOfAdministration":{"type":"string","minLength":1},"InjectedRadioactivity":{"type":"number"},"InjectedRadioactivityUnits":{"type":"string","minLength":1},"InjectedMass":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^n/a$"}]},"InjectedMassUnits":{"type":"string","minLength":1},"SpecificRadioactivity":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^n/a$"}]},"SpecificRadioactivityUnits":{"type":"string","minLength":1},"InjectedMassPerWeight":{"type":"number"},"InjectedMassPerWeightUnits":{"type":"string","minLength":1},"SpecificRadioactivityMeasTime":{"type":"string","pattern":"^(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$"},"MolarActivity":{"type":"number"},"MolarActivityUnits":{"type":"string","minLength":1},"MolarActivityMeasTime":{"type":"string","pattern":"^(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$"},"InfusionRadioactivity":{"type":"number"},"InfusionStart":{"type":"number"},"InfusionSpeed":{"type":"number"},"InfusionSpeedUnits":{"type":"string","minLength":1},"InjectedVolume":{"type":"number"},"Purity":{"type":"number"},"TimeZero":{"type":"string","pattern":"^(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$"},"ScanStart":{"type":"number"},"InjectionStart":{"type":"number"},"FrameTimesStart":{"type":"array","items":{"type":"number"}},"FrameDuration":{"type":"array","items":{"type":"number"}},"ScanDate":{"type":"string","pattern":"date"},"InjectionEnd":{"type":"number"},"AcquisitionMode":{"type":"string","minLength":1},"ImageDecayCorrected":{"type":"boolean"},"ImageDecayCorrectionTime":{"type":"number"},"ReconMethodName":{"type":"string","minLength":1},"ReconMethodParameterLabels":{"type":"array","items":{"type":"string"}},"ReconMethodParameterUnits":{"type":"array","items":{"type":"string"}},"ReconMethodParameterValues":{"type":"array","items":{"type":"number"}},"ReconFilterType":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"ReconFilterSize":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number"}}]},"ReconMethodImplementationVersion":{"type":"string","minLength":1},"AttenuationCorrection":{"type":"string","minLength":1},"AttenuationCorrectionMethodReference":{"type":"string","minLength":1},"ScaleFactor":{"type":"array","items":{"type":"number"}},"ScatterFraction":{"type":"array","items":{"type":"number"}},"DecayCorrectionFactor":{"type":"array","items":{"type":"number"}},"DoseCalibrationFactor":{"type":"number","items":{"type":"number"}},"PromptRate":{"type":"array","items":{"type":"number"}},"RandomRate":{"type":"array","items":{"type":"number"}},"SinglesRate":{"type":"array","items":{"type":"number"}},"CogAtlasID":{"$ref":"common_definitions.json#/definitions/CogAtlasID"},"CogPOID":{"$ref":"common_definitions.json#/definitions/CogPOID"},"TaskName":{"type":"string"},"TaskDescription":{"$ref":"common_definitions.json#/definitions/TaskDescription"},"Instructions":{"$ref":"common_definitions.json#/definitions/Instructions"}},"required":["Manufacturer","ManufacturersModelName","Units","TracerName","TracerRadionuclide","ModeOfAdministration","InjectedRadioactivity","InjectedRadioactivityUnits","InjectedMass","InjectedMassUnits","SpecificRadioactivity","SpecificRadioactivityUnits","TimeZero","ScanStart","InjectionStart","FrameTimesStart","FrameDuration","AcquisitionMode","ImageDecayCorrected","ImageDecayCorrectionTime","ReconMethodName","ReconMethodParameterLabels","ReconFilterType","AttenuationCorrection"],"allOf":[{"$ref":"#/dependency-definitions/if-ReconMethodParameterLabels-then-Units-and-Values"},{"$ref":"#/dependency-definitions/if-bolus-infusion-then-infusion-details"},{"$ref":"#/dependency-definitions/if-ReconFilterType-then-ReconFilterSize"}],"dependencies":{"TracerMolecularWeight":["TracerMolecularWeightUnits"],"InjectedRadioactivity":["InjectedRadioactivityUnits"],"InjectedMassPerWeight":["InjectedMassPerWeightUnits"],"MolarActivity":["MolarActivityUnits"],"InfusionSpeed":["InfusionSpeedUnits"],"ReconMethodParameterLabels":["ReconMethodParameterUnits","ReconMethodParameterValues"]},"dependency-definitions":{"if-ReconMethodParameterLabels-then-Units-and-Values":{"if":{"type":"object","properties":{"ReconMethodParameterLabels":{"const":"none"}},"required":["ReconMethodParameterLabels"]},"then":{},"else":{"required":["ReconMethodParameterUnits","ReconMethodParameterValues"]}},"if-bolus-infusion-then-infusion-details":{"if":{"type":"object","properties":{"ModeOfAdministration":{"const":"bolus-infusion"}},"required":["ModeOfAdministration"]},"then":{"required":["InfusionRadioactivity","InfusionStart","InfusionSpeed","InfusionSpeedUnits","InjectedVolume"]}},"if-ReconFilterType-then-ReconFilterSize":{"if":{"type":"object","properties":{"ReconFilterType":{"const":"none"}},"required":["ReconFilterType"]},"then":{},"else":{"required":["ReconFilterSize"]}}}}')},524:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"PlasmaAvail":{"default":false,"type":"boolean","requires_tsv_non_custom_columns":["plasma_radioactivity"]},"PlasmaFreeFraction":{"type":"number","min":0,"max":1},"PlasmaFreeFractionMethod":{"type":"string","minLength":1},"MetaboliteAvail":{"default":false,"type":"boolean","requires_tsv_non_custom_columns":["metabolite_parent_fraction"]},"MetaboliteMethod":{"type":"string","minLength":1},"MetaboliteRecoveryCorrectionApplied":{"type":"boolean","requires_tsv_non_custom_columns":["hplc_recovery_fractions"]},"WithdrawalRate":{"type":"number"},"TubingType":{"type":"string"},"TubingLength":{"type":"number"},"TubingLengthUnits":{"type":"string"},"DispersionConstant":{"type":"number"},"DispersionCorrected":{"type":"boolean"},"WholeBloodAvail":{"default":false,"type":"boolean","requires_tsv_non_custom_columns":["whole_blood_radioactivity"]},"Haematocrit":{"type":"number"},"BloodDensity":{"type":"number"}},"allOf":[{"if":{"properties":{"MetaboliteAvail":{"enum":[true]}}},"then":{"required":["MetaboliteMethod","MetaboliteRecoveryCorrectionApplied"]}}],"required":["MetaboliteAvail","PlasmaAvail","WholeBloodAvail","DispersionCorrected"]}')},3737:function(e){"use strict";e.exports=JSON.parse('{"type":"object","properties":{"SamplingFrequency":{"type":"number","exclusiveMinimum":0},"StartTime":{"type":"number"},"Columns":{"type":"array","items":{"type":"string","minLength":1}},"Manufacturer":{"type":"string"},"ManufacturersModelName":{"type":"string"},"SoftwareVersions":{"type":"string"},"DeviceSerialNumber":{"type":"string"}},"required":["SamplingFrequency","StartTime","Columns"]}')}},function(e){e.O(0,[33,278,379,996,23,246,888,774,179],function(){return e(e.s=2766)}),_N_E=e.O()}]);